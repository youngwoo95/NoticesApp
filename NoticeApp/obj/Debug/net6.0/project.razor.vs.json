{"SerializedFilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\obj\\Debug\\net6.0\\project.razor.vs.json","FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\NoticeApp.csproj","Configuration":{"ConfigurationName":"MVC-3.0","LanguageVersion":"6.0","Extensions":[{"ExtensionName":"MVC-3.0"}]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":130511397,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Components.DeleteDialog","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DeleteDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.DeleteDialog.OnClick\">\r\n    <summary>\r\n    부모에서 OnClick 속성에 지정한 이벤트 처리기 실행\r\n    </summary>\r\n</member>\r\n","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Components.DeleteDialog","Common.TypeNameIdentifier":"DeleteDialog"}},{"HashCode":591539965,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Components.DeleteDialog","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Components.DeleteDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.DeleteDialog.OnClick\">\r\n    <summary>\r\n    부모에서 OnClick 속성에 지정한 이벤트 처리기 실행\r\n    </summary>\r\n</member>\r\n","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Components.DeleteDialog","Common.TypeNameIdentifier":"DeleteDialog"}},{"HashCode":2018665161,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Components.EditorForm","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditorForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EditorFormTitle","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.EditorFormTitle\">\r\n    <summary>\r\n    폼의 제목 영역\r\n    </summary>\r\n</member>\r\n","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"EditorFormTitle"}},{"Kind":"Components.Component","Name":"Model","TypeName":"NoticeApp.Models.Notice","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.Model\">\r\n    <summary>\r\n    넘어온 모델 개체\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.GloballyQualifiedTypeName":"global::NoticeApp.Models.Notice","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"CreateCallback","TypeName":"System.Action","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.CreateCallback\">\r\n    <summary>\r\n    부모 컴포넌트에게 생성(Create)이 완료되었다고 보고하는 목적으로 부모 컴포넌트에게 알림\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"CreateCallback"}},{"Kind":"Components.Component","Name":"EditCallback","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.EditCallback\">\r\n    <summary>\r\n    부모 컴포넌트에게 수정(Edit)이 완료되었다고 보고하는 목적으로 부모 컴포넌트에게 알림\r\n    </summary>\r\n</member>\r\n","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"EditCallback"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Components.EditorForm","Common.TypeNameIdentifier":"EditorForm"}},{"HashCode":175395840,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Components.EditorForm","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Components.EditorForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EditorFormTitle","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.EditorFormTitle\">\r\n    <summary>\r\n    폼의 제목 영역\r\n    </summary>\r\n</member>\r\n","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"EditorFormTitle"}},{"Kind":"Components.Component","Name":"Model","TypeName":"NoticeApp.Models.Notice","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.Model\">\r\n    <summary>\r\n    넘어온 모델 개체\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.GloballyQualifiedTypeName":"global::NoticeApp.Models.Notice","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"CreateCallback","TypeName":"System.Action","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.CreateCallback\">\r\n    <summary>\r\n    부모 컴포넌트에게 생성(Create)이 완료되었다고 보고하는 목적으로 부모 컴포넌트에게 알림\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"CreateCallback"}},{"Kind":"Components.Component","Name":"EditCallback","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:NoticeApp.Pages.Notices.Components.EditorForm.EditCallback\">\r\n    <summary>\r\n    부모 컴포넌트에게 수정(Edit)이 완료되었다고 보고하는 목적으로 부모 컴포넌트에게 알림\r\n    </summary>\r\n</member>\r\n","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"EditCallback"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Components.EditorForm","Common.TypeNameIdentifier":"EditorForm"}},{"HashCode":2146461256,"Kind":"Components.ChildContent","Name":"NoticeApp.Pages.Notices.Components.EditorForm.EditorFormTitle","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditorFormTitle","ParentTag":"EditorForm"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"NoticeApp.Pages.Notices.Components.EditorForm.EditorFormTitle","Common.TypeNameIdentifier":"EditorForm"}},{"HashCode":394341317,"Kind":"Components.ChildContent","Name":"NoticeApp.Pages.Notices.Components.EditorForm.EditorFormTitle","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditorFormTitle","ParentTag":"NoticeApp.Pages.Notices.Components.EditorForm"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"NoticeApp.Pages.Notices.Components.EditorForm.EditorFormTitle","Common.TypeNameIdentifier":"EditorForm"}},{"HashCode":1733892688,"Kind":"Components.Component","Name":"NoticeApp.Shared.NavMenu","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu"}},{"HashCode":-1605640843,"Kind":"Components.Component","Name":"NoticeApp.Shared.NavMenu","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Shared.NavMenu"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu"}},{"HashCode":-1955502675,"Kind":"Components.Component","Name":"NoticeApp.Shared.SurveyPrompt","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt"}},{"HashCode":930434223,"Kind":"Components.Component","Name":"NoticeApp.Shared.SurveyPrompt","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt"}},{"HashCode":588089186,"Kind":"Components.Component","Name":"NoticeApp.Shared.LoginDisplay","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoginDisplay"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.LoginDisplay","Common.TypeNameIdentifier":"LoginDisplay"}},{"HashCode":2059987076,"Kind":"Components.Component","Name":"NoticeApp.Shared.LoginDisplay","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Shared.LoginDisplay"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.LoginDisplay","Common.TypeNameIdentifier":"LoginDisplay"}},{"HashCode":1544224570,"Kind":"Components.Component","Name":"NoticeApp.Shared.MainLayout","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Body"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":-281780903,"Kind":"Components.Component","Name":"NoticeApp.Shared.MainLayout","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Body"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":842588776,"Kind":"Components.ChildContent","Name":"NoticeApp.Shared.MainLayout.Body","AssemblyName":"NoticeApp","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"NoticeApp.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":-552903694,"Kind":"Components.ChildContent","Name":"NoticeApp.Shared.MainLayout.Body","AssemblyName":"NoticeApp","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"NoticeApp.Shared.MainLayout"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"NoticeApp.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":-1731152213,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Edit","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Edit"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Edit","Common.TypeNameIdentifier":"Edit"}},{"HashCode":1196247614,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Edit","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Edit"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Edit","Common.TypeNameIdentifier":"Edit"}},{"HashCode":2132219387,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Delete","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Delete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Delete","Common.TypeNameIdentifier":"Delete"}},{"HashCode":-778734576,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Delete","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Delete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Delete","Common.TypeNameIdentifier":"Delete"}},{"HashCode":-1397445833,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Index","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Index","Common.TypeNameIdentifier":"Index"}},{"HashCode":-693413899,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Index","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Index"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Index","Common.TypeNameIdentifier":"Index"}},{"HashCode":-501725119,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Create","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Create"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Create","Common.TypeNameIdentifier":"Create"}},{"HashCode":-1154852369,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Create","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Create"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Create","Common.TypeNameIdentifier":"Create"}},{"HashCode":1646896790,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Details","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Details"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Details","Common.TypeNameIdentifier":"Details"}},{"HashCode":-460522784,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Details","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Details"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Details","Common.TypeNameIdentifier":"Details"}},{"HashCode":832303368,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Components.ManageBy","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ManageBy"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Components.ManageBy","Common.TypeNameIdentifier":"ManageBy"}},{"HashCode":542432826,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Components.ManageBy","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Components.ManageBy"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Components.ManageBy","Common.TypeNameIdentifier":"ManageBy"}},{"HashCode":912799923,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Manage","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Manage"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Manage","Common.TypeNameIdentifier":"Manage"}},{"HashCode":130049598,"Kind":"Components.Component","Name":"NoticeApp.Pages.Notices.Manage","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Notices.Manage"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages.Notices","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Notices.Manage","Common.TypeNameIdentifier":"Manage"}},{"HashCode":1405159292,"Kind":"Components.Component","Name":"NoticeApp.Pages.Index","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Index","Common.TypeNameIdentifier":"Index"}},{"HashCode":827676832,"Kind":"Components.Component","Name":"NoticeApp.Pages.Index","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Index"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Index","Common.TypeNameIdentifier":"Index"}},{"HashCode":1536221524,"Kind":"Components.Component","Name":"NoticeApp.Pages.Counter","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Counter"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Counter","Common.TypeNameIdentifier":"Counter"}},{"HashCode":400231561,"Kind":"Components.Component","Name":"NoticeApp.Pages.Counter","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.Counter"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.Counter","Common.TypeNameIdentifier":"Counter"}},{"HashCode":303635257,"Kind":"Components.Component","Name":"NoticeApp.Pages.FetchData","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FetchData"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.FetchData","Common.TypeNameIdentifier":"FetchData"}},{"HashCode":-1448031151,"Kind":"Components.Component","Name":"NoticeApp.Pages.FetchData","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.Pages.FetchData"}],"Metadata":{"Common.TypeNamespace":"NoticeApp.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.Pages.FetchData","Common.TypeNameIdentifier":"FetchData"}},{"HashCode":-1280956473,"Kind":"Components.Component","Name":"NoticeApp.App","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Common.TypeNamespace":"NoticeApp","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.App","Common.TypeNameIdentifier":"App"}},{"HashCode":-104343100,"Kind":"Components.Component","Name":"NoticeApp.App","AssemblyName":"NoticeApp","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoticeApp.App"}],"Metadata":{"Common.TypeNamespace":"NoticeApp","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"NoticeApp.App","Common.TypeNameIdentifier":"App"}},{"HashCode":1991021157,"Kind":"Components.Component","Name":"DulPager.DulPagerComponent","AssemblyName":"DulPager","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DulPagerComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"DulPager.DulPagerBase","Metadata":{"Common.GloballyQualifiedTypeName":"global::DulPager.DulPagerBase","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"PageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"PageIndexChanged"}}],"Metadata":{"Common.TypeNamespace":"DulPager","Runtime.Name":"Components.IComponent","Common.TypeName":"DulPager.DulPagerComponent","Common.TypeNameIdentifier":"DulPagerComponent"}},{"HashCode":1775008036,"Kind":"Components.Component","Name":"DulPager.DulPagerComponent","AssemblyName":"DulPager","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DulPager.DulPagerComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"DulPager.DulPagerBase","Metadata":{"Common.GloballyQualifiedTypeName":"global::DulPager.DulPagerBase","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"PageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"PageIndexChanged"}}],"Metadata":{"Common.TypeNamespace":"DulPager","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"DulPager.DulPagerComponent","Common.TypeNameIdentifier":"DulPagerComponent"}},{"HashCode":848609672,"Kind":"Components.Component","Name":"MatBlazor.MatComponentHost","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatComponentHost"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatComponentHost","Common.TypeNameIdentifier":"MatComponentHost"}},{"HashCode":-1078756649,"Kind":"Components.Component","Name":"MatBlazor.MatComponentHost","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatComponentHost"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatComponentHost","Common.TypeNameIdentifier":"MatComponentHost"}},{"HashCode":-21161,"Kind":"Components.Component","Name":"MatBlazor.MatAccordion","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAccordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Multi","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Multi"}},{"Kind":"Components.Component","Name":"HideToggle","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatAccordion.HideToggle\">\r\n            <summary>\r\n            Hides toggle icon for all expansion panel summaries in the accordion\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideToggle"}},{"Kind":"Components.Component","Name":"LazyRendering","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatAccordion.LazyRendering\">\r\n            <summary>\r\n            Enables lazy rendering for all expansion panel details in the accordion.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LazyRendering"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAccordion","Common.TypeNameIdentifier":"MatAccordion"}},{"HashCode":-782776089,"Kind":"Components.Component","Name":"MatBlazor.MatAccordion","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAccordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Multi","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Multi"}},{"Kind":"Components.Component","Name":"HideToggle","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatAccordion.HideToggle\">\r\n            <summary>\r\n            Hides toggle icon for all expansion panel summaries in the accordion\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideToggle"}},{"Kind":"Components.Component","Name":"LazyRendering","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatAccordion.LazyRendering\">\r\n            <summary>\r\n            Enables lazy rendering for all expansion panel details in the accordion.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LazyRendering"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAccordion","Common.TypeNameIdentifier":"MatAccordion"}},{"HashCode":1437291536,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAccordion.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAccordion"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAccordion.ChildContent","Common.TypeNameIdentifier":"MatAccordion"}},{"HashCode":1842890714,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAccordion.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAccordion"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAccordion.ChildContent","Common.TypeNameIdentifier":"MatAccordion"}},{"HashCode":-989912236,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanel","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatExpansionPanel\">\r\n            <summary>\r\n            MatExpansionPanel provides an expandable details-summary view.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatExpansionPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HideToggle","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatExpansionPanel.HideToggle\">\r\n            <summary>\r\n            Hides the toggle icon in the expansion panel summary\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideToggle"}},{"Kind":"Components.Component","Name":"LazyRendering","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatExpansionPanel.LazyRendering\">\r\n            <summary>\r\n            Enables lazy rendering of the expansion panel details.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LazyRendering"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ExpandedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanel","Common.TypeNameIdentifier":"MatExpansionPanel"}},{"HashCode":-1953245541,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanel","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatExpansionPanel\">\r\n            <summary>\r\n            MatExpansionPanel provides an expandable details-summary view.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatExpansionPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"HideToggle","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatExpansionPanel.HideToggle\">\r\n            <summary>\r\n            Hides the toggle icon in the expansion panel summary\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideToggle"}},{"Kind":"Components.Component","Name":"LazyRendering","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatExpansionPanel.LazyRendering\">\r\n            <summary>\r\n            Enables lazy rendering of the expansion panel details.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LazyRendering"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ExpandedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanel","Common.TypeNameIdentifier":"MatExpansionPanel"}},{"HashCode":850007722,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanel.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatExpansionPanel"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanel.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanel"}},{"HashCode":747515135,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanel.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatExpansionPanel"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanel.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanel"}},{"HashCode":2145108326,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelDetails","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatExpansionPanelDetails"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelDetails","Common.TypeNameIdentifier":"MatExpansionPanelDetails"}},{"HashCode":-1917236224,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelDetails","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatExpansionPanelDetails"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelDetails","Common.TypeNameIdentifier":"MatExpansionPanelDetails"}},{"HashCode":96333170,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelDetails.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatExpansionPanelDetails"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelDetails.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelDetails"}},{"HashCode":-1400957630,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelDetails.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatExpansionPanelDetails"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelDetails.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelDetails"}},{"HashCode":1858018252,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatExpansionPanelHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelHeader","Common.TypeNameIdentifier":"MatExpansionPanelHeader"}},{"HashCode":-1459266372,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatExpansionPanelHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelHeader","Common.TypeNameIdentifier":"MatExpansionPanelHeader"}},{"HashCode":-1898909736,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatExpansionPanelHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelHeader.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelHeader"}},{"HashCode":-1743781829,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatExpansionPanelHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelHeader.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelHeader"}},{"HashCode":1392413752,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelSubHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatExpansionPanelSubHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelSubHeader","Common.TypeNameIdentifier":"MatExpansionPanelSubHeader"}},{"HashCode":-238604405,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelSubHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatExpansionPanelSubHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelSubHeader","Common.TypeNameIdentifier":"MatExpansionPanelSubHeader"}},{"HashCode":-87761344,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelSubHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatExpansionPanelSubHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelSubHeader.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelSubHeader"}},{"HashCode":1695271515,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelSubHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatExpansionPanelSubHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelSubHeader.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelSubHeader"}},{"HashCode":1977266626,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelSummary","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatExpansionPanelSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelSummary","Common.TypeNameIdentifier":"MatExpansionPanelSummary"}},{"HashCode":-525887547,"Kind":"Components.Component","Name":"MatBlazor.MatExpansionPanelSummary","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatExpansionPanelSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatExpansionPanelSummary","Common.TypeNameIdentifier":"MatExpansionPanelSummary"}},{"HashCode":179296751,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelSummary.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatExpansionPanelSummary"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelSummary.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelSummary"}},{"HashCode":2023142757,"Kind":"Components.ChildContent","Name":"MatBlazor.MatExpansionPanelSummary.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatExpansionPanelSummary"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatExpansionPanelSummary.ChildContent","Common.TypeNameIdentifier":"MatExpansionPanelSummary"}},{"HashCode":1552839055,"Kind":"Components.Component","Name":"MatBlazor.MatAnchorContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAnchorContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAnchorContainer","Common.TypeNameIdentifier":"MatAnchorContainer"}},{"HashCode":1917239425,"Kind":"Components.Component","Name":"MatBlazor.MatAnchorContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAnchorContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAnchorContainer","Common.TypeNameIdentifier":"MatAnchorContainer"}},{"HashCode":-225434886,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAnchorContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAnchorContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAnchorContainer.ChildContent","Common.TypeNameIdentifier":"MatAnchorContainer"}},{"HashCode":1936356861,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAnchorContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAnchorContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAnchorContainer.ChildContent","Common.TypeNameIdentifier":"MatAnchorContainer"}},{"HashCode":879082678,"Kind":"Components.Component","Name":"MatBlazor.MatAnchorLink","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAnchorLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAnchorLink","Common.TypeNameIdentifier":"MatAnchorLink"}},{"HashCode":-1643330036,"Kind":"Components.Component","Name":"MatBlazor.MatAnchorLink","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAnchorLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAnchorLink","Common.TypeNameIdentifier":"MatAnchorLink"}},{"HashCode":-1918970168,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAnchorLink.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAnchorLink"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAnchorLink.ChildContent","Common.TypeNameIdentifier":"MatAnchorLink"}},{"HashCode":1044798486,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAnchorLink.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAnchorLink"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAnchorLink.ChildContent","Common.TypeNameIdentifier":"MatAnchorLink"}},{"HashCode":-330523881,"Kind":"Components.Component","Name":"MatBlazor.MatAnchorUtils","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAnchorUtils"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAnchorUtils","Common.TypeNameIdentifier":"MatAnchorUtils"}},{"HashCode":-329241692,"Kind":"Components.Component","Name":"MatBlazor.MatAnchorUtils","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAnchorUtils"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAnchorUtils","Common.TypeNameIdentifier":"MatAnchorUtils"}},{"HashCode":-1803444733,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAnchorUtils.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAnchorUtils"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAnchorUtils.ChildContent","Common.TypeNameIdentifier":"MatAnchorUtils"}},{"HashCode":-2099167502,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAnchorUtils.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAnchorUtils"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAnchorUtils.ChildContent","Common.TypeNameIdentifier":"MatAnchorUtils"}},{"HashCode":1949064552,"Kind":"Components.Component","Name":"MatBlazor.MatAppBar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatAppBar\">\r\n            <summary>\r\n            Acts as a container for items such as application title, navigation icon, and action items.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Short","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Short"}},{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Fixed"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBar","Common.TypeNameIdentifier":"MatAppBar"}},{"HashCode":372638730,"Kind":"Components.Component","Name":"MatBlazor.MatAppBar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatAppBar\">\r\n            <summary>\r\n            Acts as a container for items such as application title, navigation icon, and action items.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Short","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Short"}},{"Kind":"Components.Component","Name":"Fixed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Fixed"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBar","Common.TypeNameIdentifier":"MatAppBar"}},{"HashCode":361932606,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBar.ChildContent","Common.TypeNameIdentifier":"MatAppBar"}},{"HashCode":7107080,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBar.ChildContent","Common.TypeNameIdentifier":"MatAppBar"}},{"HashCode":1050156914,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarAction","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarAction"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarAction","Common.TypeNameIdentifier":"MatAppBarAction"}},{"HashCode":-1326323299,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarAction","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarAction"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarAction","Common.TypeNameIdentifier":"MatAppBarAction"}},{"HashCode":-986748892,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarAction.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBarAction"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarAction.ChildContent","Common.TypeNameIdentifier":"MatAppBarAction"}},{"HashCode":-639948780,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarAction.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBarAction"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarAction.ChildContent","Common.TypeNameIdentifier":"MatAppBarAction"}},{"HashCode":1957470830,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarAdjust","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatAppBarAdjust\">\r\n            <summary>\r\n            \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarAdjust"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarAdjust","Common.TypeNameIdentifier":"MatAppBarAdjust"}},{"HashCode":-1358911516,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarAdjust","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatAppBarAdjust\">\r\n            <summary>\r\n            \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarAdjust"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarAdjust","Common.TypeNameIdentifier":"MatAppBarAdjust"}},{"HashCode":1131708546,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarContainer","Common.TypeNameIdentifier":"MatAppBarContainer"}},{"HashCode":-1802464381,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarContainer","Common.TypeNameIdentifier":"MatAppBarContainer"}},{"HashCode":1880763233,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBarContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarContainer.ChildContent","Common.TypeNameIdentifier":"MatAppBarContainer"}},{"HashCode":-1160995161,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBarContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarContainer.ChildContent","Common.TypeNameIdentifier":"MatAppBarContainer"}},{"HashCode":1958305002,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarContent","Common.TypeNameIdentifier":"MatAppBarContent"}},{"HashCode":-1096998132,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarContent","Common.TypeNameIdentifier":"MatAppBarContent"}},{"HashCode":-2108167299,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBarContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarContent.ChildContent","Common.TypeNameIdentifier":"MatAppBarContent"}},{"HashCode":-303780808,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBarContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarContent.ChildContent","Common.TypeNameIdentifier":"MatAppBarContent"}},{"HashCode":-1675716200,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarNavigationIcon","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarNavigationIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarNavigationIcon","Common.TypeNameIdentifier":"MatAppBarNavigationIcon"}},{"HashCode":1703145549,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarNavigationIcon","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarNavigationIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarNavigationIcon","Common.TypeNameIdentifier":"MatAppBarNavigationIcon"}},{"HashCode":1208528946,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarRow","Common.TypeNameIdentifier":"MatAppBarRow"}},{"HashCode":-1134999462,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarRow","Common.TypeNameIdentifier":"MatAppBarRow"}},{"HashCode":-1015212944,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBarRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarRow.ChildContent","Common.TypeNameIdentifier":"MatAppBarRow"}},{"HashCode":-1516070402,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBarRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarRow.ChildContent","Common.TypeNameIdentifier":"MatAppBarRow"}},{"HashCode":-1006597167,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarSection","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarSection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Align","TypeName":"MatBlazor.MatAppBarSectionAlign","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatAppBarSectionAlign","Common.PropertyName":"Align"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarSection","Common.TypeNameIdentifier":"MatAppBarSection"}},{"HashCode":1612598212,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarSection","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarSection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Align","TypeName":"MatBlazor.MatAppBarSectionAlign","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatAppBarSectionAlign","Common.PropertyName":"Align"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarSection","Common.TypeNameIdentifier":"MatAppBarSection"}},{"HashCode":1675821000,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarSection.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBarSection"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarSection.ChildContent","Common.TypeNameIdentifier":"MatAppBarSection"}},{"HashCode":-130800741,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarSection.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBarSection"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarSection.ChildContent","Common.TypeNameIdentifier":"MatAppBarSection"}},{"HashCode":-1012485142,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarTitle","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAppBarTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarTitle","Common.TypeNameIdentifier":"MatAppBarTitle"}},{"HashCode":1828624960,"Kind":"Components.Component","Name":"MatBlazor.MatAppBarTitle","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAppBarTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAppBarTitle","Common.TypeNameIdentifier":"MatAppBarTitle"}},{"HashCode":2049420195,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarTitle.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAppBarTitle"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarTitle.ChildContent","Common.TypeNameIdentifier":"MatAppBarTitle"}},{"HashCode":1608402629,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAppBarTitle.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAppBarTitle"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAppBarTitle.ChildContent","Common.TypeNameIdentifier":"MatAppBarTitle"}},{"HashCode":1358737244,"Kind":"Components.Component","Name":"MatBlazor.BaseMatAutocompleteList<TItem>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatAutocompleteList`1\">\r\n            <summary>\r\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\r\n            </summary>\r\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Label\">\r\n            <summary>\r\n            The label of the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Icon\">\r\n            <summary>\r\n            The Icon displayed as the leading icon for the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"StringValue","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.StringValue\">\r\n            <summary>\r\n            The StringValue displayed in the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StringValue"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TItem","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Value\">\r\n            <summary>\r\n            The value to be used to pre-select an item from the list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ValueChanged\">\r\n            <summary>\r\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"CustomStringSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.CustomStringSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"CustomStringSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Items\">\r\n            <summary>\r\n            The collection which should be rendered and filtered\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Outlined\">\r\n            <summary>\r\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"OnOpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnOpenedChanged\">\r\n            <summary>\r\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OnOpenedChanged"}},{"Kind":"Components.Component","Name":"OnTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnTextChanged\">\r\n            <summary>\r\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"OnTextChanged"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ShowClearButton\">\r\n            <summary>\r\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.FullWidth\">\r\n            <summary>\r\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatAutocompleteList<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatAutocompleteList"}},{"HashCode":1516671147,"Kind":"Components.Component","Name":"MatBlazor.BaseMatAutocompleteList<TItem>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatAutocompleteList`1\">\r\n            <summary>\r\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\r\n            </summary>\r\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Label\">\r\n            <summary>\r\n            The label of the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Icon\">\r\n            <summary>\r\n            The Icon displayed as the leading icon for the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"StringValue","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.StringValue\">\r\n            <summary>\r\n            The StringValue displayed in the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StringValue"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TItem","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Value\">\r\n            <summary>\r\n            The value to be used to pre-select an item from the list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ValueChanged\">\r\n            <summary>\r\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"CustomStringSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.CustomStringSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"CustomStringSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Items\">\r\n            <summary>\r\n            The collection which should be rendered and filtered\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Outlined\">\r\n            <summary>\r\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"OnOpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnOpenedChanged\">\r\n            <summary>\r\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OnOpenedChanged"}},{"Kind":"Components.Component","Name":"OnTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnTextChanged\">\r\n            <summary>\r\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"OnTextChanged"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ShowClearButton\">\r\n            <summary>\r\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.FullWidth\">\r\n            <summary>\r\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatAutocompleteList<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatAutocompleteList"}},{"HashCode":-2054412230,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BaseMatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatAutocompleteList"}},{"HashCode":-361548703,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.BaseMatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatAutocompleteList"}},{"HashCode":-447650013,"Kind":"Components.Component","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemValueSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ItemValueSelector"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":-973477380,"Kind":"Components.Component","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemValueSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ItemValueSelector"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":-364480484,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BaseMatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":-980924631,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.BaseMatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":-1549181061,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatAutocomplete"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":-2039497024,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatAutocomplete"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":-695280705,"Kind":"Components.Component","Name":"MatBlazor.BaseMatButtonLink","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatButtonLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClick\">\r\n            <summary>\r\n            Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Href\">\r\n            <summary>\r\n            Link to a url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Raised","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Raised\">\r\n            <summary>\r\n            Link has raised style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Raised"}},{"Kind":"Components.Component","Name":"Unelevated","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Unelevated\">\r\n            <summary>\r\n            Link has unelevated style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unelevated"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Outlined\">\r\n            <summary>\r\n            Link has outlined style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Dense\">\r\n            <summary>\r\n            Link has dense style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Disabled\">\r\n            <summary>\r\n            Link is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Icon\">\r\n            <summary>\r\n            Specifies the link's icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.TrailingIcon\">\r\n            <summary>\r\n            Specifies if icon has trailing position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatButtonLink","Common.TypeNameIdentifier":"BaseMatButtonLink"}},{"HashCode":1146848002,"Kind":"Components.Component","Name":"MatBlazor.BaseMatButtonLink","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatButtonLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClick\">\r\n            <summary>\r\n            Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Href\">\r\n            <summary>\r\n            Link to a url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Raised","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Raised\">\r\n            <summary>\r\n            Link has raised style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Raised"}},{"Kind":"Components.Component","Name":"Unelevated","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Unelevated\">\r\n            <summary>\r\n            Link has unelevated style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unelevated"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Outlined\">\r\n            <summary>\r\n            Link has outlined style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Dense\">\r\n            <summary>\r\n            Link has dense style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Disabled\">\r\n            <summary>\r\n            Link is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Icon\">\r\n            <summary>\r\n            Specifies the link's icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.TrailingIcon\">\r\n            <summary>\r\n            Specifies if icon has trailing position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatButtonLink","Common.TypeNameIdentifier":"BaseMatButtonLink"}},{"HashCode":-1440074178,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatButtonLink.ChildContent","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatButtonLink"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatButtonLink.ChildContent","Common.TypeNameIdentifier":"BaseMatButtonLink"}},{"HashCode":1673030985,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatButtonLink.ChildContent","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatButtonLink"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatButtonLink.ChildContent","Common.TypeNameIdentifier":"BaseMatButtonLink"}},{"HashCode":-1841388232,"Kind":"Components.Component","Name":"MatBlazor.MatButton","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatButton\">\r\n            <summary>\r\n            Buttons communicate an action a user can take.\r\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.MatButton.OnClick\">\r\n            <summary>\r\n            Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.MatButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.MatButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Link\">\r\n            <summary>\r\n            Link to a url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Link"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Raised","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Raised\">\r\n            <summary>\r\n            Button has raised style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Raised"}},{"Kind":"Components.Component","Name":"Unelevated","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Unelevated\">\r\n            <summary>\r\n            Button has unelevated style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unelevated"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Outlined\">\r\n            <summary>\r\n            Button has outlined style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Dense\">\r\n            <summary>\r\n            Button has dense style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Disabled\">\r\n            <summary>\r\n            Button is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Icon\">\r\n            <summary>\r\n            Specifies an button's icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.TrailingIcon\">\r\n            <summary>\r\n            Specifies if icon has trailing position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Label\">\r\n            <summary>\r\n            Text label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.MatButton.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatButton","Common.TypeNameIdentifier":"MatButton"}},{"HashCode":-1175819782,"Kind":"Components.Component","Name":"MatBlazor.MatButton","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatButton\">\r\n            <summary>\r\n            Buttons communicate an action a user can take.\r\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.MatButton.OnClick\">\r\n            <summary>\r\n            Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.MatButton.Command\">\r\n            <summary>\r\n            Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.MatButton.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Link\">\r\n            <summary>\r\n            Link to a url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Link"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Raised","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Raised\">\r\n            <summary>\r\n            Button has raised style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Raised"}},{"Kind":"Components.Component","Name":"Unelevated","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Unelevated\">\r\n            <summary>\r\n            Button has unelevated style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unelevated"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Outlined\">\r\n            <summary>\r\n            Button has outlined style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Dense\">\r\n            <summary>\r\n            Button has dense style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatButton.Disabled\">\r\n            <summary>\r\n            Button is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Icon\">\r\n            <summary>\r\n            Specifies an button's icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.TrailingIcon\">\r\n            <summary>\r\n            Specifies if icon has trailing position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatButton.Label\">\r\n            <summary>\r\n            Text label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.MatButton.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatButton","Common.TypeNameIdentifier":"MatButton"}},{"HashCode":-505394012,"Kind":"Components.ChildContent","Name":"MatBlazor.MatButton.ChildContent","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatButton.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatButton.ChildContent","Common.TypeNameIdentifier":"MatButton"}},{"HashCode":-437568156,"Kind":"Components.ChildContent","Name":"MatBlazor.MatButton.ChildContent","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatButton.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatButton.ChildContent","Common.TypeNameIdentifier":"MatButton"}},{"HashCode":-860778552,"Kind":"Components.Component","Name":"MatBlazor.MatCard","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatCard\">\r\n            <summary>\r\n            Card component for Blazor contain content and actions about a single subject. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCard"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCard","Common.TypeNameIdentifier":"MatCard"}},{"HashCode":1910995493,"Kind":"Components.Component","Name":"MatBlazor.MatCard","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatCard\">\r\n            <summary>\r\n            Card component for Blazor contain content and actions about a single subject. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCard"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCard","Common.TypeNameIdentifier":"MatCard"}},{"HashCode":640744640,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCard.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCard"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCard.ChildContent","Common.TypeNameIdentifier":"MatCard"}},{"HashCode":122322708,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCard.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCard"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCard.ChildContent","Common.TypeNameIdentifier":"MatCard"}},{"HashCode":-1060388067,"Kind":"Components.Component","Name":"MatBlazor.MatCardActionButtons","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCardActionButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardActionButtons","Common.TypeNameIdentifier":"MatCardActionButtons"}},{"HashCode":1234503280,"Kind":"Components.Component","Name":"MatBlazor.MatCardActionButtons","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCardActionButtons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardActionButtons","Common.TypeNameIdentifier":"MatCardActionButtons"}},{"HashCode":357418771,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardActionButtons.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCardActionButtons"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardActionButtons.ChildContent","Common.TypeNameIdentifier":"MatCardActionButtons"}},{"HashCode":-485404453,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardActionButtons.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCardActionButtons"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardActionButtons.ChildContent","Common.TypeNameIdentifier":"MatCardActionButtons"}},{"HashCode":-359103487,"Kind":"Components.Component","Name":"MatBlazor.MatCardActionIcons","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCardActionIcons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardActionIcons","Common.TypeNameIdentifier":"MatCardActionIcons"}},{"HashCode":-895743417,"Kind":"Components.Component","Name":"MatBlazor.MatCardActionIcons","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCardActionIcons"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardActionIcons","Common.TypeNameIdentifier":"MatCardActionIcons"}},{"HashCode":1739849498,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardActionIcons.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCardActionIcons"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardActionIcons.ChildContent","Common.TypeNameIdentifier":"MatCardActionIcons"}},{"HashCode":-729744776,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardActionIcons.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCardActionIcons"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardActionIcons.ChildContent","Common.TypeNameIdentifier":"MatCardActionIcons"}},{"HashCode":-739148903,"Kind":"Components.Component","Name":"MatBlazor.MatCardActions","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCardActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardActions","Common.TypeNameIdentifier":"MatCardActions"}},{"HashCode":152698858,"Kind":"Components.Component","Name":"MatBlazor.MatCardActions","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCardActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardActions","Common.TypeNameIdentifier":"MatCardActions"}},{"HashCode":1131670350,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardActions.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCardActions"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardActions.ChildContent","Common.TypeNameIdentifier":"MatCardActions"}},{"HashCode":2129855397,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardActions.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCardActions"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardActions.ChildContent","Common.TypeNameIdentifier":"MatCardActions"}},{"HashCode":-1368200833,"Kind":"Components.Component","Name":"MatBlazor.MatCardContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCardContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Unbounded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unbounded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardContent","Common.TypeNameIdentifier":"MatCardContent"}},{"HashCode":-277477820,"Kind":"Components.Component","Name":"MatBlazor.MatCardContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCardContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Unbounded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unbounded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardContent","Common.TypeNameIdentifier":"MatCardContent"}},{"HashCode":244616047,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCardContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardContent.ChildContent","Common.TypeNameIdentifier":"MatCardContent"}},{"HashCode":1247624759,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCardContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardContent.ChildContent","Common.TypeNameIdentifier":"MatCardContent"}},{"HashCode":281394236,"Kind":"Components.Component","Name":"MatBlazor.MatCardMedia","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCardMedia"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Square"}},{"Kind":"Components.Component","Name":"Wide","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Wide"}},{"Kind":"Components.Component","Name":"ContentClass","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ContentClass"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardMedia","Common.TypeNameIdentifier":"MatCardMedia"}},{"HashCode":-1849515352,"Kind":"Components.Component","Name":"MatBlazor.MatCardMedia","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCardMedia"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Square","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Square"}},{"Kind":"Components.Component","Name":"Wide","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Wide"}},{"Kind":"Components.Component","Name":"ContentClass","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ContentClass"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCardMedia","Common.TypeNameIdentifier":"MatCardMedia"}},{"HashCode":-626903960,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardMedia.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCardMedia"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardMedia.ChildContent","Common.TypeNameIdentifier":"MatCardMedia"}},{"HashCode":-1193313241,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCardMedia.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCardMedia"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCardMedia.ChildContent","Common.TypeNameIdentifier":"MatCardMedia"}},{"HashCode":-1679603759,"Kind":"Components.Component","Name":"MatBlazor.BaseMatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatCheckboxInternal`1\">\r\n            <summary>\r\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \r\n            </summary>\r\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatCheckboxInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputValue","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputValue"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatCheckboxInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatCheckboxInternal"}},{"HashCode":1706158036,"Kind":"Components.Component","Name":"MatBlazor.BaseMatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatCheckboxInternal`1\">\r\n            <summary>\r\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \r\n            </summary>\r\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatCheckboxInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputValue","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputValue"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatCheckboxInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatCheckboxInternal"}},{"HashCode":-1463508278,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatCheckboxInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatCheckboxInternal"}},{"HashCode":1646520966,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatCheckboxInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatCheckboxInternal"}},{"HashCode":1173139080,"Kind":"Components.Component","Name":"MatBlazor.MatCheckbox<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputValue","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputValue"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCheckbox<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatCheckbox"}},{"HashCode":-1914723886,"Kind":"Components.Component","Name":"MatBlazor.MatCheckbox<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputValue","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputValue"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCheckbox<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatCheckbox"}},{"HashCode":1453026815,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCheckbox<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCheckbox"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCheckbox<TValue>.ChildContent","Common.TypeNameIdentifier":"MatCheckbox"}},{"HashCode":-770183205,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCheckbox<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCheckbox"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCheckbox<TValue>.ChildContent","Common.TypeNameIdentifier":"MatCheckbox"}},{"HashCode":-105118887,"Kind":"Components.Component","Name":"MatBlazor.MatChipSet","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatChipSet"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Choice","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChipSet.Choice\">\r\n            <summary>\r\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Choice"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChipSet.Filter\">\r\n            <summary>\r\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"SelectedChip","TypeName":"MatBlazor.MatChip","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatChip","Common.PropertyName":"SelectedChip"}},{"Kind":"Components.Component","Name":"SelectedChipChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatChip>","Common.PropertyName":"SelectedChipChanged"}},{"Kind":"Components.Component","Name":"SelectedChips","TypeName":"MatBlazor.MatChip[]","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatChip[]","Common.PropertyName":"SelectedChips"}},{"Kind":"Components.Component","Name":"SelectedChipsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatChip[]>","Common.PropertyName":"SelectedChipsChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatChipSet","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":1217668666,"Kind":"Components.Component","Name":"MatBlazor.MatChipSet","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatChipSet"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Choice","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChipSet.Choice\">\r\n            <summary>\r\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Choice"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChipSet.Filter\">\r\n            <summary>\r\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"SelectedChip","TypeName":"MatBlazor.MatChip","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatChip","Common.PropertyName":"SelectedChip"}},{"Kind":"Components.Component","Name":"SelectedChipChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatChip>","Common.PropertyName":"SelectedChipChanged"}},{"Kind":"Components.Component","Name":"SelectedChips","TypeName":"MatBlazor.MatChip[]","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatChip[]","Common.PropertyName":"SelectedChips"}},{"Kind":"Components.Component","Name":"SelectedChipsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatChip[]>","Common.PropertyName":"SelectedChipsChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatChipSet","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":-300983799,"Kind":"Components.ChildContent","Name":"MatBlazor.MatChipSet.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatChipSet"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatChipSet.ChildContent","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":1593543514,"Kind":"Components.ChildContent","Name":"MatBlazor.MatChipSet.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatChipSet"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatChipSet.ChildContent","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":-2099692740,"Kind":"Components.Component","Name":"MatBlazor.MatChip","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatChip\">\r\n            <summary>\r\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatChip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LeadingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatChip.LeadingIcon\">\r\n            <summary>\r\n            Optional icon, displayed before the label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LeadingIcon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatChip.TrailingIcon\">\r\n            <summary>\r\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"TrailingIconClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatChip>","Common.PropertyName":"TrailingIconClick"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatChip.Label\">\r\n            <summary>\r\n            The chip's text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.MatChip.Value\">\r\n            <summary>\r\n            A user-defined value assigned to the chip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChip.IsSelected\">\r\n             <summary>\r\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\r\n            \r\n             When you set this in markup, it pre-selects the chip.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"IsSelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.MatChip.IsSelectedChanged\">\r\n            <summary>\r\n            Allows two-way binding of IsSelected\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsSelectedChanged"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChip.IsCheckable\">\r\n            <summary>\r\n            Checkable chips show a check-mark when selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsCheckable"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatChip","Common.TypeNameIdentifier":"MatChip"}},{"HashCode":255566346,"Kind":"Components.Component","Name":"MatBlazor.MatChip","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatChip\">\r\n            <summary>\r\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatChip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LeadingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatChip.LeadingIcon\">\r\n            <summary>\r\n            Optional icon, displayed before the label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LeadingIcon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatChip.TrailingIcon\">\r\n            <summary>\r\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"TrailingIconClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatChip>","Common.PropertyName":"TrailingIconClick"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatChip.Label\">\r\n            <summary>\r\n            The chip's text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.MatChip.Value\">\r\n            <summary>\r\n            A user-defined value assigned to the chip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChip.IsSelected\">\r\n             <summary>\r\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\r\n            \r\n             When you set this in markup, it pre-selects the chip.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"IsSelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.MatChip.IsSelectedChanged\">\r\n            <summary>\r\n            Allows two-way binding of IsSelected\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsSelectedChanged"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatChip.IsCheckable\">\r\n            <summary>\r\n            Checkable chips show a check-mark when selected\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsCheckable"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatChip","Common.TypeNameIdentifier":"MatChip"}},{"HashCode":20960172,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDataTableColumnOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"HeaderTemplate"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Func<TItem, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Sort","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Sort"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDataTableColumnOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatDataTableColumnOld"}},{"HashCode":-643196855,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDataTableColumnOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"HeaderTemplate"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Func<TItem, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Sort","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Sort"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDataTableColumnOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatDataTableColumnOld"}},{"HashCode":928758443,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDataTableColumnOld<TItem>.Template","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"BaseMatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDataTableColumnOld<TItem>.Template","Common.TypeNameIdentifier":"BaseMatDataTableColumnOld"}},{"HashCode":-1007435822,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDataTableColumnOld<TItem>.Template","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"MatBlazor.BaseMatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDataTableColumnOld<TItem>.Template","Common.TypeNameIdentifier":"BaseMatDataTableColumnOld"}},{"HashCode":891964738,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"BaseMatDataTableColumnOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate","Common.TypeNameIdentifier":"BaseMatDataTableColumnOld"}},{"HashCode":486470696,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MatBlazor.BaseMatDataTableColumnOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate","Common.TypeNameIdentifier":"BaseMatDataTableColumnOld"}},{"HashCode":-712079744,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDataTableOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDataTableOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Columns"}},{"Kind":"Components.Component","Name":"StickyHeader","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StickyHeader"}},{"Kind":"Components.Component","Name":"VirtualScroll","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"VirtualScroll"}},{"Kind":"Components.Component","Name":"Paginator","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Paginator"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageIndex"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDataTableOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatDataTableOld"}},{"HashCode":168296559,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDataTableOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDataTableOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Columns"}},{"Kind":"Components.Component","Name":"StickyHeader","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StickyHeader"}},{"Kind":"Components.Component","Name":"VirtualScroll","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"VirtualScroll"}},{"Kind":"Components.Component","Name":"Paginator","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Paginator"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageIndex"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDataTableOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatDataTableOld"}},{"HashCode":594378962,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDataTableOld<TItem>.Columns","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"BaseMatDataTableOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDataTableOld<TItem>.Columns","Common.TypeNameIdentifier":"BaseMatDataTableOld"}},{"HashCode":-1757422384,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDataTableOld<TItem>.Columns","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MatBlazor.BaseMatDataTableOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDataTableOld<TItem>.Columns","Common.TypeNameIdentifier":"BaseMatDataTableOld"}},{"HashCode":141358034,"Kind":"Components.Component","Name":"MatBlazor.MatDataTable","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTable","Common.TypeNameIdentifier":"MatDataTable"}},{"HashCode":468691648,"Kind":"Components.Component","Name":"MatBlazor.MatDataTable","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTable","Common.TypeNameIdentifier":"MatDataTable"}},{"HashCode":1900712762,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTable.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTable"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTable.ChildContent","Common.TypeNameIdentifier":"MatDataTable"}},{"HashCode":926519876,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTable.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTable"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTable.ChildContent","Common.TypeNameIdentifier":"MatDataTable"}},{"HashCode":-1458157436,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableColumn","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableColumn","Common.TypeNameIdentifier":"MatDataTableColumn"}},{"HashCode":-1825638424,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableColumn","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableColumn","Common.TypeNameIdentifier":"MatDataTableColumn"}},{"HashCode":-653348618,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableContent<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableContent<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDataTableContent"}},{"HashCode":1087017825,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableContent<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableContent<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDataTableContent"}},{"HashCode":-1520070938,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableContent<TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTableContent"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableContent<TItem>.ChildContent","Common.TypeNameIdentifier":"MatDataTableContent"}},{"HashCode":2067024552,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableContent<TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTableContent"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableContent<TItem>.ChildContent","Common.TypeNameIdentifier":"MatDataTableContent"}},{"HashCode":-721491096,"Kind":"Components.Component","Name":"MatBlazor.MatDatePicker<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"EnableTime","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTime"}},{"Kind":"Components.Component","Name":"EnableSeconds","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSeconds"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DisableCalendar","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableCalendar"}},{"Kind":"Components.Component","Name":"Enable24hours","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable24hours"}},{"Kind":"Components.Component","Name":"EnableWeekNumbers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableWeekNumbers"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"DisableMobile","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableMobile"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatDatePickerPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDatePickerPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDatePicker<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDatePicker"}},{"HashCode":-1270832173,"Kind":"Components.Component","Name":"MatBlazor.MatDatePicker<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"EnableTime","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTime"}},{"Kind":"Components.Component","Name":"EnableSeconds","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSeconds"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DisableCalendar","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableCalendar"}},{"Kind":"Components.Component","Name":"Enable24hours","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable24hours"}},{"Kind":"Components.Component","Name":"EnableWeekNumbers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableWeekNumbers"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"DisableMobile","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableMobile"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatDatePickerPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDatePickerPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDatePicker<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDatePicker"}},{"HashCode":-325566479,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDatePicker<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDatePicker"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDatePicker<TValue>.ChildContent","Common.TypeNameIdentifier":"MatDatePicker"}},{"HashCode":867386981,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDatePicker<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDatePicker"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDatePicker<TValue>.ChildContent","Common.TypeNameIdentifier":"MatDatePicker"}},{"HashCode":-293617932,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDialog","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatDialog\">\r\n            <summary>\r\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.IsOpenChanged\">\r\n            <summary>\r\n            Event occurs when the dialog is opened or closed.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"CanBeClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.CanBeClosed\">\r\n            <summary>\r\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CanBeClosed"}},{"Kind":"Components.Component","Name":"SurfaceClass","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceClass"}},{"Kind":"Components.Component","Name":"SurfaceStyle","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceStyle"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDialog","Common.TypeNameIdentifier":"BaseMatDialog"}},{"HashCode":1609052787,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDialog","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatDialog\">\r\n            <summary>\r\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.IsOpenChanged\">\r\n            <summary>\r\n            Event occurs when the dialog is opened or closed.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"CanBeClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.CanBeClosed\">\r\n            <summary>\r\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CanBeClosed"}},{"Kind":"Components.Component","Name":"SurfaceClass","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceClass"}},{"Kind":"Components.Component","Name":"SurfaceStyle","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceStyle"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDialog","Common.TypeNameIdentifier":"BaseMatDialog"}},{"HashCode":2145075396,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDialog.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatDialog"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDialog.ChildContent","Common.TypeNameIdentifier":"BaseMatDialog"}},{"HashCode":229191774,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDialog.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatDialog"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDialog.ChildContent","Common.TypeNameIdentifier":"BaseMatDialog"}},{"HashCode":-384347619,"Kind":"Components.Component","Name":"MatBlazor.MatDivider","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatDivider\">\r\n            <summary>\r\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Inset","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Inset"}},{"Kind":"Components.Component","Name":"Padded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Padded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDivider","Common.TypeNameIdentifier":"MatDivider"}},{"HashCode":-356737781,"Kind":"Components.Component","Name":"MatBlazor.MatDivider","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatDivider\">\r\n            <summary>\r\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Inset","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Inset"}},{"Kind":"Components.Component","Name":"Padded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Padded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDivider","Common.TypeNameIdentifier":"MatDivider"}},{"HashCode":1457567533,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDrawerContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDrawerContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"DrawerWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DrawerWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDrawerContainer","Common.TypeNameIdentifier":"BaseMatDrawerContainer"}},{"HashCode":953832360,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDrawerContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDrawerContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"DrawerWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DrawerWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDrawerContainer","Common.TypeNameIdentifier":"BaseMatDrawerContainer"}},{"HashCode":-1143408955,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDrawerContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatDrawerContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDrawerContainer.ChildContent","Common.TypeNameIdentifier":"BaseMatDrawerContainer"}},{"HashCode":1725714833,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDrawerContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatDrawerContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDrawerContainer.ChildContent","Common.TypeNameIdentifier":"BaseMatDrawerContainer"}},{"HashCode":1901271550,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDrawerContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDrawerContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDrawerContent","Common.TypeNameIdentifier":"BaseMatDrawerContent"}},{"HashCode":1917057734,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDrawerContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDrawerContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDrawerContent","Common.TypeNameIdentifier":"BaseMatDrawerContent"}},{"HashCode":335068881,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDrawerContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatDrawerContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDrawerContent.ChildContent","Common.TypeNameIdentifier":"BaseMatDrawerContent"}},{"HashCode":-1582586659,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDrawerContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatDrawerContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDrawerContent.ChildContent","Common.TypeNameIdentifier":"BaseMatDrawerContent"}},{"HashCode":-805925443,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDrawer","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatDrawer\">\r\n            <summary>\r\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDrawer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"MatBlazor.MatDrawerMode","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDrawerMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ContentTabIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ContentTabIndex"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Opened"}},{"Kind":"Components.Component","Name":"OpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OpenedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDrawer","Common.TypeNameIdentifier":"BaseMatDrawer"}},{"HashCode":-1701442409,"Kind":"Components.Component","Name":"MatBlazor.BaseMatDrawer","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatDrawer\">\r\n            <summary>\r\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDrawer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"MatBlazor.MatDrawerMode","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDrawerMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ContentTabIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ContentTabIndex"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Opened"}},{"Kind":"Components.Component","Name":"OpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OpenedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatDrawer","Common.TypeNameIdentifier":"BaseMatDrawer"}},{"HashCode":-32801654,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDrawer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatDrawer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDrawer.ChildContent","Common.TypeNameIdentifier":"BaseMatDrawer"}},{"HashCode":-453637066,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatDrawer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatDrawer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatDrawer.ChildContent","Common.TypeNameIdentifier":"BaseMatDrawer"}},{"HashCode":2001089488,"Kind":"Components.Component","Name":"MatBlazor.BaseMatFAB","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatFAB\">\r\n            <summary>\r\n            A floating action button represents the primary action in an application.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatFAB"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Mini","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Mini"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatFAB","Common.TypeNameIdentifier":"BaseMatFAB"}},{"HashCode":1078550579,"Kind":"Components.Component","Name":"MatBlazor.BaseMatFAB","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatFAB\">\r\n            <summary>\r\n            A floating action button represents the primary action in an application.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatFAB"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Mini","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Mini"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatFAB","Common.TypeNameIdentifier":"BaseMatFAB"}},{"HashCode":1236924632,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatFAB.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatFAB"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatFAB.ChildContent","Common.TypeNameIdentifier":"BaseMatFAB"}},{"HashCode":911207661,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatFAB.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatFAB"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatFAB.ChildContent","Common.TypeNameIdentifier":"BaseMatFAB"}},{"HashCode":1259717131,"Kind":"Components.Component","Name":"MatBlazor.BaseMatFileUpload","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatFileUpload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.IMatFileUploadEntry[]>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AllowMultiple","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowMultiple"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"MaxMessageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageSize"}},{"Kind":"Components.Component","Name":"MaxMessageLength","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageLength"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatFileUpload","Common.TypeNameIdentifier":"BaseMatFileUpload"}},{"HashCode":-550630704,"Kind":"Components.Component","Name":"MatBlazor.BaseMatFileUpload","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatFileUpload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.IMatFileUploadEntry[]>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AllowMultiple","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowMultiple"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"MaxMessageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageSize"}},{"Kind":"Components.Component","Name":"MaxMessageLength","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageLength"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatFileUpload","Common.TypeNameIdentifier":"BaseMatFileUpload"}},{"HashCode":-1105387202,"Kind":"Components.Component","Name":"MatBlazor.BaseMatHelperText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatHelperText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"CharacterCount","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CharacterCount"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatHelperText","Common.TypeNameIdentifier":"BaseMatHelperText"}},{"HashCode":-1771375653,"Kind":"Components.Component","Name":"MatBlazor.BaseMatHelperText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatHelperText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"CharacterCount","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CharacterCount"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatHelperText","Common.TypeNameIdentifier":"BaseMatHelperText"}},{"HashCode":1925682815,"Kind":"Components.Component","Name":"MatBlazor.BaseMatHidden","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatHidden\">\r\n            <summary>\r\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatHidden"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ElseContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ElseContent"}},{"Kind":"Components.Component","Name":"InitContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"InitContent"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MatBlazor.MatBreakpoint","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatBreakpoint","Common.PropertyName":"Breakpoint"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatHiddenDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatHiddenDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"HiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"HiddenChanged"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatHidden","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":-381070455,"Kind":"Components.Component","Name":"MatBlazor.BaseMatHidden","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatHidden\">\r\n            <summary>\r\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatHidden"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ElseContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ElseContent"}},{"Kind":"Components.Component","Name":"InitContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"InitContent"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MatBlazor.MatBreakpoint","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatBreakpoint","Common.PropertyName":"Breakpoint"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatHiddenDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatHiddenDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"HiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"HiddenChanged"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatHidden","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":254959931,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatHidden.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatHidden.ChildContent","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":-1185785694,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatHidden.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatHidden.ChildContent","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":-1278908552,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatHidden.ElseContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ElseContent","ParentTag":"BaseMatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatHidden.ElseContent","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":1963164335,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatHidden.ElseContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ElseContent","ParentTag":"MatBlazor.BaseMatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatHidden.ElseContent","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":-1694141507,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatHidden.InitContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InitContent","ParentTag":"BaseMatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatHidden.InitContent","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":-837722153,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatHidden.InitContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InitContent","ParentTag":"MatBlazor.BaseMatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatHidden.InitContent","Common.TypeNameIdentifier":"BaseMatHidden"}},{"HashCode":157278012,"Kind":"Components.Component","Name":"MatBlazor.BaseMatIconButton","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatIconButton\">\r\n            <summary>\r\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Icon\">\r\n            <summary>\r\n            Default Button Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ToggleIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ToggleIcon\">\r\n            <summary>\r\n            Icon to use when Button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ToggleIcon"}},{"Kind":"Components.Component","Name":"Toggled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Toggled"}},{"Kind":"Components.Component","Name":"ToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ToggledChanged"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Link\">\r\n            <summary>\r\n            Navigate to this url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Link"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Disabled\">\r\n            <summary>\r\n            Button is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClick\">\r\n            <summary>\r\n             Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatIconButton","Common.TypeNameIdentifier":"BaseMatIconButton"}},{"HashCode":-1415245563,"Kind":"Components.Component","Name":"MatBlazor.BaseMatIconButton","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatIconButton\">\r\n            <summary>\r\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Icon\">\r\n            <summary>\r\n            Default Button Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ToggleIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ToggleIcon\">\r\n            <summary>\r\n            Icon to use when Button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ToggleIcon"}},{"Kind":"Components.Component","Name":"Toggled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Toggled"}},{"Kind":"Components.Component","Name":"ToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ToggledChanged"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Link\">\r\n            <summary>\r\n            Navigate to this url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Link"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Disabled\">\r\n            <summary>\r\n            Button is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClick\">\r\n            <summary>\r\n             Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatIconButton","Common.TypeNameIdentifier":"BaseMatIconButton"}},{"HashCode":-1207080512,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatIconButton.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatIconButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatIconButton.ChildContent","Common.TypeNameIdentifier":"BaseMatIconButton"}},{"HashCode":620145769,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatIconButton.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatIconButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatIconButton.ChildContent","Common.TypeNameIdentifier":"BaseMatIconButton"}},{"HashCode":18181842,"Kind":"Components.Component","Name":"MatBlazor.BaseMatIcon","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatIcon\">\r\n            <summary>\r\n            Makes it easier to use vector-based icons in your app.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatIcon","Common.TypeNameIdentifier":"BaseMatIcon"}},{"HashCode":-1824574019,"Kind":"Components.Component","Name":"MatBlazor.BaseMatIcon","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatIcon\">\r\n            <summary>\r\n            Makes it easier to use vector-based icons in your app.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatIcon","Common.TypeNameIdentifier":"BaseMatIcon"}},{"HashCode":-1153776059,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatIcon.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatIcon"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatIcon.ChildContent","Common.TypeNameIdentifier":"BaseMatIcon"}},{"HashCode":757257813,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatIcon.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatIcon"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatIcon.ChildContent","Common.TypeNameIdentifier":"BaseMatIcon"}},{"HashCode":-279642543,"Kind":"Components.Component","Name":"MatBlazor.BaseMatListGroup","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatListGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatListGroup","Common.TypeNameIdentifier":"BaseMatListGroup"}},{"HashCode":1483354806,"Kind":"Components.Component","Name":"MatBlazor.BaseMatListGroup","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatListGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatListGroup","Common.TypeNameIdentifier":"BaseMatListGroup"}},{"HashCode":-1488282273,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatListGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatListGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatListGroup.ChildContent","Common.TypeNameIdentifier":"BaseMatListGroup"}},{"HashCode":-1398076664,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatListGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatListGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatListGroup.ChildContent","Common.TypeNameIdentifier":"BaseMatListGroup"}},{"HashCode":487233275,"Kind":"Components.Component","Name":"MatBlazor.BaseMatList","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatList\">\r\n            <summary>\r\n            Lists present multiple line items vertically as a single continuous element. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"SingleSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"SingleSelection"}},{"Kind":"Components.Component","Name":"TwoLine","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TwoLine"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatList","Common.TypeNameIdentifier":"BaseMatList"}},{"HashCode":-1710769349,"Kind":"Components.Component","Name":"MatBlazor.BaseMatList","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatList\">\r\n            <summary>\r\n            Lists present multiple line items vertically as a single continuous element. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"SingleSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"SingleSelection"}},{"Kind":"Components.Component","Name":"TwoLine","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TwoLine"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatList","Common.TypeNameIdentifier":"BaseMatList"}},{"HashCode":302395249,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatList.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatList"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatList.ChildContent","Common.TypeNameIdentifier":"BaseMatList"}},{"HashCode":-1838651642,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatList.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatList"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatList.ChildContent","Common.TypeNameIdentifier":"BaseMatList"}},{"HashCode":-984653871,"Kind":"Components.Component","Name":"MatBlazor.BaseMatListItem","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatListItem\">\r\n            <summary>\r\n            Lists present multiple line items vertically as a single continuous element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatListItem","Common.TypeNameIdentifier":"BaseMatListItem"}},{"HashCode":-48186032,"Kind":"Components.Component","Name":"MatBlazor.BaseMatListItem","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatListItem\">\r\n            <summary>\r\n            Lists present multiple line items vertically as a single continuous element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatListItem","Common.TypeNameIdentifier":"BaseMatListItem"}},{"HashCode":-2089502699,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatListItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatListItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatListItem.ChildContent","Common.TypeNameIdentifier":"BaseMatListItem"}},{"HashCode":-823591371,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatListItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatListItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatListItem.ChildContent","Common.TypeNameIdentifier":"BaseMatListItem"}},{"HashCode":-1454114140,"Kind":"Components.Component","Name":"MatBlazor.BaseMatMenu","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatMenu\">\r\n            <summary>\r\n            Menus display a list of choices on a transient sheet of material.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatMenu","Common.TypeNameIdentifier":"BaseMatMenu"}},{"HashCode":985937987,"Kind":"Components.Component","Name":"MatBlazor.BaseMatMenu","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatMenu\">\r\n            <summary>\r\n            Menus display a list of choices on a transient sheet of material.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatMenu","Common.TypeNameIdentifier":"BaseMatMenu"}},{"HashCode":-1934909146,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatMenu.ChildContent","Common.TypeNameIdentifier":"BaseMatMenu"}},{"HashCode":845370569,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatMenu.ChildContent","Common.TypeNameIdentifier":"BaseMatMenu"}},{"HashCode":-24608022,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNavItem","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNavItem\">\r\n            <summary>\r\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNavItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Target\">\r\n            <summary>\r\n            *Not yet functional - Target of Href when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Title\">\r\n            <summary>\r\n            The title shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"NavLinkMatch","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.NavLinkMatch\">\r\n            <summary>\r\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"NavLinkMatch"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you the Nav Item can be selected / active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNavItem","Common.TypeNameIdentifier":"BaseMatNavItem"}},{"HashCode":-961004431,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNavItem","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNavItem\">\r\n            <summary>\r\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNavItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Target\">\r\n            <summary>\r\n            *Not yet functional - Target of Href when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Title\">\r\n            <summary>\r\n            The title shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"NavLinkMatch","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.NavLinkMatch\">\r\n            <summary>\r\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"NavLinkMatch"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you the Nav Item can be selected / active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNavItem","Common.TypeNameIdentifier":"BaseMatNavItem"}},{"HashCode":1013448556,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNavItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatNavItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNavItem.ChildContent","Common.TypeNameIdentifier":"BaseMatNavItem"}},{"HashCode":2105931929,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNavItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatNavItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNavItem.ChildContent","Common.TypeNameIdentifier":"BaseMatNavItem"}},{"HashCode":1552163933,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNavMenu","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNavMenu\">\r\n            <summary>\r\n            MatNavMenu provides a navigation container\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNavMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Multi","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Multi"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNavMenu","Common.TypeNameIdentifier":"BaseMatNavMenu"}},{"HashCode":1890584833,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNavMenu","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNavMenu\">\r\n            <summary>\r\n            MatNavMenu provides a navigation container\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNavMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Multi","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Multi"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNavMenu","Common.TypeNameIdentifier":"BaseMatNavMenu"}},{"HashCode":1250537175,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNavMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatNavMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNavMenu.ChildContent","Common.TypeNameIdentifier":"BaseMatNavMenu"}},{"HashCode":-1999057995,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNavMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatNavMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNavMenu.ChildContent","Common.TypeNameIdentifier":"BaseMatNavMenu"}},{"HashCode":-1121325238,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNavSubMenu\">\r\n            <summary>\r\n            MatNavSubMenu provides an expandable panel for child navigation lists.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNavSubMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ExpandedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNavSubMenu","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":-536242165,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNavSubMenu\">\r\n            <summary>\r\n            MatNavSubMenu provides an expandable panel for child navigation lists.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNavSubMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ExpandedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNavSubMenu","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":1291662729,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNavSubMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatNavSubMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNavSubMenu.ChildContent","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":-1157600319,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNavSubMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatNavSubMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNavSubMenu.ChildContent","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":1026935696,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNumericUpDownFieldInternal`1\">\r\n            <summary>\r\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\r\n            </summary>\r\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNumericUpDownFieldInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DecimalPlaces","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DecimalPlaces"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"MatBlazor.MatNumericUpDownFieldType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatNumericUpDownFieldType","Common.PropertyName":"FieldType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatNumericUpDownFieldInternal"}},{"HashCode":-1768773,"Kind":"Components.Component","Name":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatNumericUpDownFieldInternal`1\">\r\n            <summary>\r\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\r\n            </summary>\r\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNumericUpDownFieldInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DecimalPlaces","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DecimalPlaces"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"MatBlazor.MatNumericUpDownFieldType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatNumericUpDownFieldType","Common.PropertyName":"FieldType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatNumericUpDownFieldInternal"}},{"HashCode":522108899,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatNumericUpDownFieldInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatNumericUpDownFieldInternal"}},{"HashCode":1384477358,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatNumericUpDownFieldInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatNumericUpDownFieldInternal"}},{"HashCode":702504192,"Kind":"Components.Component","Name":"MatBlazor.MatNumericUpDownField<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNumericUpDownField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DecimalPlaces","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DecimalPlaces"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"MatBlazor.MatNumericUpDownFieldType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatNumericUpDownFieldType","Common.PropertyName":"FieldType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNumericUpDownField<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatNumericUpDownField"}},{"HashCode":-1724249155,"Kind":"Components.Component","Name":"MatBlazor.MatNumericUpDownField<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNumericUpDownField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DecimalPlaces","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DecimalPlaces"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"MatBlazor.MatNumericUpDownFieldType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatNumericUpDownFieldType","Common.PropertyName":"FieldType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNumericUpDownField<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatNumericUpDownField"}},{"HashCode":1830193947,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNumericUpDownField<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNumericUpDownField"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNumericUpDownField<TValue>.ChildContent","Common.TypeNameIdentifier":"MatNumericUpDownField"}},{"HashCode":1599794871,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNumericUpDownField<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNumericUpDownField"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNumericUpDownField<TValue>.ChildContent","Common.TypeNameIdentifier":"MatNumericUpDownField"}},{"HashCode":-1296469675,"Kind":"Components.Component","Name":"MatBlazor.BaseMatPaginator","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatPaginator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Page","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatPaginatorPageEvent>","Common.PropertyName":"Page"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"PageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"PageIndexChanged"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatPaginator","Common.TypeNameIdentifier":"BaseMatPaginator"}},{"HashCode":284174681,"Kind":"Components.Component","Name":"MatBlazor.BaseMatPaginator","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatPaginator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Page","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatPaginatorPageEvent>","Common.PropertyName":"Page"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"PageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"PageIndexChanged"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatPaginator","Common.TypeNameIdentifier":"BaseMatPaginator"}},{"HashCode":154061567,"Kind":"Components.Component","Name":"MatBlazor.BaseMatPaper","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatPaper\">\r\n            <summary>\r\n            Basic component where the physical properties of paper are translated to the screen.\r\n            Used for creating sections and giving more focus to some parts of the application.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatPaper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Elevation\">\r\n            <summary>\r\n            Level of the Elevation. \r\n            From 0 to 24.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Elevation"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Outlined\">\r\n            <summary>\r\n            Uses outlined surface. If true, removes Elevation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Rounded\">\r\n            <summary>\r\n            Uses round border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Rounded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatPaper","Common.TypeNameIdentifier":"BaseMatPaper"}},{"HashCode":-1300684263,"Kind":"Components.Component","Name":"MatBlazor.BaseMatPaper","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatPaper\">\r\n            <summary>\r\n            Basic component where the physical properties of paper are translated to the screen.\r\n            Used for creating sections and giving more focus to some parts of the application.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatPaper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Elevation\">\r\n            <summary>\r\n            Level of the Elevation. \r\n            From 0 to 24.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Elevation"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Outlined\">\r\n            <summary>\r\n            Uses outlined surface. If true, removes Elevation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Rounded\">\r\n            <summary>\r\n            Uses round border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Rounded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatPaper","Common.TypeNameIdentifier":"BaseMatPaper"}},{"HashCode":-1066705154,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatPaper.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatPaper"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatPaper.ChildContent","Common.TypeNameIdentifier":"BaseMatPaper"}},{"HashCode":-514855098,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatPaper.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatPaper"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatPaper.ChildContent","Common.TypeNameIdentifier":"BaseMatPaper"}},{"HashCode":-2033778057,"Kind":"Components.Component","Name":"MatBlazor.BaseMatProgressBar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatProgressBar\">\r\n            <summary>\r\n            Progress indicators display the length of a process or express an unspecified wait time.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Reversed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reversed"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"Buffer","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Buffer"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatProgressBar","Common.TypeNameIdentifier":"BaseMatProgressBar"}},{"HashCode":-70098522,"Kind":"Components.Component","Name":"MatBlazor.BaseMatProgressBar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatProgressBar\">\r\n            <summary>\r\n            Progress indicators display the length of a process or express an unspecified wait time.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Reversed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reversed"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"Buffer","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Buffer"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatProgressBar","Common.TypeNameIdentifier":"BaseMatProgressBar"}},{"HashCode":449645212,"Kind":"Components.Component","Name":"MatBlazor.BaseMatProgressCircle","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatProgressCircle\">\r\n            <summary>\r\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatProgressCircle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Indeterminate\">\r\n            <summary>\r\n            Toggles the component between the determinate and indeterminate state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Closed\">\r\n             <summary>\r\n            If true, Puts the component in the closed state.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MatBlazor.MatProgressCircleSize","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Size\">\r\n            <summary>\r\n            Sets the size of the circular progress bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatProgressCircleSize","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Progress\">\r\n            <summary>\r\n            Sets the progress bar to this value. Value should be between [0, 1].\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"FourColored","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.FourColored\">\r\n            <summary>\r\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FourColored"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatProgressCircle","Common.TypeNameIdentifier":"BaseMatProgressCircle"}},{"HashCode":2048435217,"Kind":"Components.Component","Name":"MatBlazor.BaseMatProgressCircle","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatProgressCircle\">\r\n            <summary>\r\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatProgressCircle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Indeterminate\">\r\n            <summary>\r\n            Toggles the component between the determinate and indeterminate state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Closed\">\r\n             <summary>\r\n            If true, Puts the component in the closed state.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MatBlazor.MatProgressCircleSize","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Size\">\r\n            <summary>\r\n            Sets the size of the circular progress bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatProgressCircleSize","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Progress\">\r\n            <summary>\r\n            Sets the progress bar to this value. Value should be between [0, 1].\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"FourColored","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.FourColored\">\r\n            <summary>\r\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FourColored"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatProgressCircle","Common.TypeNameIdentifier":"BaseMatProgressCircle"}},{"HashCode":348229281,"Kind":"Components.Component","Name":"MatBlazor.BaseMatRadioButtonInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatRadioButtonInternal`1\">\r\n            <summary>\r\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\r\n            </summary>\r\n            <typeparam name=\"TValue\">any</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatRadioButtonInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatRadioButtonInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatRadioButtonInternal"}},{"HashCode":-1412917685,"Kind":"Components.Component","Name":"MatBlazor.BaseMatRadioButtonInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatRadioButtonInternal`1\">\r\n            <summary>\r\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\r\n            </summary>\r\n            <typeparam name=\"TValue\">any</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatRadioButtonInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatRadioButtonInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatRadioButtonInternal"}},{"HashCode":1139654741,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatRadioButtonInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatRadioButtonInternal"}},{"HashCode":-1802176531,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatRadioButtonInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatRadioButtonInternal"}},{"HashCode":-1282138663,"Kind":"Components.Component","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatRadioGroupInternal`1\">\r\n            <summary>\r\n            \r\n            </summary>\r\n            <typeparam name=\"TValue\">any</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":-403533958,"Kind":"Components.Component","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatRadioGroupInternal`1\">\r\n            <summary>\r\n            \r\n            </summary>\r\n            <typeparam name=\"TValue\">any</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":208105133,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BaseMatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":1023412140,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.BaseMatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":-902088548,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatRadioGroupInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":806805929,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatRadioGroupInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":-1272822870,"Kind":"Components.Component","Name":"MatBlazor.MatRadioButton<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRadioButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioButton<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioButton"}},{"HashCode":332146037,"Kind":"Components.Component","Name":"MatBlazor.MatRadioButton<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRadioButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioButton<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioButton"}},{"HashCode":-652868504,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioButton<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatRadioButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioButton<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioButton"}},{"HashCode":-1646376797,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioButton<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatRadioButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioButton<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioButton"}},{"HashCode":1028859037,"Kind":"Components.Component","Name":"MatBlazor.MatRadioGroup<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":-1078361697,"Kind":"Components.Component","Name":"MatBlazor.MatRadioGroup<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":779101702,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroup<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatRadioGroup"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>.ItemTemplate","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":1161354233,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroup<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatRadioGroup"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>.ItemTemplate","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":-1920486900,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroup<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatRadioGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":968264771,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroup<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatRadioGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":2056213942,"Kind":"Components.Component","Name":"MatBlazor.BaseMatRipple","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatRipple\">\r\n            <summary>\r\n            Ripples are visual representations used to communicate the status of a component or interactive element. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatRipple"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MatBlazor.MatRippleColor","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatRippleColor","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatRipple","Common.TypeNameIdentifier":"BaseMatRipple"}},{"HashCode":1924739813,"Kind":"Components.Component","Name":"MatBlazor.BaseMatRipple","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatRipple\">\r\n            <summary>\r\n            Ripples are visual representations used to communicate the status of a component or interactive element. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatRipple"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MatBlazor.MatRippleColor","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatRippleColor","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatRipple","Common.TypeNameIdentifier":"BaseMatRipple"}},{"HashCode":-785925877,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRipple.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatRipple"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRipple.ChildContent","Common.TypeNameIdentifier":"BaseMatRipple"}},{"HashCode":583671337,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatRipple.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatRipple"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatRipple.ChildContent","Common.TypeNameIdentifier":"BaseMatRipple"}},{"HashCode":-1370712638,"Kind":"Components.Component","Name":"MatBlazor.BaseCoreMatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseCoreMatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseCoreMatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseCoreMatOption"}},{"HashCode":585480558,"Kind":"Components.Component","Name":"MatBlazor.BaseCoreMatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseCoreMatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseCoreMatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseCoreMatOption"}},{"HashCode":-7093187,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseCoreMatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseCoreMatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseCoreMatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseCoreMatOption"}},{"HashCode":-1878793771,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseCoreMatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseCoreMatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseCoreMatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseCoreMatOption"}},{"HashCode":1304038755,"Kind":"Components.Component","Name":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseCoreMatSelect`2\">\r\n            <summary>\r\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseCoreMatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TKey","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TKey"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseCoreMatSelect"}},{"HashCode":1393518776,"Kind":"Components.Component","Name":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseCoreMatSelect`2\">\r\n            <summary>\r\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseCoreMatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TKey","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TKey"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseCoreMatSelect"}},{"HashCode":-1119969288,"Kind":"Components.Component","Name":"MatBlazor.BaseMatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatOption"}},{"HashCode":2069177706,"Kind":"Components.Component","Name":"MatBlazor.BaseMatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatOption"}},{"HashCode":-1473251187,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatOption"}},{"HashCode":-1749851667,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatOption"}},{"HashCode":-1610107153,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSelect<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSelect"}},{"HashCode":-1126692859,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSelect<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSelect"}},{"HashCode":-920251709,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelect<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatSelect"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatSelect"}},{"HashCode":-1099822004,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelect<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatSelect"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatSelect"}},{"HashCode":2092844661,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSelectItem<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSelectItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":-1654090777,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSelectItem<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSelectItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":997331209,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BaseMatSelectItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":1078229768,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.BaseMatSelectItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":696200010,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectItem<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatSelectItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":-785389238,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectItem<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatSelectItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>.ChildContent","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":789197040,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ValueSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":-581759118,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ValueSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":-1643070095,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BaseMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":-958691026,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.BaseMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":-599063023,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatSelectValue"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":-1320125342,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatSelectValue"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":1921026815,"Kind":"Components.Component","Name":"MatBlazor.MatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatOption"}},{"HashCode":-1675911782,"Kind":"Components.Component","Name":"MatBlazor.MatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatOption"}},{"HashCode":39073359,"Kind":"Components.ChildContent","Name":"MatBlazor.MatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"MatOption"}},{"HashCode":-801521233,"Kind":"Components.ChildContent","Name":"MatBlazor.MatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"MatOption"}},{"HashCode":-285234519,"Kind":"Components.Component","Name":"MatBlazor.MatOptionString","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatOptionString"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatOptionString","Common.TypeNameIdentifier":"MatOptionString"}},{"HashCode":143808382,"Kind":"Components.Component","Name":"MatBlazor.MatOptionString","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatOptionString"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatOptionString","Common.TypeNameIdentifier":"MatOptionString"}},{"HashCode":744632152,"Kind":"Components.ChildContent","Name":"MatBlazor.MatOptionString.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatOptionString"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatOptionString.ChildContent","Common.TypeNameIdentifier":"MatOptionString"}},{"HashCode":1617721022,"Kind":"Components.ChildContent","Name":"MatBlazor.MatOptionString.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatOptionString"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatOptionString.ChildContent","Common.TypeNameIdentifier":"MatOptionString"}},{"HashCode":1869580550,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSlider<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSlider`1\">\r\n            <summary>\r\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\r\n            </summary>\r\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ValueMin","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMin"}},{"Kind":"Components.Component","Name":"ValueMax","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMax"}},{"Kind":"Components.Component","Name":"Discrete","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Discrete"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Markers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Markers"}},{"Kind":"Components.Component","Name":"Pin","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Pin"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"EnableStep","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableStep"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSlider`1.Immediate\">\r\n            <summary>\r\n            When set to true, any change to the slider immediately changes the value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Immediate"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSlider<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSlider"}},{"HashCode":-755495743,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSlider<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSlider`1\">\r\n            <summary>\r\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\r\n            </summary>\r\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ValueMin","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMin"}},{"Kind":"Components.Component","Name":"ValueMax","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMax"}},{"Kind":"Components.Component","Name":"Discrete","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Discrete"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Markers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Markers"}},{"Kind":"Components.Component","Name":"Pin","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Pin"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"EnableStep","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableStep"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSlider`1.Immediate\">\r\n            <summary>\r\n            When set to true, any change to the slider immediately changes the value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Immediate"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSlider<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSlider"}},{"HashCode":-494022544,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSlideToggle<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSlideToggle`1\">\r\n            <summary>\r\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\r\n            </summary>\r\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSlideToggle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSlideToggle<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSlideToggle"}},{"HashCode":1331103172,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSlideToggle<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSlideToggle`1\">\r\n            <summary>\r\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\r\n            </summary>\r\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSlideToggle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSlideToggle<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatSlideToggle"}},{"HashCode":-1070064034,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSnackbar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSnackbar\">\r\n            <summary>\r\n            Snackbars provide brief messages about app processes at the bottom of the screen.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSnackbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Stacked","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Stacked\">\r\n            <summary>\r\n            Positions the action buttons below the label instead of alongside it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Stacked"}},{"Kind":"Components.Component","Name":"Leading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Leading\">\r\n             <summary>\r\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \r\n            \r\n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Leading"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpen\">\r\n            <summary>\r\n            Controls whether or not the snackbar is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"Timeout","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Timeout\">\r\n            <summary>\r\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\r\n            To leave the snackbar open indefinitely set the timeout to -1\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Timeout"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpenChanged\">\r\n            <summary>\r\n            This event is raised whenever IsOpen changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSnackbar","Common.TypeNameIdentifier":"BaseMatSnackbar"}},{"HashCode":-1703725287,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSnackbar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSnackbar\">\r\n            <summary>\r\n            Snackbars provide brief messages about app processes at the bottom of the screen.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSnackbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Stacked","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Stacked\">\r\n            <summary>\r\n            Positions the action buttons below the label instead of alongside it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Stacked"}},{"Kind":"Components.Component","Name":"Leading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Leading\">\r\n             <summary>\r\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \r\n            \r\n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Leading"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpen\">\r\n            <summary>\r\n            Controls whether or not the snackbar is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"Timeout","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Timeout\">\r\n            <summary>\r\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\r\n            To leave the snackbar open indefinitely set the timeout to -1\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Timeout"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpenChanged\">\r\n            <summary>\r\n            This event is raised whenever IsOpen changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSnackbar","Common.TypeNameIdentifier":"BaseMatSnackbar"}},{"HashCode":1474134182,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSnackbar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatSnackbar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSnackbar.ChildContent","Common.TypeNameIdentifier":"BaseMatSnackbar"}},{"HashCode":-1360448604,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSnackbar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatSnackbar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSnackbar.ChildContent","Common.TypeNameIdentifier":"BaseMatSnackbar"}},{"HashCode":1731057734,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSortHeader","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSortHeader\">\r\n            <summary>\r\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSortHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSortHeader","Common.TypeNameIdentifier":"BaseMatSortHeader"}},{"HashCode":-1417051110,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSortHeader","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatSortHeader\">\r\n            <summary>\r\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSortHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSortHeader","Common.TypeNameIdentifier":"BaseMatSortHeader"}},{"HashCode":-297920755,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSortHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatSortHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSortHeader.ChildContent","Common.TypeNameIdentifier":"BaseMatSortHeader"}},{"HashCode":-428397524,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSortHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatSortHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSortHeader.ChildContent","Common.TypeNameIdentifier":"BaseMatSortHeader"}},{"HashCode":301573321,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSortHeaderRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSortHeaderRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"SortIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"SortIdChanged"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatSortDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatSortDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"DirectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortDirection>","Common.PropertyName":"DirectionChanged"}},{"Kind":"Components.Component","Name":"SortChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortChangedEvent>","Common.PropertyName":"SortChanged"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":-733015623,"Kind":"Components.Component","Name":"MatBlazor.BaseMatSortHeaderRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSortHeaderRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"SortIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"SortIdChanged"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatSortDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatSortDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"DirectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortDirection>","Common.PropertyName":"DirectionChanged"}},{"Kind":"Components.Component","Name":"SortChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortChangedEvent>","Common.PropertyName":"SortChanged"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":475791505,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSortHeaderRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatSortHeaderRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow.ChildContent","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":678716536,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatSortHeaderRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatSortHeaderRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow.ChildContent","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":419824104,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTabBar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTabBar\">\r\n            <summary>\r\n            WARNING: In Development progress\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTabBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Active","TypeName":"MatBlazor.BaseMatTabLabel","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.BaseMatTabLabel","Common.PropertyName":"Active"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.BaseMatTabLabel>","Common.PropertyName":"ActiveChanged"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTabBar","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":761194660,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTabBar","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTabBar\">\r\n            <summary>\r\n            WARNING: In Development progress\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTabBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Active","TypeName":"MatBlazor.BaseMatTabLabel","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.BaseMatTabLabel","Common.PropertyName":"Active"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.BaseMatTabLabel>","Common.PropertyName":"ActiveChanged"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTabBar","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":1415823021,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTabBar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatTabBar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTabBar.ChildContent","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":1554791017,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTabBar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatTabBar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTabBar.ChildContent","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":-583375098,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTabLabel","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTabLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTabLabel","Common.TypeNameIdentifier":"BaseMatTabLabel"}},{"HashCode":100085889,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTabLabel","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTabLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTabLabel","Common.TypeNameIdentifier":"BaseMatTabLabel"}},{"HashCode":-474096738,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTabLabel.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatTabLabel"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTabLabel.ChildContent","Common.TypeNameIdentifier":"BaseMatTabLabel"}},{"HashCode":1798267485,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTabLabel.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatTabLabel"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTabLabel.ChildContent","Common.TypeNameIdentifier":"BaseMatTabLabel"}},{"HashCode":349468519,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTable","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTable\">\r\n            <summary>\r\n            Mat Table display a table data.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PageParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageParamName"}},{"Kind":"Components.Component","Name":"PageSizeParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageSizeParamName"}},{"Kind":"Components.Component","Name":"Descending","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Descending"}},{"Kind":"Components.Component","Name":"DescendingParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DescendingParamName"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortBy"}},{"Kind":"Components.Component","Name":"SortByParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortByParamName"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageRecordCountLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageRecordCountLabel"}},{"Kind":"Components.Component","Name":"PagingDataPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingDataPropertyName"}},{"Kind":"Components.Component","Name":"PagingRecordsCountPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingRecordsCountPropertyName"}},{"Kind":"Components.Component","Name":"SearchTermParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermParamName"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"System.Action<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SelectionChanged"}},{"Kind":"Components.Component","Name":"HeaderRowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.HeaderRowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableHeader row\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HeaderRowClass"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableRow\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RowClass"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you can select a single row.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RequestApiOnlyOnce","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RequestApiOnlyOnce\">\r\n            <summary>\r\n            Specifies whether to Request the API only once.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequestApiOnlyOnce"}},{"Kind":"Components.Component","Name":"DebounceMilliseconds","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.DebounceMilliseconds\">\r\n            <summary>\r\n            Specifies the delay duration between user input on the Search Term Field. Default 800\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DebounceMilliseconds"}},{"Kind":"Components.Component","Name":"FilterByColumnName","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.FilterByColumnName\">\r\n            <summary>\r\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FilterByColumnName"}},{"Kind":"Components.Component","Name":"SearchTermFieldLabel","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldLabel\">\r\n            <summary>\r\n            Specifies the Label for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldLabel"}},{"Kind":"Components.Component","Name":"SearchTermFieldPlaceHolder","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldPlaceHolder\">\r\n            <summary>\r\n            Specifies the Placeholder for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldPlaceHolder"}},{"Kind":"Components.Component","Name":"LoadInitialData","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.LoadInitialData\">\r\n            <summary>\r\n            Specifies where to Load the Initial Table Data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LoadInitialData"}},{"Kind":"Components.Component","Name":"ApiUrl","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ApiUrl\">\r\n            <summary>\r\n            Specifies the API Url form for the table data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ApiUrl"}},{"Kind":"Components.Component","Name":"ShowPaging","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowPaging\">\r\n            <summary>\r\n            Specifies the Paging visibility\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowPaging"}},{"Kind":"Components.Component","Name":"ShowFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowFooter\">\r\n            <summary>\r\n            Specifies the Table Footer visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowFooter"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.Striped\">\r\n            <summary>\r\n            Determines if table has alternating color rows.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Striped"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.PageSize\">\r\n            <summary>\r\n            The number of rows per page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageSizeChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"PageSizeChanged"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.CurrentPage\">\r\n            <summary>\r\n            The current page, starting from one.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CurrentPage"}},{"Kind":"Components.Component","Name":"CurrentPageChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"CurrentPageChanged"}},{"Kind":"Components.Component","Name":"OnRowDbClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.OnRowDbClick\">\r\n            <summary>\r\n            Action to execute on row item\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Common.PropertyName":"OnRowDbClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTable","Common.TypeNameIdentifier":"BaseMatTable"}},{"HashCode":927222621,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTable","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTable\">\r\n            <summary>\r\n            Mat Table display a table data.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PageParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageParamName"}},{"Kind":"Components.Component","Name":"PageSizeParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageSizeParamName"}},{"Kind":"Components.Component","Name":"Descending","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Descending"}},{"Kind":"Components.Component","Name":"DescendingParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DescendingParamName"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortBy"}},{"Kind":"Components.Component","Name":"SortByParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortByParamName"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageRecordCountLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageRecordCountLabel"}},{"Kind":"Components.Component","Name":"PagingDataPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingDataPropertyName"}},{"Kind":"Components.Component","Name":"PagingRecordsCountPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingRecordsCountPropertyName"}},{"Kind":"Components.Component","Name":"SearchTermParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermParamName"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"System.Action<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SelectionChanged"}},{"Kind":"Components.Component","Name":"HeaderRowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.HeaderRowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableHeader row\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HeaderRowClass"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableRow\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RowClass"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you can select a single row.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RequestApiOnlyOnce","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RequestApiOnlyOnce\">\r\n            <summary>\r\n            Specifies whether to Request the API only once.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequestApiOnlyOnce"}},{"Kind":"Components.Component","Name":"DebounceMilliseconds","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.DebounceMilliseconds\">\r\n            <summary>\r\n            Specifies the delay duration between user input on the Search Term Field. Default 800\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DebounceMilliseconds"}},{"Kind":"Components.Component","Name":"FilterByColumnName","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.FilterByColumnName\">\r\n            <summary>\r\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FilterByColumnName"}},{"Kind":"Components.Component","Name":"SearchTermFieldLabel","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldLabel\">\r\n            <summary>\r\n            Specifies the Label for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldLabel"}},{"Kind":"Components.Component","Name":"SearchTermFieldPlaceHolder","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldPlaceHolder\">\r\n            <summary>\r\n            Specifies the Placeholder for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldPlaceHolder"}},{"Kind":"Components.Component","Name":"LoadInitialData","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.LoadInitialData\">\r\n            <summary>\r\n            Specifies where to Load the Initial Table Data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LoadInitialData"}},{"Kind":"Components.Component","Name":"ApiUrl","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ApiUrl\">\r\n            <summary>\r\n            Specifies the API Url form for the table data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ApiUrl"}},{"Kind":"Components.Component","Name":"ShowPaging","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowPaging\">\r\n            <summary>\r\n            Specifies the Paging visibility\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowPaging"}},{"Kind":"Components.Component","Name":"ShowFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowFooter\">\r\n            <summary>\r\n            Specifies the Table Footer visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowFooter"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.Striped\">\r\n            <summary>\r\n            Determines if table has alternating color rows.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Striped"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.PageSize\">\r\n            <summary>\r\n            The number of rows per page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageSizeChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"PageSizeChanged"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.CurrentPage\">\r\n            <summary>\r\n            The current page, starting from one.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CurrentPage"}},{"Kind":"Components.Component","Name":"CurrentPageChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"CurrentPageChanged"}},{"Kind":"Components.Component","Name":"OnRowDbClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.OnRowDbClick\">\r\n            <summary>\r\n            Action to execute on row item\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Common.PropertyName":"OnRowDbClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTable","Common.TypeNameIdentifier":"BaseMatTable"}},{"HashCode":-695218766,"Kind":"Components.Component","Name":"MatBlazor.BaseTableRow","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseTableRow\">\r\n            <summary>\r\n            Mat Table Row display a table row   \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseTableRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RowItem","TypeName":"System.Object","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RowItem"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseTableRow","Common.TypeNameIdentifier":"BaseTableRow"}},{"HashCode":1249429049,"Kind":"Components.Component","Name":"MatBlazor.BaseTableRow","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseTableRow\">\r\n            <summary>\r\n            Mat Table Row display a table row   \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseTableRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RowItem","TypeName":"System.Object","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RowItem"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseTableRow","Common.TypeNameIdentifier":"BaseTableRow"}},{"HashCode":1579207120,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseTableRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseTableRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseTableRow.ChildContent","Common.TypeNameIdentifier":"BaseTableRow"}},{"HashCode":-1829909123,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseTableRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseTableRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseTableRow.ChildContent","Common.TypeNameIdentifier":"BaseTableRow"}},{"HashCode":-27712287,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTab","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"LabelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"LabelContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTab","Common.TypeNameIdentifier":"BaseMatTab"}},{"HashCode":76477322,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTab","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"LabelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"LabelContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTab","Common.TypeNameIdentifier":"BaseMatTab"}},{"HashCode":212900439,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTab.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTab.ChildContent","Common.TypeNameIdentifier":"BaseMatTab"}},{"HashCode":-220595427,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTab.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTab.ChildContent","Common.TypeNameIdentifier":"BaseMatTab"}},{"HashCode":-67529405,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTab.LabelContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelContent","ParentTag":"BaseMatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTab.LabelContent","Common.TypeNameIdentifier":"BaseMatTab"}},{"HashCode":1515160829,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTab.LabelContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelContent","ParentTag":"MatBlazor.BaseMatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTab.LabelContent","Common.TypeNameIdentifier":"BaseMatTab"}},{"HashCode":1665627152,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTabGroup","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTabGroup\">\r\n            <summary>\r\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTabGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTabGroup","Common.TypeNameIdentifier":"BaseMatTabGroup"}},{"HashCode":-840329715,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTabGroup","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTabGroup\">\r\n            <summary>\r\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTabGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTabGroup","Common.TypeNameIdentifier":"BaseMatTabGroup"}},{"HashCode":-1619301159,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTabGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatTabGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTabGroup.ChildContent","Common.TypeNameIdentifier":"BaseMatTabGroup"}},{"HashCode":-1469592778,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTabGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatTabGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTabGroup.ChildContent","Common.TypeNameIdentifier":"BaseMatTabGroup"}},{"HashCode":-1832443373,"Kind":"Components.Component","Name":"MatBlazor.MatStringField","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatStringField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatStringField","Common.TypeNameIdentifier":"MatStringField"}},{"HashCode":1952487450,"Kind":"Components.Component","Name":"MatBlazor.MatStringField","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatStringField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatStringField","Common.TypeNameIdentifier":"MatStringField"}},{"HashCode":-56174374,"Kind":"Components.ChildContent","Name":"MatBlazor.MatStringField.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatStringField"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatStringField.ChildContent","Common.TypeNameIdentifier":"MatStringField"}},{"HashCode":-1761089414,"Kind":"Components.ChildContent","Name":"MatBlazor.MatStringField.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatStringField"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatStringField.ChildContent","Common.TypeNameIdentifier":"MatStringField"}},{"HashCode":-534711975,"Kind":"Components.Component","Name":"MatBlazor.MatTextField<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatTextField`1\">\r\n            <summary>\r\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\r\n            </summary>\r\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTextField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTextField<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTextField"}},{"HashCode":-1913438309,"Kind":"Components.Component","Name":"MatBlazor.MatTextField<TValue>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatTextField`1\">\r\n            <summary>\r\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\r\n            </summary>\r\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTextField"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTextField<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTextField"}},{"HashCode":2011178443,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTextField<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatTextField"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTextField<TValue>.ChildContent","Common.TypeNameIdentifier":"MatTextField"}},{"HashCode":-1038135747,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTextField<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatTextField"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTextField<TValue>.ChildContent","Common.TypeNameIdentifier":"MatTextField"}},{"HashCode":1928456296,"Kind":"Components.Component","Name":"MatBlazor.BaseMatThemeProvider","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatThemeProvider\">\r\n            <summary>\r\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"MatBlazor.MatTheme","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTheme","Common.PropertyName":"Theme"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatThemeProvider","Common.TypeNameIdentifier":"BaseMatThemeProvider"}},{"HashCode":-1083203846,"Kind":"Components.Component","Name":"MatBlazor.BaseMatThemeProvider","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatThemeProvider\">\r\n            <summary>\r\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"MatBlazor.MatTheme","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTheme","Common.PropertyName":"Theme"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatThemeProvider","Common.TypeNameIdentifier":"BaseMatThemeProvider"}},{"HashCode":835119406,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatThemeProvider.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatThemeProvider"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatThemeProvider.ChildContent","Common.TypeNameIdentifier":"BaseMatThemeProvider"}},{"HashCode":564161847,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatThemeProvider.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatThemeProvider"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatThemeProvider.ChildContent","Common.TypeNameIdentifier":"BaseMatThemeProvider"}},{"HashCode":-1964179136,"Kind":"Components.Component","Name":"MatBlazor.BaseMatToastContainer","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatToastContainer\">\r\n            <summary>\r\n            Toasts provide brief notifications or messages about app processes\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatToastContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatToastContainer","Common.TypeNameIdentifier":"BaseMatToastContainer"}},{"HashCode":2144472233,"Kind":"Components.Component","Name":"MatBlazor.BaseMatToastContainer","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatToastContainer\">\r\n            <summary>\r\n            Toasts provide brief notifications or messages about app processes\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatToastContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatToastContainer","Common.TypeNameIdentifier":"BaseMatToastContainer"}},{"HashCode":705549398,"Kind":"Components.Component","Name":"MatBlazor.BaseMatToastItem","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatToastItem\">\r\n            <summary>\r\n            Toasts provide brief notifications or messages about app processes\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatToastItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Toast","TypeName":"MatBlazor.MatToast","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToast","Common.PropertyName":"Toast"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Type","TypeName":"MatBlazor.MatToastType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToastType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatToastItem","Common.TypeNameIdentifier":"BaseMatToastItem"}},{"HashCode":1643153217,"Kind":"Components.Component","Name":"MatBlazor.BaseMatToastItem","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatToastItem\">\r\n            <summary>\r\n            Toasts provide brief notifications or messages about app processes\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatToastItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Toast","TypeName":"MatBlazor.MatToast","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToast","Common.PropertyName":"Toast"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Type","TypeName":"MatBlazor.MatToastType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToastType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatToastItem","Common.TypeNameIdentifier":"BaseMatToastItem"}},{"HashCode":1156138171,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatToastItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatToastItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatToastItem.ChildContent","Common.TypeNameIdentifier":"BaseMatToastItem"}},{"HashCode":-80805682,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatToastItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatToastItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatToastItem.ChildContent","Common.TypeNameIdentifier":"BaseMatToastItem"}},{"HashCode":2083584335,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTooltip","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTooltip\">\r\n            <summary>\r\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MatBlazor.ForwardRef>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TooltipContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"TooltipContent"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tooltip"}},{"Kind":"Components.Component","Name":"TargetId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TargetId"}},{"Kind":"Components.Component","Name":"Wrap","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Wrap"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatTooltipPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTooltipPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTooltip","Common.TypeNameIdentifier":"BaseMatTooltip"}},{"HashCode":-1285595577,"Kind":"Components.Component","Name":"MatBlazor.BaseMatTooltip","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatTooltip\">\r\n            <summary>\r\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MatBlazor.ForwardRef>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TooltipContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"TooltipContent"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tooltip"}},{"Kind":"Components.Component","Name":"TargetId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TargetId"}},{"Kind":"Components.Component","Name":"Wrap","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Wrap"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatTooltipPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTooltipPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatTooltip","Common.TypeNameIdentifier":"BaseMatTooltip"}},{"HashCode":-999575455,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTooltip.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatTooltip"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTooltip.ChildContent","Common.TypeNameIdentifier":"BaseMatTooltip"}},{"HashCode":-1234537522,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTooltip.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatTooltip"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTooltip.ChildContent","Common.TypeNameIdentifier":"BaseMatTooltip"}},{"HashCode":832376272,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTooltip.TooltipContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContent","ParentTag":"BaseMatTooltip"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTooltip.TooltipContent","Common.TypeNameIdentifier":"BaseMatTooltip"}},{"HashCode":273031155,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatTooltip.TooltipContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContent","ParentTag":"MatBlazor.BaseMatTooltip"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatTooltip.TooltipContent","Common.TypeNameIdentifier":"BaseMatTooltip"}},{"HashCode":-1983060882,"Kind":"Components.Component","Name":"MatBlazor.MatTreeNode<TNode>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTreeNode"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNode","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TNode : class","Components.TypeParameter":"True","Common.PropertyName":"TNode"}},{"Kind":"Components.Component","Name":"Node","TypeName":"TNode","Metadata":{"Common.GloballyQualifiedTypeName":"TNode","Components.GenericTyped":"True","Common.PropertyName":"Node"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsSelected"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTreeNode<TNode>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTreeNode"}},{"HashCode":-691149752,"Kind":"Components.Component","Name":"MatBlazor.MatTreeNode<TNode>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTreeNode"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNode","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TNode : class","Components.TypeParameter":"True","Common.PropertyName":"TNode"}},{"Kind":"Components.Component","Name":"Node","TypeName":"TNode","Metadata":{"Common.GloballyQualifiedTypeName":"TNode","Components.GenericTyped":"True","Common.PropertyName":"Node"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsSelected"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTreeNode<TNode>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTreeNode"}},{"HashCode":1766159696,"Kind":"Components.Component","Name":"MatBlazor.MatTreeView<TNode>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatTreeView`1\">\r\n            <summary>\r\n            Renders the data as a tree.\r\n            </summary>\r\n            <typeparam name=\"TNode\"></typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNode","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TNode : class","Components.TypeParameter":"True","Common.PropertyName":"TNode"}},{"Kind":"Components.Component","Name":"RootNode","TypeName":"TNode","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.RootNode\">\r\n            <summary>\r\n            The root node to be displayed in the tree\r\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TNode","Components.GenericTyped":"True","Common.PropertyName":"RootNode"}},{"Kind":"Components.Component","Name":"RootNodes","TypeName":"System.Collections.Generic.IEnumerable<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.RootNodes\">\r\n            <summary>\r\n            All the root nodes displayed in the tree\r\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TNode>","Components.GenericTyped":"True","Common.PropertyName":"RootNodes"}},{"Kind":"Components.Component","Name":"MinItemHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.MinItemHeight\">\r\n            <summary>\r\n            Optional, sets the min height of tree view item in pixels. Use zero to always fit to content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"MinItemHeight"}},{"Kind":"Components.Component","Name":"SelectedNode","TypeName":"TNode","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.SelectedNode\">\r\n            <summary>\r\n            The selected item in the tree\r\n            (Optional - default null)\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TNode","Components.GenericTyped":"True","Common.PropertyName":"SelectedNode"}},{"Kind":"Components.Component","Name":"NodeTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.NodeTemplate\">\r\n            <summary>\r\n            The template used to render the Node\r\n            (Required)\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TNode>","Components.GenericTyped":"True","Common.PropertyName":"NodeTemplate"}},{"Kind":"Components.Component","Name":"GetChildNodesCallback","TypeName":"MatBlazor.GetChildNodesDelegate<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\">\r\n            <summary>\r\n            A function that gets all the child nodes for a given parentNode.\r\n            If lazy loading is supported and the child nodes have not yet been \r\n            loaded then it should return null.\r\n            (Required)\r\n            </summary>\r\n            <remarks>\r\n            The function should return a collection of child nodes.\r\n               \r\n            This function maybe called many times for a given node.\r\n            \r\n            Loading on Demand\r\n            If Lazy loading is supported and the child nodes have not been loaded\r\n            then it should return null. \r\n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \r\n            get the child nodes, to it must have been set.\r\n            </remarks>\r\n            <example><![CDATA[\r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        GetChildNodesCallback=\"@GetChildNodes\" />\r\n            ...\r\n            @code {\r\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\r\n                {\r\n                    if (parentNode.AreChildrenLoaded == false)\r\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\r\n                        \r\n                    return parentNode.Nodes;\r\n                }\r\n            }        \r\n            ]]></example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.GetChildNodesDelegate<TNode>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"GetChildNodesCallback"}},{"Kind":"Components.Component","Name":"LoadChildNodesCallback","TypeName":"MatBlazor.LoadChildNodesDelegate<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\">\r\n            <summary>\r\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\r\n            is used. \r\n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\r\n            </summary>\r\n            <remarks>\r\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \r\n            This causes this function to be called which should load all the child nodes.\r\n            The callback is asynchronous and should return when the values have been loaded.\r\n            \r\n            If an error occurs during the loading, then throw an exception (the exceptions message\r\n            will be shown in the UI). The function many be called again for the same node in order\r\n            to re-try.\r\n            </remarks>\r\n            <example><![CDATA[\r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        GetChildNodesCallback=\"@GetChildNodes\" \r\n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\r\n            ...\r\n            @code {\r\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\r\n                {\r\n                    if (parentNode.AreChildrenLoaded == false)\r\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\r\n                        \r\n                    return parentNode.Nodes;\r\n                }\r\n                \r\n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\r\n                {\r\n                    if (parentNode.AreChildrenLoaded == false)\r\n                    {\r\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\r\n                    }\r\n                        \r\n                    return parentNode.Nodes;\r\n                }        \r\n            }        \r\n            ]]></example>        \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.LoadChildNodesDelegate<TNode>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True","Common.PropertyName":"LoadChildNodesCallback"}},{"Kind":"Components.Component","Name":"IsNodeExpandedCallback","TypeName":"MatBlazor.IsNodeExpandedDelegate<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.IsNodeExpandedCallback\">\r\n            <summary>\r\n            A function that indicates if the given node is expanded or collapsed.\r\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"!:K5MatTreeView&lt;TNode&gt;\" />)\r\n            </summary>\r\n            <example><![CDATA[\r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\r\n            \r\n            or \r\n            \r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\r\n            ...\r\n            @code {\r\n                private bool IsExpanded(MyTreeNode myTreeNode)\r\n                {\r\n                    return myTreeNode.IsExpanded;\r\n                }\r\n            }\r\n            ]]></example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.IsNodeExpandedDelegate<TNode>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"IsNodeExpandedCallback"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"ExpandStateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.ExpandStateChanged\">\r\n            <summary>\r\n            An event raised when the expanded state of a node changes\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.ExpandedStateChangedArgs<TNode>>","Components.GenericTyped":"True","Common.PropertyName":"ExpandStateChanged"}},{"Kind":"Components.Component","Name":"SelectedNodeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.SelectedNodeChanged\">\r\n            <summary>\r\n            An event raised when the selected node changes\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TNode>","Components.GenericTyped":"True","Common.PropertyName":"SelectedNodeChanged"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTreeView<TNode>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTreeView"}},{"HashCode":1974371727,"Kind":"Components.Component","Name":"MatBlazor.MatTreeView<TNode>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.MatTreeView`1\">\r\n            <summary>\r\n            Renders the data as a tree.\r\n            </summary>\r\n            <typeparam name=\"TNode\"></typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNode","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TNode : class","Components.TypeParameter":"True","Common.PropertyName":"TNode"}},{"Kind":"Components.Component","Name":"RootNode","TypeName":"TNode","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.RootNode\">\r\n            <summary>\r\n            The root node to be displayed in the tree\r\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TNode","Components.GenericTyped":"True","Common.PropertyName":"RootNode"}},{"Kind":"Components.Component","Name":"RootNodes","TypeName":"System.Collections.Generic.IEnumerable<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.RootNodes\">\r\n            <summary>\r\n            All the root nodes displayed in the tree\r\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TNode>","Components.GenericTyped":"True","Common.PropertyName":"RootNodes"}},{"Kind":"Components.Component","Name":"MinItemHeight","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.MinItemHeight\">\r\n            <summary>\r\n            Optional, sets the min height of tree view item in pixels. Use zero to always fit to content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"MinItemHeight"}},{"Kind":"Components.Component","Name":"SelectedNode","TypeName":"TNode","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.SelectedNode\">\r\n            <summary>\r\n            The selected item in the tree\r\n            (Optional - default null)\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TNode","Components.GenericTyped":"True","Common.PropertyName":"SelectedNode"}},{"Kind":"Components.Component","Name":"NodeTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.NodeTemplate\">\r\n            <summary>\r\n            The template used to render the Node\r\n            (Required)\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TNode>","Components.GenericTyped":"True","Common.PropertyName":"NodeTemplate"}},{"Kind":"Components.Component","Name":"GetChildNodesCallback","TypeName":"MatBlazor.GetChildNodesDelegate<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\">\r\n            <summary>\r\n            A function that gets all the child nodes for a given parentNode.\r\n            If lazy loading is supported and the child nodes have not yet been \r\n            loaded then it should return null.\r\n            (Required)\r\n            </summary>\r\n            <remarks>\r\n            The function should return a collection of child nodes.\r\n               \r\n            This function maybe called many times for a given node.\r\n            \r\n            Loading on Demand\r\n            If Lazy loading is supported and the child nodes have not been loaded\r\n            then it should return null. \r\n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \r\n            get the child nodes, to it must have been set.\r\n            </remarks>\r\n            <example><![CDATA[\r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        GetChildNodesCallback=\"@GetChildNodes\" />\r\n            ...\r\n            @code {\r\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\r\n                {\r\n                    if (parentNode.AreChildrenLoaded == false)\r\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\r\n                        \r\n                    return parentNode.Nodes;\r\n                }\r\n            }        \r\n            ]]></example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.GetChildNodesDelegate<TNode>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"GetChildNodesCallback"}},{"Kind":"Components.Component","Name":"LoadChildNodesCallback","TypeName":"MatBlazor.LoadChildNodesDelegate<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\">\r\n            <summary>\r\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\r\n            is used. \r\n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\r\n            </summary>\r\n            <remarks>\r\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \r\n            This causes this function to be called which should load all the child nodes.\r\n            The callback is asynchronous and should return when the values have been loaded.\r\n            \r\n            If an error occurs during the loading, then throw an exception (the exceptions message\r\n            will be shown in the UI). The function many be called again for the same node in order\r\n            to re-try.\r\n            </remarks>\r\n            <example><![CDATA[\r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        GetChildNodesCallback=\"@GetChildNodes\" \r\n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\r\n            ...\r\n            @code {\r\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\r\n                {\r\n                    if (parentNode.AreChildrenLoaded == false)\r\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\r\n                        \r\n                    return parentNode.Nodes;\r\n                }\r\n                \r\n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\r\n                {\r\n                    if (parentNode.AreChildrenLoaded == false)\r\n                    {\r\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\r\n                    }\r\n                        \r\n                    return parentNode.Nodes;\r\n                }        \r\n            }        \r\n            ]]></example>        \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.LoadChildNodesDelegate<TNode>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True","Common.PropertyName":"LoadChildNodesCallback"}},{"Kind":"Components.Component","Name":"IsNodeExpandedCallback","TypeName":"MatBlazor.IsNodeExpandedDelegate<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.IsNodeExpandedCallback\">\r\n            <summary>\r\n            A function that indicates if the given node is expanded or collapsed.\r\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"!:K5MatTreeView&lt;TNode&gt;\" />)\r\n            </summary>\r\n            <example><![CDATA[\r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\r\n            \r\n            or \r\n            \r\n            <MatTreeView TNode=\"MyTreeNode\"\r\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\r\n            ...\r\n            @code {\r\n                private bool IsExpanded(MyTreeNode myTreeNode)\r\n                {\r\n                    return myTreeNode.IsExpanded;\r\n                }\r\n            }\r\n            ]]></example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.IsNodeExpandedDelegate<TNode>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"IsNodeExpandedCallback"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"ExpandStateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.ExpandStateChanged\">\r\n            <summary>\r\n            An event raised when the expanded state of a node changes\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.ExpandedStateChangedArgs<TNode>>","Components.GenericTyped":"True","Common.PropertyName":"ExpandStateChanged"}},{"Kind":"Components.Component","Name":"SelectedNodeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNode>","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.SelectedNodeChanged\">\r\n            <summary>\r\n            An event raised when the selected node changes\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TNode>","Components.GenericTyped":"True","Common.PropertyName":"SelectedNodeChanged"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTreeView<TNode>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTreeView"}},{"HashCode":-266751396,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTreeView<TNode>.NodeTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.NodeTemplate\">\r\n            <summary>\r\n            The template used to render the Node\r\n            (Required)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NodeTemplate","ParentTag":"MatTreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NodeTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTreeView<TNode>.NodeTemplate","Common.TypeNameIdentifier":"MatTreeView"}},{"HashCode":-451333792,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTreeView<TNode>.NodeTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatTreeView`1.NodeTemplate\">\r\n            <summary>\r\n            The template used to render the Node\r\n            (Required)\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NodeTemplate","ParentTag":"MatBlazor.MatTreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NodeTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTreeView<TNode>.NodeTemplate","Common.TypeNameIdentifier":"MatTreeView"}},{"HashCode":-1109416594,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHeadline1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline1","Common.TypeNameIdentifier":"MatHeadline1"}},{"HashCode":-1736754285,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHeadline1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline1","Common.TypeNameIdentifier":"MatHeadline1"}},{"HashCode":-1709713900,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHeadline1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline1.ChildContent","Common.TypeNameIdentifier":"MatHeadline1"}},{"HashCode":26529604,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHeadline1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline1.ChildContent","Common.TypeNameIdentifier":"MatHeadline1"}},{"HashCode":-934104649,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHeadline2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline2","Common.TypeNameIdentifier":"MatHeadline2"}},{"HashCode":-880545252,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHeadline2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline2","Common.TypeNameIdentifier":"MatHeadline2"}},{"HashCode":-162757157,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHeadline2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline2.ChildContent","Common.TypeNameIdentifier":"MatHeadline2"}},{"HashCode":-1002415133,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHeadline2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline2.ChildContent","Common.TypeNameIdentifier":"MatHeadline2"}},{"HashCode":-1952834239,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline3","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHeadline3"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline3","Common.TypeNameIdentifier":"MatHeadline3"}},{"HashCode":-1714740426,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline3","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHeadline3"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline3","Common.TypeNameIdentifier":"MatHeadline3"}},{"HashCode":-1519149512,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline3.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHeadline3"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline3.ChildContent","Common.TypeNameIdentifier":"MatHeadline3"}},{"HashCode":-206474012,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline3.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHeadline3"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline3.ChildContent","Common.TypeNameIdentifier":"MatHeadline3"}},{"HashCode":-1224300137,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline4","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHeadline4"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline4","Common.TypeNameIdentifier":"MatHeadline4"}},{"HashCode":-546114795,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline4","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHeadline4"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline4","Common.TypeNameIdentifier":"MatHeadline4"}},{"HashCode":727608339,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline4.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHeadline4"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline4.ChildContent","Common.TypeNameIdentifier":"MatHeadline4"}},{"HashCode":2080833455,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline4.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHeadline4"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline4.ChildContent","Common.TypeNameIdentifier":"MatHeadline4"}},{"HashCode":1951392940,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline5","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHeadline5"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline5","Common.TypeNameIdentifier":"MatHeadline5"}},{"HashCode":-613101877,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline5","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHeadline5"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline5","Common.TypeNameIdentifier":"MatHeadline5"}},{"HashCode":-109019305,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline5.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHeadline5"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline5.ChildContent","Common.TypeNameIdentifier":"MatHeadline5"}},{"HashCode":-1663269096,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline5.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHeadline5"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline5.ChildContent","Common.TypeNameIdentifier":"MatHeadline5"}},{"HashCode":-1496608540,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline6","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHeadline6"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline6","Common.TypeNameIdentifier":"MatHeadline6"}},{"HashCode":-1517324073,"Kind":"Components.Component","Name":"MatBlazor.MatHeadline6","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHeadline6"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHeadline6","Common.TypeNameIdentifier":"MatHeadline6"}},{"HashCode":667228372,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline6.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHeadline6"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline6.ChildContent","Common.TypeNameIdentifier":"MatHeadline6"}},{"HashCode":-532946151,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHeadline6.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHeadline6"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHeadline6.ChildContent","Common.TypeNameIdentifier":"MatHeadline6"}},{"HashCode":-789936160,"Kind":"Components.Component","Name":"MatBlazor.MatH1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatH1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH1","Common.TypeNameIdentifier":"MatH1"}},{"HashCode":1581291412,"Kind":"Components.Component","Name":"MatBlazor.MatH1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatH1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH1","Common.TypeNameIdentifier":"MatH1"}},{"HashCode":-1206171604,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatH1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH1.ChildContent","Common.TypeNameIdentifier":"MatH1"}},{"HashCode":1456844270,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatH1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH1.ChildContent","Common.TypeNameIdentifier":"MatH1"}},{"HashCode":579174206,"Kind":"Components.Component","Name":"MatBlazor.MatH2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatH2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH2","Common.TypeNameIdentifier":"MatH2"}},{"HashCode":1900318850,"Kind":"Components.Component","Name":"MatBlazor.MatH2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatH2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH2","Common.TypeNameIdentifier":"MatH2"}},{"HashCode":-792184100,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatH2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH2.ChildContent","Common.TypeNameIdentifier":"MatH2"}},{"HashCode":2134480163,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatH2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH2.ChildContent","Common.TypeNameIdentifier":"MatH2"}},{"HashCode":-1277621799,"Kind":"Components.Component","Name":"MatBlazor.MatH3","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatH3"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH3","Common.TypeNameIdentifier":"MatH3"}},{"HashCode":-1659843755,"Kind":"Components.Component","Name":"MatBlazor.MatH3","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatH3"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH3","Common.TypeNameIdentifier":"MatH3"}},{"HashCode":-1317736094,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH3.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatH3"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH3.ChildContent","Common.TypeNameIdentifier":"MatH3"}},{"HashCode":-797064847,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH3.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatH3"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH3.ChildContent","Common.TypeNameIdentifier":"MatH3"}},{"HashCode":19258362,"Kind":"Components.Component","Name":"MatBlazor.MatH4","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatH4"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH4","Common.TypeNameIdentifier":"MatH4"}},{"HashCode":329294833,"Kind":"Components.Component","Name":"MatBlazor.MatH4","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatH4"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH4","Common.TypeNameIdentifier":"MatH4"}},{"HashCode":-901234029,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH4.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatH4"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH4.ChildContent","Common.TypeNameIdentifier":"MatH4"}},{"HashCode":-384349133,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH4.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatH4"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH4.ChildContent","Common.TypeNameIdentifier":"MatH4"}},{"HashCode":-1509292994,"Kind":"Components.Component","Name":"MatBlazor.MatH5","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatH5"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH5","Common.TypeNameIdentifier":"MatH5"}},{"HashCode":799581451,"Kind":"Components.Component","Name":"MatBlazor.MatH5","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatH5"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH5","Common.TypeNameIdentifier":"MatH5"}},{"HashCode":-1719539732,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH5.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatH5"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH5.ChildContent","Common.TypeNameIdentifier":"MatH5"}},{"HashCode":2096750728,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH5.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatH5"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH5.ChildContent","Common.TypeNameIdentifier":"MatH5"}},{"HashCode":-73298363,"Kind":"Components.Component","Name":"MatBlazor.MatH6","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatH6"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH6","Common.TypeNameIdentifier":"MatH6"}},{"HashCode":1133825215,"Kind":"Components.Component","Name":"MatBlazor.MatH6","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatH6"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatH6","Common.TypeNameIdentifier":"MatH6"}},{"HashCode":-435574864,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH6.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatH6"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH6.ChildContent","Common.TypeNameIdentifier":"MatH6"}},{"HashCode":-1825750423,"Kind":"Components.ChildContent","Name":"MatBlazor.MatH6.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatH6"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatH6.ChildContent","Common.TypeNameIdentifier":"MatH6"}},{"HashCode":1465661311,"Kind":"Components.Component","Name":"MatBlazor.MatSubtitle1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSubtitle1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSubtitle1","Common.TypeNameIdentifier":"MatSubtitle1"}},{"HashCode":-1241245750,"Kind":"Components.Component","Name":"MatBlazor.MatSubtitle1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSubtitle1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSubtitle1","Common.TypeNameIdentifier":"MatSubtitle1"}},{"HashCode":-458794314,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSubtitle1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSubtitle1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSubtitle1.ChildContent","Common.TypeNameIdentifier":"MatSubtitle1"}},{"HashCode":2118597142,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSubtitle1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSubtitle1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSubtitle1.ChildContent","Common.TypeNameIdentifier":"MatSubtitle1"}},{"HashCode":1217370091,"Kind":"Components.Component","Name":"MatBlazor.MatSubtitle2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSubtitle2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSubtitle2","Common.TypeNameIdentifier":"MatSubtitle2"}},{"HashCode":-1274190145,"Kind":"Components.Component","Name":"MatBlazor.MatSubtitle2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSubtitle2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSubtitle2","Common.TypeNameIdentifier":"MatSubtitle2"}},{"HashCode":-306730197,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSubtitle2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSubtitle2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSubtitle2.ChildContent","Common.TypeNameIdentifier":"MatSubtitle2"}},{"HashCode":1976032360,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSubtitle2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSubtitle2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSubtitle2.ChildContent","Common.TypeNameIdentifier":"MatSubtitle2"}},{"HashCode":-1614574015,"Kind":"Components.Component","Name":"MatBlazor.MatBody1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBody1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatBody1","Common.TypeNameIdentifier":"MatBody1"}},{"HashCode":-1820021267,"Kind":"Components.Component","Name":"MatBlazor.MatBody1","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatBody1"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatBody1","Common.TypeNameIdentifier":"MatBody1"}},{"HashCode":-766112553,"Kind":"Components.ChildContent","Name":"MatBlazor.MatBody1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBody1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatBody1.ChildContent","Common.TypeNameIdentifier":"MatBody1"}},{"HashCode":-1102319084,"Kind":"Components.ChildContent","Name":"MatBlazor.MatBody1.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatBody1"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatBody1.ChildContent","Common.TypeNameIdentifier":"MatBody1"}},{"HashCode":-128418509,"Kind":"Components.Component","Name":"MatBlazor.MatBody2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBody2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatBody2","Common.TypeNameIdentifier":"MatBody2"}},{"HashCode":-750165104,"Kind":"Components.Component","Name":"MatBlazor.MatBody2","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatBody2"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatBody2","Common.TypeNameIdentifier":"MatBody2"}},{"HashCode":-733748360,"Kind":"Components.ChildContent","Name":"MatBlazor.MatBody2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBody2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatBody2.ChildContent","Common.TypeNameIdentifier":"MatBody2"}},{"HashCode":1087438710,"Kind":"Components.ChildContent","Name":"MatBlazor.MatBody2.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatBody2"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatBody2.ChildContent","Common.TypeNameIdentifier":"MatBody2"}},{"HashCode":-485566323,"Kind":"Components.Component","Name":"MatBlazor.MatCaption","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCaption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCaption","Common.TypeNameIdentifier":"MatCaption"}},{"HashCode":386897318,"Kind":"Components.Component","Name":"MatBlazor.MatCaption","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCaption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCaption","Common.TypeNameIdentifier":"MatCaption"}},{"HashCode":-1332119638,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCaption.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCaption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCaption.ChildContent","Common.TypeNameIdentifier":"MatCaption"}},{"HashCode":822883802,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCaption.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCaption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCaption.ChildContent","Common.TypeNameIdentifier":"MatCaption"}},{"HashCode":-630435238,"Kind":"Components.Component","Name":"MatBlazor.MatOverline","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatOverline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatOverline","Common.TypeNameIdentifier":"MatOverline"}},{"HashCode":1296745436,"Kind":"Components.Component","Name":"MatBlazor.MatOverline","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatOverline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Anchor","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Anchor"}},{"Kind":"Components.Component","Name":"AnchorId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AnchorId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatOverline","Common.TypeNameIdentifier":"MatOverline"}},{"HashCode":-358399202,"Kind":"Components.ChildContent","Name":"MatBlazor.MatOverline.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatOverline"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatOverline.ChildContent","Common.TypeNameIdentifier":"MatOverline"}},{"HashCode":1454097547,"Kind":"Components.ChildContent","Name":"MatBlazor.MatOverline.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatOverline"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatOverline.ChildContent","Common.TypeNameIdentifier":"MatOverline"}},{"HashCode":449468303,"Kind":"Components.Component","Name":"MatBlazor.BaseMatVirtualScroll<TItem>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatVirtualScroll`1\">\r\n            <summary>\r\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\r\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\r\n            </summary>\r\n            <typeparam name=\"TItem\"></typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ItemHeight","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ItemHeight"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatVirtualScroll<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatVirtualScroll"}},{"HashCode":-1623216426,"Kind":"Components.Component","Name":"MatBlazor.BaseMatVirtualScroll<TItem>","AssemblyName":"MatBlazor","Documentation":"<member name=\"T:MatBlazor.BaseMatVirtualScroll`1\">\r\n            <summary>\r\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\r\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\r\n            </summary>\r\n            <typeparam name=\"TItem\"></typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ItemHeight","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ItemHeight"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.BaseMatVirtualScroll<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"BaseMatVirtualScroll"}},{"HashCode":1909467186,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BaseMatVirtualScroll"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent","Common.TypeNameIdentifier":"BaseMatVirtualScroll"}},{"HashCode":1219563872,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.BaseMatVirtualScroll"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent","Common.TypeNameIdentifier":"BaseMatVirtualScroll"}},{"HashCode":242303226,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"BaseMatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatVirtualScroll"}},{"HashCode":695613671,"Kind":"Components.ChildContent","Name":"MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.BaseMatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate","Common.TypeNameIdentifier":"BaseMatVirtualScroll"}},{"HashCode":97132150,"Kind":"Components.Component","Name":"MatBlazor.MatViewChildren<TSelect>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatViewChildren"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TSelect","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TSelect : global::Microsoft.AspNetCore.Components.IComponent","Components.TypeParameter":"True","Common.PropertyName":"TSelect"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatViewChildren<TSelect>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatViewChildren"}},{"HashCode":1800922677,"Kind":"Components.Component","Name":"MatBlazor.MatViewChildren<TSelect>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatViewChildren"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TSelect","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TSelect : global::Microsoft.AspNetCore.Components.IComponent","Components.TypeParameter":"True","Common.PropertyName":"TSelect"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatViewChildren<TSelect>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatViewChildren"}},{"HashCode":270191500,"Kind":"Components.ChildContent","Name":"MatBlazor.MatViewChildren<TSelect>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatViewChildren"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatViewChildren<TSelect>.ChildContent","Common.TypeNameIdentifier":"MatViewChildren"}},{"HashCode":360853946,"Kind":"Components.ChildContent","Name":"MatBlazor.MatViewChildren<TSelect>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatViewChildren"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatViewChildren<TSelect>.ChildContent","Common.TypeNameIdentifier":"MatViewChildren"}},{"HashCode":869162120,"Kind":"Components.Component","Name":"MatBlazor.ForwardRefContext<TRef>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ForwardRefContext"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TRef","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TRef"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MatBlazor.ForwardRef<TRef>>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.ForwardRefContext<TRef>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"ForwardRefContext"}},{"HashCode":40335840,"Kind":"Components.Component","Name":"MatBlazor.ForwardRefContext<TRef>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.ForwardRefContext"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TRef","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TRef"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MatBlazor.ForwardRef<TRef>>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.ForwardRefContext<TRef>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"ForwardRefContext"}},{"HashCode":1790451981,"Kind":"Components.ChildContent","Name":"MatBlazor.ForwardRefContext<TRef>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ForwardRefContext"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.ForwardRefContext<TRef>.ChildContent","Common.TypeNameIdentifier":"ForwardRefContext"}},{"HashCode":1925200021,"Kind":"Components.ChildContent","Name":"MatBlazor.ForwardRefContext<TRef>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.ForwardRefContext"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.ForwardRefContext<TRef>.ChildContent","Common.TypeNameIdentifier":"ForwardRefContext"}},{"HashCode":-1526469738,"Kind":"Components.Component","Name":"MatBlazor.MatCombine","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCombine"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCombine","Common.TypeNameIdentifier":"MatCombine"}},{"HashCode":1655599132,"Kind":"Components.Component","Name":"MatBlazor.MatCombine","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCombine"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCombine","Common.TypeNameIdentifier":"MatCombine"}},{"HashCode":1123430320,"Kind":"Components.Component","Name":"MatBlazor.MatContentWrapper","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatContentWrapper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatContentWrapper","Common.TypeNameIdentifier":"MatContentWrapper"}},{"HashCode":442228680,"Kind":"Components.Component","Name":"MatBlazor.MatContentWrapper","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatContentWrapper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatContentWrapper","Common.TypeNameIdentifier":"MatContentWrapper"}},{"HashCode":1752381340,"Kind":"Components.ChildContent","Name":"MatBlazor.MatContentWrapper.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatContentWrapper"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatContentWrapper.ChildContent","Common.TypeNameIdentifier":"MatContentWrapper"}},{"HashCode":1589860794,"Kind":"Components.ChildContent","Name":"MatBlazor.MatContentWrapper.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatContentWrapper"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatContentWrapper.ChildContent","Common.TypeNameIdentifier":"MatContentWrapper"}},{"HashCode":-1245063471,"Kind":"Components.Component","Name":"MatBlazor.MatItemsControl<T>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"T"}},{"Kind":"Components.Component","Name":"DefaultItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Components.GenericTyped":"True","Common.PropertyName":"DefaultItemTemplate"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatItemsControl<T>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatItemsControl"}},{"HashCode":676827382,"Kind":"Components.Component","Name":"MatBlazor.MatItemsControl<T>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"T"}},{"Kind":"Components.Component","Name":"DefaultItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Components.GenericTyped":"True","Common.PropertyName":"DefaultItemTemplate"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<T>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<T>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<T>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatItemsControl<T>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatItemsControl"}},{"HashCode":296158184,"Kind":"Components.ChildContent","Name":"MatBlazor.MatItemsControl<T>.DefaultItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DefaultItemTemplate","ParentTag":"MatItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DefaultItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatItemsControl<T>.DefaultItemTemplate","Common.TypeNameIdentifier":"MatItemsControl"}},{"HashCode":484279643,"Kind":"Components.ChildContent","Name":"MatBlazor.MatItemsControl<T>.DefaultItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DefaultItemTemplate","ParentTag":"MatBlazor.MatItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DefaultItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatItemsControl<T>.DefaultItemTemplate","Common.TypeNameIdentifier":"MatItemsControl"}},{"HashCode":173257122,"Kind":"Components.ChildContent","Name":"MatBlazor.MatItemsControl<T>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatItemsControl<T>.ItemTemplate","Common.TypeNameIdentifier":"MatItemsControl"}},{"HashCode":-1008155044,"Kind":"Components.ChildContent","Name":"MatBlazor.MatItemsControl<T>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatItemsControl<T>.ItemTemplate","Common.TypeNameIdentifier":"MatItemsControl"}},{"HashCode":2138390184,"Kind":"Components.Component","Name":"MatBlazor.MatAutocompleteList<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Label\">\r\n            <summary>\r\n            The label of the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Icon\">\r\n            <summary>\r\n            The Icon displayed as the leading icon for the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"StringValue","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.StringValue\">\r\n            <summary>\r\n            The StringValue displayed in the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StringValue"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TItem","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Value\">\r\n            <summary>\r\n            The value to be used to pre-select an item from the list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ValueChanged\">\r\n            <summary>\r\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"CustomStringSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.CustomStringSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"CustomStringSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Items\">\r\n            <summary>\r\n            The collection which should be rendered and filtered\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Outlined\">\r\n            <summary>\r\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"OnOpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnOpenedChanged\">\r\n            <summary>\r\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OnOpenedChanged"}},{"Kind":"Components.Component","Name":"OnTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnTextChanged\">\r\n            <summary>\r\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"OnTextChanged"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ShowClearButton\">\r\n            <summary>\r\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.FullWidth\">\r\n            <summary>\r\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAutocompleteList<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatAutocompleteList"}},{"HashCode":-1812584734,"Kind":"Components.Component","Name":"MatBlazor.MatAutocompleteList<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Label\">\r\n            <summary>\r\n            The label of the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Icon\">\r\n            <summary>\r\n            The Icon displayed as the leading icon for the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"StringValue","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.StringValue\">\r\n            <summary>\r\n            The StringValue displayed in the TextField\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StringValue"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TItem","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Value\">\r\n            <summary>\r\n            The value to be used to pre-select an item from the list\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ValueChanged\">\r\n            <summary>\r\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"CustomStringSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.CustomStringSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"CustomStringSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Items\">\r\n            <summary>\r\n            The collection which should be rendered and filtered\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.Outlined\">\r\n            <summary>\r\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"OnOpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnOpenedChanged\">\r\n            <summary>\r\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OnOpenedChanged"}},{"Kind":"Components.Component","Name":"OnTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.OnTextChanged\">\r\n            <summary>\r\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"OnTextChanged"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ShowClearButton\">\r\n            <summary>\r\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowClearButton"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.FullWidth\">\r\n            <summary>\r\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAutocompleteList<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatAutocompleteList"}},{"HashCode":1764016898,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAutocompleteList<TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAutocompleteList<TItem>.ItemTemplate","Common.TypeNameIdentifier":"MatAutocompleteList"}},{"HashCode":1314057993,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAutocompleteList<TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocompleteList`1.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatAutocompleteList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAutocompleteList<TItem>.ItemTemplate","Common.TypeNameIdentifier":"MatAutocompleteList"}},{"HashCode":820790557,"Kind":"Components.Component","Name":"MatBlazor.MatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemValueSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ItemValueSelector"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":-20172918,"Kind":"Components.Component","Name":"MatBlazor.MatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemValueSelector\">\r\n            <summary>\r\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ItemValueSelector"}},{"Kind":"Components.Component","Name":"NumberOfElementsInPopup","TypeName":"System.Int32?","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.NumberOfElementsInPopup\">\r\n            <summary>\r\n            Maximum number of elements displayed in the popup\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"NumberOfElementsInPopup"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":907289912,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":-1408893952,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatAutocomplete`2.ItemTemplate\">\r\n            <summary>\r\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatAutocomplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":-215403349,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatAutocomplete"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":2077316282,"Kind":"Components.ChildContent","Name":"MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatAutocomplete"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":-2063126532,"Kind":"Components.Component","Name":"MatBlazor.MatButtonLink","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatButtonLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClick\">\r\n            <summary>\r\n            Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Href\">\r\n            <summary>\r\n            Link to a url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Raised","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Raised\">\r\n            <summary>\r\n            Link has raised style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Raised"}},{"Kind":"Components.Component","Name":"Unelevated","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Unelevated\">\r\n            <summary>\r\n            Link has unelevated style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unelevated"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Outlined\">\r\n            <summary>\r\n            Link has outlined style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Dense\">\r\n            <summary>\r\n            Link has dense style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Disabled\">\r\n            <summary>\r\n            Link is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Icon\">\r\n            <summary>\r\n            Specifies the link's icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.TrailingIcon\">\r\n            <summary>\r\n            Specifies if icon has trailing position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatButtonLink","Common.TypeNameIdentifier":"MatButtonLink"}},{"HashCode":1150807820,"Kind":"Components.Component","Name":"MatBlazor.MatButtonLink","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatButtonLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClick\">\r\n            <summary>\r\n            Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.CommandParameter\">\r\n            <summary>\r\n            Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Href\">\r\n            <summary>\r\n            Link to a url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Raised","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Raised\">\r\n            <summary>\r\n            Link has raised style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Raised"}},{"Kind":"Components.Component","Name":"Unelevated","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Unelevated\">\r\n            <summary>\r\n            Link has unelevated style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Unelevated"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Outlined\">\r\n            <summary>\r\n            Link has outlined style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Dense\">\r\n            <summary>\r\n            Link has dense style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Disabled\">\r\n            <summary>\r\n            Link is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.Icon\">\r\n            <summary>\r\n            Specifies the link's icon.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"TrailingIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.TrailingIcon\">\r\n            <summary>\r\n            Specifies if icon has trailing position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TrailingIcon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatButtonLink","Common.TypeNameIdentifier":"MatButtonLink"}},{"HashCode":1927222220,"Kind":"Components.ChildContent","Name":"MatBlazor.MatButtonLink.ChildContent","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatButtonLink"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatButtonLink.ChildContent","Common.TypeNameIdentifier":"MatButtonLink"}},{"HashCode":-2095980487,"Kind":"Components.ChildContent","Name":"MatBlazor.MatButtonLink.ChildContent","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.BaseMatButtonLink.ChildContent\">\r\n            <summary>\r\n            Inline label of Button.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatButtonLink"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatButtonLink.ChildContent","Common.TypeNameIdentifier":"MatButtonLink"}},{"HashCode":-994843263,"Kind":"Components.Component","Name":"MatBlazor.MatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCheckboxInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputValue","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputValue"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCheckboxInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatCheckboxInternal"}},{"HashCode":1827891171,"Kind":"Components.Component","Name":"MatBlazor.MatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCheckboxInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputValue","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputValue"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatCheckboxInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatCheckboxInternal"}},{"HashCode":-1525627706,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCheckboxInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatCheckboxInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCheckboxInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatCheckboxInternal"}},{"HashCode":971946024,"Kind":"Components.ChildContent","Name":"MatBlazor.MatCheckboxInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatCheckboxInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatCheckboxInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatCheckboxInternal"}},{"HashCode":-1059548349,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableCellOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableCellOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Numeric","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Numeric"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableCellOld","Common.TypeNameIdentifier":"MatDataTableCellOld"}},{"HashCode":-909784226,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableCellOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableCellOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Numeric","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Numeric"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableCellOld","Common.TypeNameIdentifier":"MatDataTableCellOld"}},{"HashCode":341816723,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableCellOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTableCellOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableCellOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableCellOld"}},{"HashCode":235953779,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableCellOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTableCellOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableCellOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableCellOld"}},{"HashCode":-1627864989,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableColumnOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"HeaderTemplate"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Func<TItem, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Sort","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Sort"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableColumnOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDataTableColumnOld"}},{"HashCode":865822089,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableColumnOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"HeaderTemplate"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Func<TItem, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Sort","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Sort"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableColumnOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDataTableColumnOld"}},{"HashCode":1550373961,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableColumnOld<TItem>.Template","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"MatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableColumnOld<TItem>.Template","Common.TypeNameIdentifier":"MatDataTableColumnOld"}},{"HashCode":-1069008221,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableColumnOld<TItem>.Template","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"MatBlazor.MatDataTableColumnOld"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableColumnOld<TItem>.Template","Common.TypeNameIdentifier":"MatDataTableColumnOld"}},{"HashCode":678488880,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MatDataTableColumnOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate","Common.TypeNameIdentifier":"MatDataTableColumnOld"}},{"HashCode":9908965,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MatBlazor.MatDataTableColumnOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate","Common.TypeNameIdentifier":"MatDataTableColumnOld"}},{"HashCode":-1610293548,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableContentOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableContentOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableContentOld","Common.TypeNameIdentifier":"MatDataTableContentOld"}},{"HashCode":-2130494458,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableContentOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableContentOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableContentOld","Common.TypeNameIdentifier":"MatDataTableContentOld"}},{"HashCode":810021903,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableContentOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTableContentOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableContentOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableContentOld"}},{"HashCode":-490489159,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableContentOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTableContentOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableContentOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableContentOld"}},{"HashCode":490553379,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableHeaderCellOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableHeaderCellOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Numeric","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Numeric"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableHeaderCellOld","Common.TypeNameIdentifier":"MatDataTableHeaderCellOld"}},{"HashCode":2142055040,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableHeaderCellOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableHeaderCellOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Numeric","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Numeric"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableHeaderCellOld","Common.TypeNameIdentifier":"MatDataTableHeaderCellOld"}},{"HashCode":-663692880,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableHeaderCellOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTableHeaderCellOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableHeaderCellOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableHeaderCellOld"}},{"HashCode":1242458850,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableHeaderCellOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTableHeaderCellOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableHeaderCellOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableHeaderCellOld"}},{"HashCode":289199724,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableHeaderOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableHeaderOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableHeaderOld","Common.TypeNameIdentifier":"MatDataTableHeaderOld"}},{"HashCode":-893291765,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableHeaderOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableHeaderOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableHeaderOld","Common.TypeNameIdentifier":"MatDataTableHeaderOld"}},{"HashCode":-1980162189,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableHeaderOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTableHeaderOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableHeaderOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableHeaderOld"}},{"HashCode":1165224930,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableHeaderOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTableHeaderOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableHeaderOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableHeaderOld"}},{"HashCode":-2000831295,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Columns"}},{"Kind":"Components.Component","Name":"StickyHeader","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StickyHeader"}},{"Kind":"Components.Component","Name":"VirtualScroll","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"VirtualScroll"}},{"Kind":"Components.Component","Name":"Paginator","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Paginator"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageIndex"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDataTableOld"}},{"HashCode":-76362153,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableOld<TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Columns"}},{"Kind":"Components.Component","Name":"StickyHeader","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StickyHeader"}},{"Kind":"Components.Component","Name":"VirtualScroll","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"VirtualScroll"}},{"Kind":"Components.Component","Name":"Paginator","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Paginator"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageIndex"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableOld<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDataTableOld"}},{"HashCode":-575385111,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableOld<TItem>.Columns","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MatDataTableOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableOld<TItem>.Columns","Common.TypeNameIdentifier":"MatDataTableOld"}},{"HashCode":-1284481172,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableOld<TItem>.Columns","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"MatBlazor.MatDataTableOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableOld<TItem>.Columns","Common.TypeNameIdentifier":"MatDataTableOld"}},{"HashCode":638816567,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableRowOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDataTableRowOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableRowOld","Common.TypeNameIdentifier":"MatDataTableRowOld"}},{"HashCode":-38880117,"Kind":"Components.Component","Name":"MatBlazor.MatDataTableRowOld","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDataTableRowOld"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDataTableRowOld","Common.TypeNameIdentifier":"MatDataTableRowOld"}},{"HashCode":-836930354,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableRowOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDataTableRowOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableRowOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableRowOld"}},{"HashCode":1578550258,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDataTableRowOld.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDataTableRowOld"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDataTableRowOld.ChildContent","Common.TypeNameIdentifier":"MatDataTableRowOld"}},{"HashCode":311851316,"Kind":"Components.Component","Name":"MatBlazor.MatDatePickerInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDatePickerInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"EnableTime","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTime"}},{"Kind":"Components.Component","Name":"EnableSeconds","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSeconds"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DisableCalendar","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableCalendar"}},{"Kind":"Components.Component","Name":"Enable24hours","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable24hours"}},{"Kind":"Components.Component","Name":"EnableWeekNumbers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableWeekNumbers"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"DisableMobile","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableMobile"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatDatePickerPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDatePickerPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDatePickerInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDatePickerInternal"}},{"HashCode":-1478742749,"Kind":"Components.Component","Name":"MatBlazor.MatDatePickerInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDatePickerInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"EnableTime","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTime"}},{"Kind":"Components.Component","Name":"EnableSeconds","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSeconds"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.DateTime?","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.DateTime?","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DisableCalendar","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableCalendar"}},{"Kind":"Components.Component","Name":"Enable24hours","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable24hours"}},{"Kind":"Components.Component","Name":"EnableWeekNumbers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableWeekNumbers"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"DisableMobile","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"DisableMobile"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatDatePickerPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDatePickerPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Locale"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDatePickerInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatDatePickerInternal"}},{"HashCode":1814097459,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDatePickerInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDatePickerInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDatePickerInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatDatePickerInternal"}},{"HashCode":457738866,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDatePickerInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDatePickerInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDatePickerInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatDatePickerInternal"}},{"HashCode":-478023620,"Kind":"Components.Component","Name":"MatBlazor.MatDialogAlert","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogAlert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogAlert","Common.TypeNameIdentifier":"MatDialogAlert"}},{"HashCode":-527454986,"Kind":"Components.Component","Name":"MatBlazor.MatDialogAlert","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogAlert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogAlert","Common.TypeNameIdentifier":"MatDialogAlert"}},{"HashCode":603920379,"Kind":"Components.Component","Name":"MatBlazor.MatDialogAsk","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogAsk"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}},{"Kind":"Components.Component","Name":"Answers","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"Answers"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogAsk","Common.TypeNameIdentifier":"MatDialogAsk"}},{"HashCode":1703940439,"Kind":"Components.Component","Name":"MatBlazor.MatDialogAsk","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogAsk"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}},{"Kind":"Components.Component","Name":"Answers","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"Answers"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogAsk","Common.TypeNameIdentifier":"MatDialogAsk"}},{"HashCode":-282053757,"Kind":"Components.Component","Name":"MatBlazor.MatDialogConfirm","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogConfirm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogConfirm","Common.TypeNameIdentifier":"MatDialogConfirm"}},{"HashCode":-889874892,"Kind":"Components.Component","Name":"MatBlazor.MatDialogConfirm","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogConfirm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogConfirm","Common.TypeNameIdentifier":"MatDialogConfirm"}},{"HashCode":456210777,"Kind":"Components.Component","Name":"MatBlazor.MatDialogPrompt","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogPrompt","Common.TypeNameIdentifier":"MatDialogPrompt"}},{"HashCode":-1149433380,"Kind":"Components.Component","Name":"MatBlazor.MatDialogPrompt","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Message"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogPrompt","Common.TypeNameIdentifier":"MatDialogPrompt"}},{"HashCode":-1792689232,"Kind":"Components.Component","Name":"MatBlazor.MatDialogServiceItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogServiceItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DialogReference","TypeName":"MatBlazor.MatDialogReference","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDialogReference","Common.PropertyName":"DialogReference"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogServiceItem","Common.TypeNameIdentifier":"MatDialogServiceItem"}},{"HashCode":-1544544124,"Kind":"Components.Component","Name":"MatBlazor.MatDialogServiceItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogServiceItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DialogReference","TypeName":"MatBlazor.MatDialogReference","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDialogReference","Common.PropertyName":"DialogReference"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogServiceItem","Common.TypeNameIdentifier":"MatDialogServiceItem"}},{"HashCode":297613692,"Kind":"Components.Component","Name":"MatBlazor.MatDialog","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.IsOpenChanged\">\r\n            <summary>\r\n            Event occurs when the dialog is opened or closed.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"CanBeClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.CanBeClosed\">\r\n            <summary>\r\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CanBeClosed"}},{"Kind":"Components.Component","Name":"SurfaceClass","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceClass"}},{"Kind":"Components.Component","Name":"SurfaceStyle","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceStyle"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialog","Common.TypeNameIdentifier":"MatDialog"}},{"HashCode":-529513800,"Kind":"Components.Component","Name":"MatBlazor.MatDialog","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.IsOpenChanged\">\r\n            <summary>\r\n            Event occurs when the dialog is opened or closed.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"CanBeClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatDialog.CanBeClosed\">\r\n            <summary>\r\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CanBeClosed"}},{"Kind":"Components.Component","Name":"SurfaceClass","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceClass"}},{"Kind":"Components.Component","Name":"SurfaceStyle","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SurfaceStyle"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialog","Common.TypeNameIdentifier":"MatDialog"}},{"HashCode":-1261772542,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialog.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDialog"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialog.ChildContent","Common.TypeNameIdentifier":"MatDialog"}},{"HashCode":-2042696817,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialog.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDialog"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialog.ChildContent","Common.TypeNameIdentifier":"MatDialog"}},{"HashCode":1318233569,"Kind":"Components.Component","Name":"MatBlazor.MatDialogActions","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogActions","Common.TypeNameIdentifier":"MatDialogActions"}},{"HashCode":2034929188,"Kind":"Components.Component","Name":"MatBlazor.MatDialogActions","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogActions","Common.TypeNameIdentifier":"MatDialogActions"}},{"HashCode":611443570,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialogActions.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDialogActions"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialogActions.ChildContent","Common.TypeNameIdentifier":"MatDialogActions"}},{"HashCode":-830469920,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialogActions.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDialogActions"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialogActions.ChildContent","Common.TypeNameIdentifier":"MatDialogActions"}},{"HashCode":503704482,"Kind":"Components.Component","Name":"MatBlazor.MatDialogContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogContent","Common.TypeNameIdentifier":"MatDialogContent"}},{"HashCode":938507972,"Kind":"Components.Component","Name":"MatBlazor.MatDialogContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogContent","Common.TypeNameIdentifier":"MatDialogContent"}},{"HashCode":734380037,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialogContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDialogContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialogContent.ChildContent","Common.TypeNameIdentifier":"MatDialogContent"}},{"HashCode":838828489,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialogContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDialogContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialogContent.ChildContent","Common.TypeNameIdentifier":"MatDialogContent"}},{"HashCode":-1187638021,"Kind":"Components.Component","Name":"MatBlazor.MatDialogTitle","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialogTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogTitle","Common.TypeNameIdentifier":"MatDialogTitle"}},{"HashCode":1773493315,"Kind":"Components.Component","Name":"MatBlazor.MatDialogTitle","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialogTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDialogTitle","Common.TypeNameIdentifier":"MatDialogTitle"}},{"HashCode":780686304,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialogTitle.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDialogTitle"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialogTitle.ChildContent","Common.TypeNameIdentifier":"MatDialogTitle"}},{"HashCode":830679321,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDialogTitle.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDialogTitle"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDialogTitle.ChildContent","Common.TypeNameIdentifier":"MatDialogTitle"}},{"HashCode":-887357300,"Kind":"Components.Component","Name":"MatBlazor.MatDrawerContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDrawerContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"DrawerWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DrawerWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDrawerContainer","Common.TypeNameIdentifier":"MatDrawerContainer"}},{"HashCode":1433814469,"Kind":"Components.Component","Name":"MatBlazor.MatDrawerContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDrawerContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"DrawerWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DrawerWidth"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDrawerContainer","Common.TypeNameIdentifier":"MatDrawerContainer"}},{"HashCode":-1612808082,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDrawerContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDrawerContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDrawerContainer.ChildContent","Common.TypeNameIdentifier":"MatDrawerContainer"}},{"HashCode":-1784605815,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDrawerContainer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDrawerContainer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDrawerContainer.ChildContent","Common.TypeNameIdentifier":"MatDrawerContainer"}},{"HashCode":-950558662,"Kind":"Components.Component","Name":"MatBlazor.MatDrawerContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDrawerContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDrawerContent","Common.TypeNameIdentifier":"MatDrawerContent"}},{"HashCode":645192384,"Kind":"Components.Component","Name":"MatBlazor.MatDrawerContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDrawerContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDrawerContent","Common.TypeNameIdentifier":"MatDrawerContent"}},{"HashCode":-22003051,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDrawerContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDrawerContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDrawerContent.ChildContent","Common.TypeNameIdentifier":"MatDrawerContent"}},{"HashCode":-2120460762,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDrawerContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDrawerContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDrawerContent.ChildContent","Common.TypeNameIdentifier":"MatDrawerContent"}},{"HashCode":-1771129620,"Kind":"Components.Component","Name":"MatBlazor.MatDrawer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDrawer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"MatBlazor.MatDrawerMode","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDrawerMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ContentTabIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ContentTabIndex"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Opened"}},{"Kind":"Components.Component","Name":"OpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OpenedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDrawer","Common.TypeNameIdentifier":"MatDrawer"}},{"HashCode":2111220612,"Kind":"Components.Component","Name":"MatBlazor.MatDrawer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDrawer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"MatBlazor.MatDrawerMode","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatDrawerMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ContentTabIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ContentTabIndex"}},{"Kind":"Components.Component","Name":"Opened","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Opened"}},{"Kind":"Components.Component","Name":"OpenedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OpenedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatDrawer","Common.TypeNameIdentifier":"MatDrawer"}},{"HashCode":-1830597517,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDrawer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatDrawer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDrawer.ChildContent","Common.TypeNameIdentifier":"MatDrawer"}},{"HashCode":131597384,"Kind":"Components.ChildContent","Name":"MatBlazor.MatDrawer.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatDrawer"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatDrawer.ChildContent","Common.TypeNameIdentifier":"MatDrawer"}},{"HashCode":-1178129856,"Kind":"Components.Component","Name":"MatBlazor.MatFAB","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatFAB"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Mini","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Mini"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatFAB","Common.TypeNameIdentifier":"MatFAB"}},{"HashCode":-683172412,"Kind":"Components.Component","Name":"MatBlazor.MatFAB","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatFAB"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Mini","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Mini"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatFAB","Common.TypeNameIdentifier":"MatFAB"}},{"HashCode":-1251160437,"Kind":"Components.ChildContent","Name":"MatBlazor.MatFAB.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatFAB"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatFAB.ChildContent","Common.TypeNameIdentifier":"MatFAB"}},{"HashCode":603066914,"Kind":"Components.ChildContent","Name":"MatBlazor.MatFAB.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatFAB"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatFAB.ChildContent","Common.TypeNameIdentifier":"MatFAB"}},{"HashCode":-1996357271,"Kind":"Components.Component","Name":"MatBlazor.MatFileUpload","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatFileUpload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.IMatFileUploadEntry[]>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AllowMultiple","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowMultiple"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"MaxMessageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageSize"}},{"Kind":"Components.Component","Name":"MaxMessageLength","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageLength"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatFileUpload","Common.TypeNameIdentifier":"MatFileUpload"}},{"HashCode":-1151662796,"Kind":"Components.Component","Name":"MatBlazor.MatFileUpload","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatFileUpload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.IMatFileUploadEntry[]>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AllowMultiple","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowMultiple"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"MaxMessageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageSize"}},{"Kind":"Components.Component","Name":"MaxMessageLength","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaxMessageLength"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatFileUpload","Common.TypeNameIdentifier":"MatFileUpload"}},{"HashCode":1330767617,"Kind":"Components.Component","Name":"MatBlazor.MatHelperText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHelperText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"CharacterCount","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CharacterCount"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHelperText","Common.TypeNameIdentifier":"MatHelperText"}},{"HashCode":-1457031057,"Kind":"Components.Component","Name":"MatBlazor.MatHelperText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHelperText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"CharacterCount","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CharacterCount"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHelperText","Common.TypeNameIdentifier":"MatHelperText"}},{"HashCode":1921174338,"Kind":"Components.Component","Name":"MatBlazor.MatHidden","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatHidden"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ElseContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ElseContent"}},{"Kind":"Components.Component","Name":"InitContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"InitContent"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MatBlazor.MatBreakpoint","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatBreakpoint","Common.PropertyName":"Breakpoint"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatHiddenDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatHiddenDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"HiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"HiddenChanged"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHidden","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":-1640883816,"Kind":"Components.Component","Name":"MatBlazor.MatHidden","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatHidden"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ElseContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ElseContent"}},{"Kind":"Components.Component","Name":"InitContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"InitContent"}},{"Kind":"Components.Component","Name":"Breakpoint","TypeName":"MatBlazor.MatBreakpoint","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatBreakpoint","Common.PropertyName":"Breakpoint"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatHiddenDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatHiddenDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"HiddenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"HiddenChanged"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatHidden","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":995940165,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHidden.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHidden.ChildContent","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":1094920299,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHidden.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHidden.ChildContent","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":1398902711,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHidden.ElseContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ElseContent","ParentTag":"MatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHidden.ElseContent","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":179912673,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHidden.ElseContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ElseContent","ParentTag":"MatBlazor.MatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHidden.ElseContent","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":1389723730,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHidden.InitContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InitContent","ParentTag":"MatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHidden.InitContent","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":-2107904985,"Kind":"Components.ChildContent","Name":"MatBlazor.MatHidden.InitContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InitContent","ParentTag":"MatBlazor.MatHidden"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatHidden.InitContent","Common.TypeNameIdentifier":"MatHidden"}},{"HashCode":265631063,"Kind":"Components.Component","Name":"MatBlazor.MatIconButton","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Icon\">\r\n            <summary>\r\n            Default Button Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ToggleIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ToggleIcon\">\r\n            <summary>\r\n            Icon to use when Button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ToggleIcon"}},{"Kind":"Components.Component","Name":"Toggled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Toggled"}},{"Kind":"Components.Component","Name":"ToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ToggledChanged"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Link\">\r\n            <summary>\r\n            Navigate to this url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Link"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Disabled\">\r\n            <summary>\r\n            Button is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClick\">\r\n            <summary>\r\n             Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatIconButton","Common.TypeNameIdentifier":"MatIconButton"}},{"HashCode":-554091368,"Kind":"Components.Component","Name":"MatBlazor.MatIconButton","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatIconButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Icon\">\r\n            <summary>\r\n            Default Button Icon\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Target\">\r\n            <summary>\r\n            Target of Link when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"ToggleIcon","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ToggleIcon\">\r\n            <summary>\r\n            Icon to use when Button is clicked\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ToggleIcon"}},{"Kind":"Components.Component","Name":"Toggled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Toggled"}},{"Kind":"Components.Component","Name":"ToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ToggledChanged"}},{"Kind":"Components.Component","Name":"Link","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Link\">\r\n            <summary>\r\n            Navigate to this url when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Link"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n            \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Disabled\">\r\n            <summary>\r\n            Button is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClick\">\r\n            <summary>\r\n             Event occurs when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatIconButton.OnClickStopPropagation\">\r\n            <summary>\r\n            Stop propagation of the OnClick event\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OnClickStopPropagation"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatIconButton","Common.TypeNameIdentifier":"MatIconButton"}},{"HashCode":2043364592,"Kind":"Components.ChildContent","Name":"MatBlazor.MatIconButton.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatIconButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatIconButton.ChildContent","Common.TypeNameIdentifier":"MatIconButton"}},{"HashCode":-1032537448,"Kind":"Components.ChildContent","Name":"MatBlazor.MatIconButton.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatIconButton"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatIconButton.ChildContent","Common.TypeNameIdentifier":"MatIconButton"}},{"HashCode":1187126313,"Kind":"Components.Component","Name":"MatBlazor.MatIcon","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatIcon","Common.TypeNameIdentifier":"MatIcon"}},{"HashCode":-400901149,"Kind":"Components.Component","Name":"MatBlazor.MatIcon","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatIcon","Common.TypeNameIdentifier":"MatIcon"}},{"HashCode":71400813,"Kind":"Components.ChildContent","Name":"MatBlazor.MatIcon.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatIcon"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatIcon.ChildContent","Common.TypeNameIdentifier":"MatIcon"}},{"HashCode":1364532275,"Kind":"Components.ChildContent","Name":"MatBlazor.MatIcon.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatIcon"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatIcon.ChildContent","Common.TypeNameIdentifier":"MatIcon"}},{"HashCode":1082814953,"Kind":"Components.Component","Name":"MatBlazor.MatListGroup","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListGroup","Common.TypeNameIdentifier":"MatListGroup"}},{"HashCode":-832495500,"Kind":"Components.Component","Name":"MatBlazor.MatListGroup","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListGroup","Common.TypeNameIdentifier":"MatListGroup"}},{"HashCode":-1995611131,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatListGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListGroup.ChildContent","Common.TypeNameIdentifier":"MatListGroup"}},{"HashCode":-678314419,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatListGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListGroup.ChildContent","Common.TypeNameIdentifier":"MatListGroup"}},{"HashCode":-17853453,"Kind":"Components.Component","Name":"MatBlazor.MatListGroupSubHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListGroupSubHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListGroupSubHeader","Common.TypeNameIdentifier":"MatListGroupSubHeader"}},{"HashCode":1369577387,"Kind":"Components.Component","Name":"MatBlazor.MatListGroupSubHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListGroupSubHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListGroupSubHeader","Common.TypeNameIdentifier":"MatListGroupSubHeader"}},{"HashCode":-419555724,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListGroupSubHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatListGroupSubHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListGroupSubHeader.ChildContent","Common.TypeNameIdentifier":"MatListGroupSubHeader"}},{"HashCode":-252985345,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListGroupSubHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatListGroupSubHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListGroupSubHeader.ChildContent","Common.TypeNameIdentifier":"MatListGroupSubHeader"}},{"HashCode":910543928,"Kind":"Components.Component","Name":"MatBlazor.MatList","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"SingleSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"SingleSelection"}},{"Kind":"Components.Component","Name":"TwoLine","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TwoLine"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatList","Common.TypeNameIdentifier":"MatList"}},{"HashCode":-1847440802,"Kind":"Components.Component","Name":"MatBlazor.MatList","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"SingleSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"SingleSelection"}},{"Kind":"Components.Component","Name":"TwoLine","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TwoLine"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatList","Common.TypeNameIdentifier":"MatList"}},{"HashCode":1323503423,"Kind":"Components.ChildContent","Name":"MatBlazor.MatList.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatList"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatList.ChildContent","Common.TypeNameIdentifier":"MatList"}},{"HashCode":245381679,"Kind":"Components.ChildContent","Name":"MatBlazor.MatList.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatList"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatList.ChildContent","Common.TypeNameIdentifier":"MatList"}},{"HashCode":910778231,"Kind":"Components.Component","Name":"MatBlazor.MatListDivider","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListDivider","Common.TypeNameIdentifier":"MatListDivider"}},{"HashCode":601820200,"Kind":"Components.Component","Name":"MatBlazor.MatListDivider","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListDivider","Common.TypeNameIdentifier":"MatListDivider"}},{"HashCode":1192578042,"Kind":"Components.Component","Name":"MatBlazor.MatListItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItem","Common.TypeNameIdentifier":"MatListItem"}},{"HashCode":1171398277,"Kind":"Components.Component","Name":"MatBlazor.MatListItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItem","Common.TypeNameIdentifier":"MatListItem"}},{"HashCode":-1726724668,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatListItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItem.ChildContent","Common.TypeNameIdentifier":"MatListItem"}},{"HashCode":-261983511,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatListItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItem.ChildContent","Common.TypeNameIdentifier":"MatListItem"}},{"HashCode":-2138344855,"Kind":"Components.Component","Name":"MatBlazor.MatListItemPrimaryText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListItemPrimaryText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItemPrimaryText","Common.TypeNameIdentifier":"MatListItemPrimaryText"}},{"HashCode":-808422015,"Kind":"Components.Component","Name":"MatBlazor.MatListItemPrimaryText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListItemPrimaryText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItemPrimaryText","Common.TypeNameIdentifier":"MatListItemPrimaryText"}},{"HashCode":-898153593,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItemPrimaryText.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatListItemPrimaryText"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItemPrimaryText.ChildContent","Common.TypeNameIdentifier":"MatListItemPrimaryText"}},{"HashCode":-70468124,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItemPrimaryText.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatListItemPrimaryText"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItemPrimaryText.ChildContent","Common.TypeNameIdentifier":"MatListItemPrimaryText"}},{"HashCode":-450527337,"Kind":"Components.Component","Name":"MatBlazor.MatListItemSecondaryText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListItemSecondaryText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItemSecondaryText","Common.TypeNameIdentifier":"MatListItemSecondaryText"}},{"HashCode":-1894212321,"Kind":"Components.Component","Name":"MatBlazor.MatListItemSecondaryText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListItemSecondaryText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItemSecondaryText","Common.TypeNameIdentifier":"MatListItemSecondaryText"}},{"HashCode":412319933,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItemSecondaryText.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatListItemSecondaryText"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItemSecondaryText.ChildContent","Common.TypeNameIdentifier":"MatListItemSecondaryText"}},{"HashCode":-1895476241,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItemSecondaryText.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatListItemSecondaryText"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItemSecondaryText.ChildContent","Common.TypeNameIdentifier":"MatListItemSecondaryText"}},{"HashCode":-668943931,"Kind":"Components.Component","Name":"MatBlazor.MatListItemText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatListItemText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItemText","Common.TypeNameIdentifier":"MatListItemText"}},{"HashCode":603833041,"Kind":"Components.Component","Name":"MatBlazor.MatListItemText","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatListItemText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatListItemText","Common.TypeNameIdentifier":"MatListItemText"}},{"HashCode":-924473199,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItemText.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatListItemText"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItemText.ChildContent","Common.TypeNameIdentifier":"MatListItemText"}},{"HashCode":142338270,"Kind":"Components.ChildContent","Name":"MatBlazor.MatListItemText.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatListItemText"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatListItemText.ChildContent","Common.TypeNameIdentifier":"MatListItemText"}},{"HashCode":1227850351,"Kind":"Components.Component","Name":"MatBlazor.MatMenu","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatMenu","Common.TypeNameIdentifier":"MatMenu"}},{"HashCode":-1994874920,"Kind":"Components.Component","Name":"MatBlazor.MatMenu","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatMenu","Common.TypeNameIdentifier":"MatMenu"}},{"HashCode":-2065764815,"Kind":"Components.ChildContent","Name":"MatBlazor.MatMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatMenu.ChildContent","Common.TypeNameIdentifier":"MatMenu"}},{"HashCode":359016867,"Kind":"Components.ChildContent","Name":"MatBlazor.MatMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatMenu.ChildContent","Common.TypeNameIdentifier":"MatMenu"}},{"HashCode":1071578774,"Kind":"Components.Component","Name":"MatBlazor.MatNavItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Target\">\r\n            <summary>\r\n            *Not yet functional - Target of Href when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Title\">\r\n            <summary>\r\n            The title shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"NavLinkMatch","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.NavLinkMatch\">\r\n            <summary>\r\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"NavLinkMatch"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you the Nav Item can be selected / active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavItem","Common.TypeNameIdentifier":"MatNavItem"}},{"HashCode":-316630676,"Kind":"Components.Component","Name":"MatBlazor.MatNavItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Command","TypeName":"System.Windows.Input.ICommand","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Command\">\r\n            <summary>\r\n             Command executed when the user clicks on an element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Windows.Input.ICommand","Common.PropertyName":"Command"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.ForceLoad\">\r\n            <summary>\r\n            Force browser to redirect outside component router-space.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ForceLoad"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.CommandParameter\">\r\n            <summary>\r\n             Command parameter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Target\">\r\n            <summary>\r\n            *Not yet functional - Target of Href when clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.Title\">\r\n            <summary>\r\n            The title shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"NavLinkMatch","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.NavLinkMatch\">\r\n            <summary>\r\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"NavLinkMatch"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatNavItem.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you the Nav Item can be selected / active.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnMouseDown"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"OnClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Href\">\r\n            <summary>\r\n            The URL of the List Item\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatListItem.Disabled\">\r\n            <summary>\r\n            List Item is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavItem","Common.TypeNameIdentifier":"MatNavItem"}},{"HashCode":-1545345538,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNavItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavItem.ChildContent","Common.TypeNameIdentifier":"MatNavItem"}},{"HashCode":-1301293506,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNavItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavItem.ChildContent","Common.TypeNameIdentifier":"MatNavItem"}},{"HashCode":1375690747,"Kind":"Components.Component","Name":"MatBlazor.MatNavMenu","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Multi","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Multi"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavMenu","Common.TypeNameIdentifier":"MatNavMenu"}},{"HashCode":1644201941,"Kind":"Components.Component","Name":"MatBlazor.MatNavMenu","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Multi","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Multi"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavMenu","Common.TypeNameIdentifier":"MatNavMenu"}},{"HashCode":-1227246912,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNavMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavMenu.ChildContent","Common.TypeNameIdentifier":"MatNavMenu"}},{"HashCode":-879859076,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNavMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavMenu.ChildContent","Common.TypeNameIdentifier":"MatNavMenu"}},{"HashCode":-1610613806,"Kind":"Components.Component","Name":"MatBlazor.MatNavSubMenu","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavSubMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ExpandedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavSubMenu","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":-294013801,"Kind":"Components.Component","Name":"MatBlazor.MatNavSubMenu","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavSubMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Expanded"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ExpandedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavSubMenu","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":1778156325,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavSubMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNavSubMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavSubMenu.ChildContent","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":1081357952,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavSubMenu.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNavSubMenu"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavSubMenu.ChildContent","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":1513550056,"Kind":"Components.Component","Name":"MatBlazor.MatNavSubMenuHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavSubMenuHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatNavSubMenuHeader.Title\">\r\n            <summary>\r\n            The title shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavSubMenuHeader","Common.TypeNameIdentifier":"MatNavSubMenuHeader"}},{"HashCode":696034399,"Kind":"Components.Component","Name":"MatBlazor.MatNavSubMenuHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavSubMenuHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.MatNavSubMenuHeader.Title\">\r\n            <summary>\r\n            The title shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavSubMenuHeader","Common.TypeNameIdentifier":"MatNavSubMenuHeader"}},{"HashCode":314614780,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavSubMenuHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNavSubMenuHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavSubMenuHeader.ChildContent","Common.TypeNameIdentifier":"MatNavSubMenuHeader"}},{"HashCode":-1387589948,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavSubMenuHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNavSubMenuHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavSubMenuHeader.ChildContent","Common.TypeNameIdentifier":"MatNavSubMenuHeader"}},{"HashCode":688313953,"Kind":"Components.Component","Name":"MatBlazor.MatNavSubMenuList","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavSubMenuList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavSubMenuList","Common.TypeNameIdentifier":"MatNavSubMenuList"}},{"HashCode":1205609458,"Kind":"Components.Component","Name":"MatBlazor.MatNavSubMenuList","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavSubMenuList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNavSubMenuList","Common.TypeNameIdentifier":"MatNavSubMenuList"}},{"HashCode":-1030832419,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavSubMenuList.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNavSubMenuList"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavSubMenuList.ChildContent","Common.TypeNameIdentifier":"MatNavSubMenuList"}},{"HashCode":132662447,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNavSubMenuList.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNavSubMenuList"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNavSubMenuList.ChildContent","Common.TypeNameIdentifier":"MatNavSubMenuList"}},{"HashCode":-311021146,"Kind":"Components.Component","Name":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNumericUpDownFieldInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DecimalPlaces","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DecimalPlaces"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"MatBlazor.MatNumericUpDownFieldType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatNumericUpDownFieldType","Common.PropertyName":"FieldType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatNumericUpDownFieldInternal"}},{"HashCode":1527752666,"Kind":"Components.Component","Name":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNumericUpDownFieldInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AllowInput","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowInput"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"DecimalPlaces","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DecimalPlaces"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"FieldType","TypeName":"MatBlazor.MatNumericUpDownFieldType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatNumericUpDownFieldType","Common.PropertyName":"FieldType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatNumericUpDownFieldInternal"}},{"HashCode":885179402,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatNumericUpDownFieldInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatNumericUpDownFieldInternal"}},{"HashCode":1261471729,"Kind":"Components.ChildContent","Name":"MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatNumericUpDownFieldInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatNumericUpDownFieldInternal"}},{"HashCode":2046675547,"Kind":"Components.Component","Name":"MatBlazor.MatPaginator","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatPaginator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Page","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatPaginatorPageEvent>","Common.PropertyName":"Page"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"PageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"PageIndexChanged"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatPaginator","Common.TypeNameIdentifier":"MatPaginator"}},{"HashCode":-529235694,"Kind":"Components.Component","Name":"MatBlazor.MatPaginator","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatPaginator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Page","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatPaginatorPageEvent>","Common.PropertyName":"Page"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"PageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"PageIndexChanged"}},{"Kind":"Components.Component","Name":"PageSizeOptions","TypeName":"System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<global::MatBlazor.MatPageSizeOption>","Common.PropertyName":"PageSizeOptions"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatPaginator","Common.TypeNameIdentifier":"MatPaginator"}},{"HashCode":803558760,"Kind":"Components.Component","Name":"MatBlazor.MatPaper","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatPaper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Elevation\">\r\n            <summary>\r\n            Level of the Elevation. \r\n            From 0 to 24.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Elevation"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Outlined\">\r\n            <summary>\r\n            Uses outlined surface. If true, removes Elevation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Rounded\">\r\n            <summary>\r\n            Uses round border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Rounded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatPaper","Common.TypeNameIdentifier":"MatPaper"}},{"HashCode":2085221949,"Kind":"Components.Component","Name":"MatBlazor.MatPaper","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatPaper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Elevation","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Elevation\">\r\n            <summary>\r\n            Level of the Elevation. \r\n            From 0 to 24.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Elevation"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Outlined\">\r\n            <summary>\r\n            Uses outlined surface. If true, removes Elevation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Rounded","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatPaper.Rounded\">\r\n            <summary>\r\n            Uses round border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Rounded"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatPaper","Common.TypeNameIdentifier":"MatPaper"}},{"HashCode":-197728252,"Kind":"Components.ChildContent","Name":"MatBlazor.MatPaper.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatPaper"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatPaper.ChildContent","Common.TypeNameIdentifier":"MatPaper"}},{"HashCode":2079992622,"Kind":"Components.ChildContent","Name":"MatBlazor.MatPaper.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatPaper"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatPaper.ChildContent","Common.TypeNameIdentifier":"MatPaper"}},{"HashCode":1303015577,"Kind":"Components.Component","Name":"MatBlazor.MatPortalHost","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatPortalHost"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatPortalHost","Common.TypeNameIdentifier":"MatPortalHost"}},{"HashCode":-889570378,"Kind":"Components.Component","Name":"MatBlazor.MatPortalHost","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatPortalHost"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatPortalHost","Common.TypeNameIdentifier":"MatPortalHost"}},{"HashCode":453797345,"Kind":"Components.Component","Name":"MatBlazor.MatProgressBar","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Reversed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reversed"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"Buffer","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Buffer"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatProgressBar","Common.TypeNameIdentifier":"MatProgressBar"}},{"HashCode":1586439264,"Kind":"Components.Component","Name":"MatBlazor.MatProgressBar","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Reversed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reversed"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"Buffer","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Buffer"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatProgressBar","Common.TypeNameIdentifier":"MatProgressBar"}},{"HashCode":57263097,"Kind":"Components.Component","Name":"MatBlazor.MatProgressCircle","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatProgressCircle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Indeterminate\">\r\n            <summary>\r\n            Toggles the component between the determinate and indeterminate state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Closed\">\r\n             <summary>\r\n            If true, Puts the component in the closed state.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MatBlazor.MatProgressCircleSize","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Size\">\r\n            <summary>\r\n            Sets the size of the circular progress bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatProgressCircleSize","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Progress\">\r\n            <summary>\r\n            Sets the progress bar to this value. Value should be between [0, 1].\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"FourColored","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.FourColored\">\r\n            <summary>\r\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FourColored"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatProgressCircle","Common.TypeNameIdentifier":"MatProgressCircle"}},{"HashCode":913314349,"Kind":"Components.Component","Name":"MatBlazor.MatProgressCircle","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatProgressCircle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Indeterminate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Indeterminate\">\r\n            <summary>\r\n            Toggles the component between the determinate and indeterminate state.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Indeterminate"}},{"Kind":"Components.Component","Name":"Closed","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Closed\">\r\n             <summary>\r\n            If true, Puts the component in the closed state.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Closed"}},{"Kind":"Components.Component","Name":"Size","TypeName":"MatBlazor.MatProgressCircleSize","IsEnum":true,"Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Size\">\r\n            <summary>\r\n            Sets the size of the circular progress bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatProgressCircleSize","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.Progress\">\r\n            <summary>\r\n            Sets the progress bar to this value. Value should be between [0, 1].\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"FourColored","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatProgressCircle.FourColored\">\r\n            <summary>\r\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FourColored"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatProgressCircle","Common.TypeNameIdentifier":"MatProgressCircle"}},{"HashCode":-429975514,"Kind":"Components.Component","Name":"MatBlazor.MatRadioButtonInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRadioButtonInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioButtonInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioButtonInternal"}},{"HashCode":-1684596936,"Kind":"Components.Component","Name":"MatBlazor.MatRadioButtonInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRadioButtonInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioButtonInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioButtonInternal"}},{"HashCode":331634227,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioButtonInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatRadioButtonInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioButtonInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioButtonInternal"}},{"HashCode":173357025,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioButtonInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatRadioButtonInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioButtonInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioButtonInternal"}},{"HashCode":-1056180951,"Kind":"Components.Component","Name":"MatBlazor.MatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":-1368536146,"Kind":"Components.Component","Name":"MatBlazor.MatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":1049800314,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":-1245311481,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatRadioGroupInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":-1128515206,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroupInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatRadioGroupInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":1706308426,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRadioGroupInternal<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatRadioGroupInternal"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>.ChildContent","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":-390355864,"Kind":"Components.Component","Name":"MatBlazor.MatRipple","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRipple"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MatBlazor.MatRippleColor","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatRippleColor","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRipple","Common.TypeNameIdentifier":"MatRipple"}},{"HashCode":-814276266,"Kind":"Components.Component","Name":"MatBlazor.MatRipple","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRipple"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"MatBlazor.MatRippleColor","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatRippleColor","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatRipple","Common.TypeNameIdentifier":"MatRipple"}},{"HashCode":1150784788,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRipple.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatRipple"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRipple.ChildContent","Common.TypeNameIdentifier":"MatRipple"}},{"HashCode":248149550,"Kind":"Components.ChildContent","Name":"MatBlazor.MatRipple.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatRipple"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatRipple.ChildContent","Common.TypeNameIdentifier":"MatRipple"}},{"HashCode":-1753088886,"Kind":"Components.Component","Name":"MatBlazor.CoreMatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CoreMatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.CoreMatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CoreMatOption"}},{"HashCode":-1562543794,"Kind":"Components.Component","Name":"MatBlazor.CoreMatOption<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.CoreMatOption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.CoreMatOption<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CoreMatOption"}},{"HashCode":251940252,"Kind":"Components.ChildContent","Name":"MatBlazor.CoreMatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CoreMatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.CoreMatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"CoreMatOption"}},{"HashCode":1922190657,"Kind":"Components.ChildContent","Name":"MatBlazor.CoreMatOption<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.CoreMatOption"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.CoreMatOption<TValue>.ChildContent","Common.TypeNameIdentifier":"CoreMatOption"}},{"HashCode":1069376857,"Kind":"Components.Component","Name":"MatBlazor.CoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CoreMatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TKey","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TKey"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.CoreMatSelect<TValue, TKey>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CoreMatSelect"}},{"HashCode":-206256868,"Kind":"Components.Component","Name":"MatBlazor.CoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.CoreMatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TKey","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TKey"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.CoreMatSelect<TValue, TKey>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CoreMatSelect"}},{"HashCode":-1295241943,"Kind":"Components.Component","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CoreMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":797778266,"Kind":"Components.Component","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.CoreMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":-1432969160,"Kind":"Components.ChildContent","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"CoreMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":-1378704055,"Kind":"Components.ChildContent","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.CoreMatSelectValue"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":-1972237488,"Kind":"Components.ChildContent","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CoreMatSelectValue"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":121456432,"Kind":"Components.ChildContent","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.CoreMatSelectValue"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":811415038,"Kind":"Components.Component","Name":"MatBlazor.MatSelect<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSelect"}},{"HashCode":237815566,"Kind":"Components.Component","Name":"MatBlazor.MatSelect<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSelect"}},{"HashCode":-1708935961,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelect<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSelect"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"MatSelect"}},{"HashCode":1562145954,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelect<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSelect"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"MatSelect"}},{"HashCode":340042057,"Kind":"Components.Component","Name":"MatBlazor.MatSelectItem<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSelectItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSelectItem<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":-2057062205,"Kind":"Components.Component","Name":"MatBlazor.MatSelectItem<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSelectItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TValue>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TValue>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSelectItem<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":1762154712,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectItem<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatSelectItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectItem<TValue>.ItemTemplate","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":339524999,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectItem<TValue>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatSelectItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectItem<TValue>.ItemTemplate","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":-2020717651,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectItem<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSelectItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectItem<TValue>.ChildContent","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":796160311,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectItem<TValue>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSelectItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectItem<TValue>.ChildContent","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":587920243,"Kind":"Components.Component","Name":"MatBlazor.MatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSelectValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ValueSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":-352855378,"Kind":"Components.Component","Name":"MatBlazor.MatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSelectValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True","Common.PropertyName":"ValueSelector"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IReadOnlyList<TItem>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyList<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Enhanced","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enhanced"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"HideDropDownIcon","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideDropDownIcon"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":525934353,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatSelectValue"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":1039512556,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatSelectValue"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":228597858,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectValue<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSelectValue"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":-1120586010,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSelectValue<TValue, TItem>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSelectValue"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>.ChildContent","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":-557726471,"Kind":"Components.Component","Name":"MatBlazor.MatSlider<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ValueMin","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMin"}},{"Kind":"Components.Component","Name":"ValueMax","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMax"}},{"Kind":"Components.Component","Name":"Discrete","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Discrete"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Markers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Markers"}},{"Kind":"Components.Component","Name":"Pin","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Pin"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"EnableStep","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableStep"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSlider`1.Immediate\">\r\n            <summary>\r\n            When set to true, any change to the slider immediately changes the value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Immediate"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSlider<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSlider"}},{"HashCode":-429128715,"Kind":"Components.Component","Name":"MatBlazor.MatSlider<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ValueMin","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMin"}},{"Kind":"Components.Component","Name":"ValueMax","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"ValueMax"}},{"Kind":"Components.Component","Name":"Discrete","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Discrete"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Markers","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Markers"}},{"Kind":"Components.Component","Name":"Pin","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Pin"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"EnableStep","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableStep"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"Immediate","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSlider`1.Immediate\">\r\n            <summary>\r\n            When set to true, any change to the slider immediately changes the value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Immediate"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSlider<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSlider"}},{"HashCode":1476325593,"Kind":"Components.Component","Name":"MatBlazor.MatSlideToggle<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSlideToggle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSlideToggle<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSlideToggle"}},{"HashCode":-1643753892,"Kind":"Components.Component","Name":"MatBlazor.MatSlideToggle<TValue>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSlideToggle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSlideToggle<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatSlideToggle"}},{"HashCode":5539438,"Kind":"Components.Component","Name":"MatBlazor.MatSnackbar","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSnackbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Stacked","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Stacked\">\r\n            <summary>\r\n            Positions the action buttons below the label instead of alongside it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Stacked"}},{"Kind":"Components.Component","Name":"Leading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Leading\">\r\n             <summary>\r\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \r\n            \r\n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Leading"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpen\">\r\n            <summary>\r\n            Controls whether or not the snackbar is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"Timeout","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Timeout\">\r\n            <summary>\r\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\r\n            To leave the snackbar open indefinitely set the timeout to -1\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Timeout"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpenChanged\">\r\n            <summary>\r\n            This event is raised whenever IsOpen changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSnackbar","Common.TypeNameIdentifier":"MatSnackbar"}},{"HashCode":1311809184,"Kind":"Components.Component","Name":"MatBlazor.MatSnackbar","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSnackbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Stacked","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Stacked\">\r\n            <summary>\r\n            Positions the action buttons below the label instead of alongside it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Stacked"}},{"Kind":"Components.Component","Name":"Leading","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Leading\">\r\n             <summary>\r\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \r\n            \r\n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Leading"}},{"Kind":"Components.Component","Name":"IsOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpen\">\r\n            <summary>\r\n            Controls whether or not the snackbar is shown.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsOpen"}},{"Kind":"Components.Component","Name":"Timeout","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.Timeout\">\r\n            <summary>\r\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\r\n            To leave the snackbar open indefinitely set the timeout to -1\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Timeout"}},{"Kind":"Components.Component","Name":"IsOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:MatBlazor.BaseMatSnackbar.IsOpenChanged\">\r\n            <summary>\r\n            This event is raised whenever IsOpen changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"IsOpenChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSnackbar","Common.TypeNameIdentifier":"MatSnackbar"}},{"HashCode":-833589012,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSnackbar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSnackbar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSnackbar.ChildContent","Common.TypeNameIdentifier":"MatSnackbar"}},{"HashCode":882072992,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSnackbar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSnackbar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSnackbar.ChildContent","Common.TypeNameIdentifier":"MatSnackbar"}},{"HashCode":-913347596,"Kind":"Components.Component","Name":"MatBlazor.MatSnackbarActions","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSnackbarActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSnackbarActions","Common.TypeNameIdentifier":"MatSnackbarActions"}},{"HashCode":271610005,"Kind":"Components.Component","Name":"MatBlazor.MatSnackbarActions","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSnackbarActions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSnackbarActions","Common.TypeNameIdentifier":"MatSnackbarActions"}},{"HashCode":-137486515,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSnackbarActions.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSnackbarActions"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSnackbarActions.ChildContent","Common.TypeNameIdentifier":"MatSnackbarActions"}},{"HashCode":554465507,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSnackbarActions.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSnackbarActions"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSnackbarActions.ChildContent","Common.TypeNameIdentifier":"MatSnackbarActions"}},{"HashCode":511724640,"Kind":"Components.Component","Name":"MatBlazor.MatSnackbarContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSnackbarContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSnackbarContent","Common.TypeNameIdentifier":"MatSnackbarContent"}},{"HashCode":-1447067131,"Kind":"Components.Component","Name":"MatBlazor.MatSnackbarContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSnackbarContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSnackbarContent","Common.TypeNameIdentifier":"MatSnackbarContent"}},{"HashCode":-73379277,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSnackbarContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSnackbarContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSnackbarContent.ChildContent","Common.TypeNameIdentifier":"MatSnackbarContent"}},{"HashCode":-745346501,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSnackbarContent.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSnackbarContent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSnackbarContent.ChildContent","Common.TypeNameIdentifier":"MatSnackbarContent"}},{"HashCode":-658869254,"Kind":"Components.Component","Name":"MatBlazor.MatSortHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSortHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSortHeader","Common.TypeNameIdentifier":"MatSortHeader"}},{"HashCode":-1340744690,"Kind":"Components.Component","Name":"MatBlazor.MatSortHeader","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSortHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSortHeader","Common.TypeNameIdentifier":"MatSortHeader"}},{"HashCode":-1486029579,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSortHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSortHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSortHeader.ChildContent","Common.TypeNameIdentifier":"MatSortHeader"}},{"HashCode":-1297601837,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSortHeader.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSortHeader"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSortHeader.ChildContent","Common.TypeNameIdentifier":"MatSortHeader"}},{"HashCode":-276848969,"Kind":"Components.Component","Name":"MatBlazor.MatSortHeaderRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSortHeaderRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"SortIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"SortIdChanged"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatSortDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatSortDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"DirectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortDirection>","Common.PropertyName":"DirectionChanged"}},{"Kind":"Components.Component","Name":"SortChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortChangedEvent>","Common.PropertyName":"SortChanged"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSortHeaderRow","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":-1571221107,"Kind":"Components.Component","Name":"MatBlazor.MatSortHeaderRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSortHeaderRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SortId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortId"}},{"Kind":"Components.Component","Name":"SortIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"SortIdChanged"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"MatBlazor.MatSortDirection","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatSortDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"DirectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortDirection>","Common.PropertyName":"DirectionChanged"}},{"Kind":"Components.Component","Name":"SortChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.MatSortChangedEvent>","Common.PropertyName":"SortChanged"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatSortHeaderRow","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":1290072279,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSortHeaderRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatSortHeaderRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSortHeaderRow.ChildContent","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":-1817330396,"Kind":"Components.ChildContent","Name":"MatBlazor.MatSortHeaderRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatSortHeaderRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatSortHeaderRow.ChildContent","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":-217803529,"Kind":"Components.Component","Name":"MatBlazor.MatTabBar","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTabBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Active","TypeName":"MatBlazor.BaseMatTabLabel","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.BaseMatTabLabel","Common.PropertyName":"Active"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.BaseMatTabLabel>","Common.PropertyName":"ActiveChanged"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTabBar","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":2047017189,"Kind":"Components.Component","Name":"MatBlazor.MatTabBar","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTabBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Active","TypeName":"MatBlazor.BaseMatTabLabel","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.BaseMatTabLabel","Common.PropertyName":"Active"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::MatBlazor.BaseMatTabLabel>","Common.PropertyName":"ActiveChanged"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTabBar","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":947249176,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTabBar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatTabBar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTabBar.ChildContent","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":1251434433,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTabBar.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatTabBar"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTabBar.ChildContent","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":-634042991,"Kind":"Components.Component","Name":"MatBlazor.MatTabLabel","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTabLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTabLabel","Common.TypeNameIdentifier":"MatTabLabel"}},{"HashCode":-1439248249,"Kind":"Components.Component","Name":"MatBlazor.MatTabLabel","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTabLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTabLabel","Common.TypeNameIdentifier":"MatTabLabel"}},{"HashCode":2027114892,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTabLabel.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatTabLabel"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTabLabel.ChildContent","Common.TypeNameIdentifier":"MatTabLabel"}},{"HashCode":-1871663825,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTabLabel.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatTabLabel"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTabLabel.ChildContent","Common.TypeNameIdentifier":"MatTabLabel"}},{"HashCode":945718073,"Kind":"Components.Component","Name":"MatBlazor.MatTable<TableItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TableItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TableItem"}},{"Kind":"Components.Component","Name":"MatTableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableHeader\">\r\n            <summary>\r\n            The table header\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"MatTableHeader"}},{"Kind":"Components.Component","Name":"UseSortHeaderRow","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatTable`1.UseSortHeaderRow\">\r\n            <summary>\r\n            Allows the header row to be sorted\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"UseSortHeaderRow"}},{"Kind":"Components.Component","Name":"MatTableRow","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TableItem>","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableRow\">\r\n            <summary>\r\n            Renders the list of items within the table\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TableItem>","Components.GenericTyped":"True","Common.PropertyName":"MatTableRow"}},{"Kind":"Components.Component","Name":"PageSizes","TypeName":"MatBlazor.BaseMatTable.PageSizeStructure[]","Documentation":"<member name=\"P:MatBlazor.MatTable`1.PageSizes\">\r\n            <summary>\r\n            Not Functioning\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.BaseMatTable.PageSizeStructure[]","Common.PropertyName":"PageSizes"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TableItem>","Documentation":"<member name=\"P:MatBlazor.MatTable`1.Items\">\r\n            <summary>\r\n            Specifies the data for the table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TableItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"PageParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageParamName"}},{"Kind":"Components.Component","Name":"PageSizeParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageSizeParamName"}},{"Kind":"Components.Component","Name":"Descending","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Descending"}},{"Kind":"Components.Component","Name":"DescendingParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DescendingParamName"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortBy"}},{"Kind":"Components.Component","Name":"SortByParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortByParamName"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageRecordCountLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageRecordCountLabel"}},{"Kind":"Components.Component","Name":"PagingDataPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingDataPropertyName"}},{"Kind":"Components.Component","Name":"PagingRecordsCountPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingRecordsCountPropertyName"}},{"Kind":"Components.Component","Name":"SearchTermParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermParamName"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"System.Action<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SelectionChanged"}},{"Kind":"Components.Component","Name":"HeaderRowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.HeaderRowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableHeader row\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HeaderRowClass"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableRow\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RowClass"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you can select a single row.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RequestApiOnlyOnce","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RequestApiOnlyOnce\">\r\n            <summary>\r\n            Specifies whether to Request the API only once.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequestApiOnlyOnce"}},{"Kind":"Components.Component","Name":"DebounceMilliseconds","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.DebounceMilliseconds\">\r\n            <summary>\r\n            Specifies the delay duration between user input on the Search Term Field. Default 800\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DebounceMilliseconds"}},{"Kind":"Components.Component","Name":"FilterByColumnName","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.FilterByColumnName\">\r\n            <summary>\r\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FilterByColumnName"}},{"Kind":"Components.Component","Name":"SearchTermFieldLabel","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldLabel\">\r\n            <summary>\r\n            Specifies the Label for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldLabel"}},{"Kind":"Components.Component","Name":"SearchTermFieldPlaceHolder","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldPlaceHolder\">\r\n            <summary>\r\n            Specifies the Placeholder for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldPlaceHolder"}},{"Kind":"Components.Component","Name":"LoadInitialData","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.LoadInitialData\">\r\n            <summary>\r\n            Specifies where to Load the Initial Table Data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LoadInitialData"}},{"Kind":"Components.Component","Name":"ApiUrl","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ApiUrl\">\r\n            <summary>\r\n            Specifies the API Url form for the table data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ApiUrl"}},{"Kind":"Components.Component","Name":"ShowPaging","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowPaging\">\r\n            <summary>\r\n            Specifies the Paging visibility\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowPaging"}},{"Kind":"Components.Component","Name":"ShowFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowFooter\">\r\n            <summary>\r\n            Specifies the Table Footer visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowFooter"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.Striped\">\r\n            <summary>\r\n            Determines if table has alternating color rows.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Striped"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.PageSize\">\r\n            <summary>\r\n            The number of rows per page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageSizeChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"PageSizeChanged"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.CurrentPage\">\r\n            <summary>\r\n            The current page, starting from one.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CurrentPage"}},{"Kind":"Components.Component","Name":"CurrentPageChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"CurrentPageChanged"}},{"Kind":"Components.Component","Name":"OnRowDbClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.OnRowDbClick\">\r\n            <summary>\r\n            Action to execute on row item\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Common.PropertyName":"OnRowDbClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTable<TableItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":-1239559186,"Kind":"Components.Component","Name":"MatBlazor.MatTable<TableItem>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TableItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TableItem"}},{"Kind":"Components.Component","Name":"MatTableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableHeader\">\r\n            <summary>\r\n            The table header\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"MatTableHeader"}},{"Kind":"Components.Component","Name":"UseSortHeaderRow","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.MatTable`1.UseSortHeaderRow\">\r\n            <summary>\r\n            Allows the header row to be sorted\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"UseSortHeaderRow"}},{"Kind":"Components.Component","Name":"MatTableRow","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TableItem>","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableRow\">\r\n            <summary>\r\n            Renders the list of items within the table\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TableItem>","Components.GenericTyped":"True","Common.PropertyName":"MatTableRow"}},{"Kind":"Components.Component","Name":"PageSizes","TypeName":"MatBlazor.BaseMatTable.PageSizeStructure[]","Documentation":"<member name=\"P:MatBlazor.MatTable`1.PageSizes\">\r\n            <summary>\r\n            Not Functioning\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.BaseMatTable.PageSizeStructure[]","Common.PropertyName":"PageSizes"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TableItem>","Documentation":"<member name=\"P:MatBlazor.MatTable`1.Items\">\r\n            <summary>\r\n            Specifies the data for the table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TableItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"PageParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageParamName"}},{"Kind":"Components.Component","Name":"PageSizeParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageSizeParamName"}},{"Kind":"Components.Component","Name":"Descending","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Descending"}},{"Kind":"Components.Component","Name":"DescendingParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DescendingParamName"}},{"Kind":"Components.Component","Name":"SortBy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortBy"}},{"Kind":"Components.Component","Name":"SortByParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SortByParamName"}},{"Kind":"Components.Component","Name":"PageLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageLabel"}},{"Kind":"Components.Component","Name":"PageRecordCountLabel","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PageRecordCountLabel"}},{"Kind":"Components.Component","Name":"PagingDataPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingDataPropertyName"}},{"Kind":"Components.Component","Name":"PagingRecordsCountPropertyName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PagingRecordsCountPropertyName"}},{"Kind":"Components.Component","Name":"SearchTermParamName","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermParamName"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"System.Action<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SelectionChanged"}},{"Kind":"Components.Component","Name":"HeaderRowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.HeaderRowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableHeader row\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HeaderRowClass"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RowClass\">\r\n            <summary>\r\n            Specifies a custom class for the MatTableRow\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RowClass"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.AllowSelection\">\r\n            <summary>\r\n            Specifies weather you can select a single row.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RequestApiOnlyOnce","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.RequestApiOnlyOnce\">\r\n            <summary>\r\n            Specifies whether to Request the API only once.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequestApiOnlyOnce"}},{"Kind":"Components.Component","Name":"DebounceMilliseconds","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.DebounceMilliseconds\">\r\n            <summary>\r\n            Specifies the delay duration between user input on the Search Term Field. Default 800\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"DebounceMilliseconds"}},{"Kind":"Components.Component","Name":"FilterByColumnName","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.FilterByColumnName\">\r\n            <summary>\r\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FilterByColumnName"}},{"Kind":"Components.Component","Name":"SearchTermFieldLabel","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldLabel\">\r\n            <summary>\r\n            Specifies the Label for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldLabel"}},{"Kind":"Components.Component","Name":"SearchTermFieldPlaceHolder","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.SearchTermFieldPlaceHolder\">\r\n            <summary>\r\n            Specifies the Placeholder for the Filter / Search Term  Textbox\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SearchTermFieldPlaceHolder"}},{"Kind":"Components.Component","Name":"LoadInitialData","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.LoadInitialData\">\r\n            <summary>\r\n            Specifies where to Load the Initial Table Data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"LoadInitialData"}},{"Kind":"Components.Component","Name":"ApiUrl","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ApiUrl\">\r\n            <summary>\r\n            Specifies the API Url form for the table data\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ApiUrl"}},{"Kind":"Components.Component","Name":"ShowPaging","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowPaging\">\r\n            <summary>\r\n            Specifies the Paging visibility\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowPaging"}},{"Kind":"Components.Component","Name":"ShowFooter","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.ShowFooter\">\r\n            <summary>\r\n            Specifies the Table Footer visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowFooter"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.Striped\">\r\n            <summary>\r\n            Determines if table has alternating color rows.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Striped"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.PageSize\">\r\n            <summary>\r\n            The number of rows per page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"PageSize"}},{"Kind":"Components.Component","Name":"PageSizeChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"PageSizeChanged"}},{"Kind":"Components.Component","Name":"CurrentPage","TypeName":"System.Int32","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.CurrentPage\">\r\n            <summary>\r\n            The current page, starting from one.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CurrentPage"}},{"Kind":"Components.Component","Name":"CurrentPageChanged","TypeName":"System.Action<System.Int32>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Int32>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"CurrentPageChanged"}},{"Kind":"Components.Component","Name":"OnRowDbClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatTable.OnRowDbClick\">\r\n            <summary>\r\n            Action to execute on row item\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Common.PropertyName":"OnRowDbClick"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTable<TableItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":36297434,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTable<TableItem>.MatTableHeader","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableHeader\">\r\n            <summary>\r\n            The table header\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTableHeader","ParentTag":"MatTable"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTable<TableItem>.MatTableHeader","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":-374876926,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTable<TableItem>.MatTableHeader","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableHeader\">\r\n            <summary>\r\n            The table header\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTableHeader","ParentTag":"MatBlazor.MatTable"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTable<TableItem>.MatTableHeader","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":1737998502,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTable<TableItem>.MatTableRow","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableRow\">\r\n            <summary>\r\n            Renders the list of items within the table\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTableRow","ParentTag":"MatTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'MatTableRow' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTable<TableItem>.MatTableRow","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":-661987423,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTable<TableItem>.MatTableRow","AssemblyName":"MatBlazor","Documentation":"<member name=\"P:MatBlazor.MatTable`1.MatTableRow\">\r\n            <summary>\r\n            Renders the list of items within the table\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTableRow","ParentTag":"MatBlazor.MatTable"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'MatTableRow' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTable<TableItem>.MatTableRow","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":-325018537,"Kind":"Components.Component","Name":"MatBlazor.TableRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TableRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RowItem","TypeName":"System.Object","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RowItem"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.TableRow","Common.TypeNameIdentifier":"TableRow"}},{"HashCode":914501879,"Kind":"Components.Component","Name":"MatBlazor.TableRow","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.TableRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Selected","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Selected"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowSelection"}},{"Kind":"Components.Component","Name":"RowItem","TypeName":"System.Object","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RowItem"}},{"Kind":"Components.Component","Name":"SelectedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"SelectedChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.TableRow","Common.TypeNameIdentifier":"TableRow"}},{"HashCode":-1991986852,"Kind":"Components.ChildContent","Name":"MatBlazor.TableRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TableRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.TableRow.ChildContent","Common.TypeNameIdentifier":"TableRow"}},{"HashCode":-1753014797,"Kind":"Components.ChildContent","Name":"MatBlazor.TableRow.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.TableRow"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.TableRow.ChildContent","Common.TypeNameIdentifier":"TableRow"}},{"HashCode":682303616,"Kind":"Components.Component","Name":"MatBlazor.MatTab","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"LabelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"LabelContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTab","Common.TypeNameIdentifier":"MatTab"}},{"HashCode":139041949,"Kind":"Components.Component","Name":"MatBlazor.MatTab","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"LabelContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"LabelContent"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTab","Common.TypeNameIdentifier":"MatTab"}},{"HashCode":-1572121532,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTab.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTab.ChildContent","Common.TypeNameIdentifier":"MatTab"}},{"HashCode":219292018,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTab.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTab.ChildContent","Common.TypeNameIdentifier":"MatTab"}},{"HashCode":194275428,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTab.LabelContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelContent","ParentTag":"MatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTab.LabelContent","Common.TypeNameIdentifier":"MatTab"}},{"HashCode":320734944,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTab.LabelContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelContent","ParentTag":"MatBlazor.MatTab"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTab.LabelContent","Common.TypeNameIdentifier":"MatTab"}},{"HashCode":139237332,"Kind":"Components.Component","Name":"MatBlazor.MatTabGroup","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTabGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTabGroup","Common.TypeNameIdentifier":"MatTabGroup"}},{"HashCode":-1666773166,"Kind":"Components.Component","Name":"MatBlazor.MatTabGroup","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTabGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ActiveIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ActiveIndex"}},{"Kind":"Components.Component","Name":"ActiveIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Common.PropertyName":"ActiveIndexChanged"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTabGroup","Common.TypeNameIdentifier":"MatTabGroup"}},{"HashCode":1065173896,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTabGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatTabGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTabGroup.ChildContent","Common.TypeNameIdentifier":"MatTabGroup"}},{"HashCode":-34917385,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTabGroup.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatTabGroup"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTabGroup.ChildContent","Common.TypeNameIdentifier":"MatTabGroup"}},{"HashCode":929788142,"Kind":"Components.Component","Name":"MatBlazor.MatInputTextComponent<T>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatInputTextComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"T"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatInputTextComponent<T>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatInputTextComponent"}},{"HashCode":-908786271,"Kind":"Components.Component","Name":"MatBlazor.MatInputTextComponent<T>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatInputTextComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"T"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"IconOnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Common.PropertyName":"IconOnClick"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocus"}},{"Kind":"Components.Component","Name":"OnFocusOut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Common.PropertyName":"OnFocusOut"}},{"Kind":"Components.Component","Name":"OnKeyPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyPress"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyDown"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Common.PropertyName":"OnKeyUp"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.ChangeEventArgs>","Common.PropertyName":"OnInput"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Label"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IconTrailing","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IconTrailing"}},{"Kind":"Components.Component","Name":"Box","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Box"}},{"Kind":"Components.Component","Name":"TextArea","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"TextArea"}},{"Kind":"Components.Component","Name":"Dense","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Dense"}},{"Kind":"Components.Component","Name":"Outlined","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Outlined"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.ReadOnly\">\r\n            <summary>\r\n            When true, it specifies that an input field is read-only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ReadOnly"}},{"Kind":"Components.Component","Name":"FullWidth","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"FullWidth"}},{"Kind":"Components.Component","Name":"Required","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Required"}},{"Kind":"Components.Component","Name":"HelperText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HelperText"}},{"Kind":"Components.Component","Name":"HelperTextPersistent","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextPersistent"}},{"Kind":"Components.Component","Name":"HelperTextValidation","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HelperTextValidation"}},{"Kind":"Components.Component","Name":"PlaceHolder","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PlaceHolder"}},{"Kind":"Components.Component","Name":"HideClearButton","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"HideClearButton"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"InputClass","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputClass\">\r\n            <summary>\r\n            Css class of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputClass"}},{"Kind":"Components.Component","Name":"InputStyle","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatInputTextComponent`1.InputStyle\">\r\n            <summary>\r\n            Style attribute of input element\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InputStyle"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"InputAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"InputAttributes"}},{"Kind":"Components.Component","Name":"ValidationDisabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ValidationDisabled"}},{"Kind":"Components.Component","Name":"Value","TypeName":"T","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"T","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<T>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<T>>","Documentation":"<member name=\"P:MatBlazor.BaseMatInputComponent`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<T>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatInputTextComponent<T>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatInputTextComponent"}},{"HashCode":1716932348,"Kind":"Components.ChildContent","Name":"MatBlazor.MatInputTextComponent<T>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatInputTextComponent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatInputTextComponent<T>.ChildContent","Common.TypeNameIdentifier":"MatInputTextComponent"}},{"HashCode":1624853350,"Kind":"Components.ChildContent","Name":"MatBlazor.MatInputTextComponent<T>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatInputTextComponent"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatInputTextComponent<T>.ChildContent","Common.TypeNameIdentifier":"MatInputTextComponent"}},{"HashCode":-938558698,"Kind":"Components.Component","Name":"MatBlazor.MatThemeProvider","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"MatBlazor.MatTheme","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTheme","Common.PropertyName":"Theme"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatThemeProvider","Common.TypeNameIdentifier":"MatThemeProvider"}},{"HashCode":791634255,"Kind":"Components.Component","Name":"MatBlazor.MatThemeProvider","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatThemeProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"MatBlazor.MatTheme","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTheme","Common.PropertyName":"Theme"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatThemeProvider","Common.TypeNameIdentifier":"MatThemeProvider"}},{"HashCode":1356703670,"Kind":"Components.ChildContent","Name":"MatBlazor.MatThemeProvider.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatThemeProvider"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatThemeProvider.ChildContent","Common.TypeNameIdentifier":"MatThemeProvider"}},{"HashCode":-522294956,"Kind":"Components.ChildContent","Name":"MatBlazor.MatThemeProvider.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatThemeProvider"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatThemeProvider.ChildContent","Common.TypeNameIdentifier":"MatThemeProvider"}},{"HashCode":-239102177,"Kind":"Components.Component","Name":"MatBlazor.MatToastContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatToastContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatToastContainer","Common.TypeNameIdentifier":"MatToastContainer"}},{"HashCode":706128051,"Kind":"Components.Component","Name":"MatBlazor.MatToastContainer","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatToastContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatToastContainer","Common.TypeNameIdentifier":"MatToastContainer"}},{"HashCode":1402849278,"Kind":"Components.Component","Name":"MatBlazor.MatToastItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatToastItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Toast","TypeName":"MatBlazor.MatToast","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToast","Common.PropertyName":"Toast"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Type","TypeName":"MatBlazor.MatToastType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToastType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatToastItem","Common.TypeNameIdentifier":"MatToastItem"}},{"HashCode":46068363,"Kind":"Components.Component","Name":"MatBlazor.MatToastItem","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatToastItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Toast","TypeName":"MatBlazor.MatToast","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToast","Common.PropertyName":"Toast"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"Type","TypeName":"MatBlazor.MatToastType","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatToastType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatToastItem","Common.TypeNameIdentifier":"MatToastItem"}},{"HashCode":1284747500,"Kind":"Components.ChildContent","Name":"MatBlazor.MatToastItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatToastItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatToastItem.ChildContent","Common.TypeNameIdentifier":"MatToastItem"}},{"HashCode":-314768607,"Kind":"Components.ChildContent","Name":"MatBlazor.MatToastItem.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatToastItem"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatToastItem.ChildContent","Common.TypeNameIdentifier":"MatToastItem"}},{"HashCode":113074013,"Kind":"Components.Component","Name":"MatBlazor.MatTooltip","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MatBlazor.ForwardRef>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TooltipContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"TooltipContent"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tooltip"}},{"Kind":"Components.Component","Name":"TargetId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TargetId"}},{"Kind":"Components.Component","Name":"Wrap","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Wrap"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatTooltipPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTooltipPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTooltip","Common.TypeNameIdentifier":"MatTooltip"}},{"HashCode":2111403681,"Kind":"Components.Component","Name":"MatBlazor.MatTooltip","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::MatBlazor.ForwardRef>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"TooltipContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"TooltipContent"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Tooltip"}},{"Kind":"Components.Component","Name":"TargetId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TargetId"}},{"Kind":"Components.Component","Name":"Wrap","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Wrap"}},{"Kind":"Components.Component","Name":"Position","TypeName":"MatBlazor.MatTooltipPosition","IsEnum":true,"Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.MatTooltipPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"TargetForwardRef","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"TargetForwardRef"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatTooltip","Common.TypeNameIdentifier":"MatTooltip"}},{"HashCode":-1757850064,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTooltip.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatTooltip"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTooltip.ChildContent","Common.TypeNameIdentifier":"MatTooltip"}},{"HashCode":687261110,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTooltip.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatTooltip"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTooltip.ChildContent","Common.TypeNameIdentifier":"MatTooltip"}},{"HashCode":1481387029,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTooltip.TooltipContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContent","ParentTag":"MatTooltip"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTooltip.TooltipContent","Common.TypeNameIdentifier":"MatTooltip"}},{"HashCode":-1240883631,"Kind":"Components.ChildContent","Name":"MatBlazor.MatTooltip.TooltipContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContent","ParentTag":"MatBlazor.MatTooltip"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatTooltip.TooltipContent","Common.TypeNameIdentifier":"MatTooltip"}},{"HashCode":1670677430,"Kind":"Components.Component","Name":"MatBlazor.MatVirtualScroll<ItemType>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemType","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"ItemType"}},{"Kind":"Components.Component","Name":"ItemHeight","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ItemHeight"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<ItemType>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<ItemType>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<ItemType>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<ItemType>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatVirtualScroll<ItemType>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatVirtualScroll"}},{"HashCode":1323894633,"Kind":"Components.Component","Name":"MatBlazor.MatVirtualScroll<ItemType>","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemType","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"ItemType"}},{"Kind":"Components.Component","Name":"ItemHeight","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ItemHeight"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<ItemType>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<ItemType>","Components.GenericTyped":"True","Common.PropertyName":"ItemTemplate"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<ItemType>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<ItemType>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Attributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Class\">\r\n            <summary>\r\n            Specifies one or more classnames for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:MatBlazor.BaseMatDomComponent.Style\">\r\n            <summary>\r\n            Specifies an inline style for an DOM element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"RefBack","TypeName":"MatBlazor.ForwardRef","Metadata":{"Common.GloballyQualifiedTypeName":"global::MatBlazor.ForwardRef","Common.PropertyName":"RefBack"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor.MatVirtualScroll<ItemType>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"MatVirtualScroll"}},{"HashCode":-727934840,"Kind":"Components.ChildContent","Name":"MatBlazor.MatVirtualScroll<ItemType>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatVirtualScroll"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatVirtualScroll<ItemType>.ChildContent","Common.TypeNameIdentifier":"MatVirtualScroll"}},{"HashCode":423000535,"Kind":"Components.ChildContent","Name":"MatBlazor.MatVirtualScroll<ItemType>.ChildContent","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MatBlazor.MatVirtualScroll"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatVirtualScroll<ItemType>.ChildContent","Common.TypeNameIdentifier":"MatVirtualScroll"}},{"HashCode":-70486318,"Kind":"Components.ChildContent","Name":"MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate","Common.TypeNameIdentifier":"MatVirtualScroll"}},{"HashCode":396921103,"Kind":"Components.ChildContent","Name":"MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"MatBlazor.MatVirtualScroll"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate","Common.TypeNameIdentifier":"MatVirtualScroll"}},{"HashCode":-1978529958,"Kind":"Components.Component","Name":"MatBlazor._Imports","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":-1601242106,"Kind":"Components.Component","Name":"MatBlazor._Imports","AssemblyName":"MatBlazor","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor._Imports"}],"Metadata":{"Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"MatBlazor._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":456704173,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator"}},{"HashCode":1602179958,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator"}},{"HashCode":-572663461,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext","Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnSubmit"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnValidSubmit"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnInvalidSubmit"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":-588114541,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext","Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnSubmit"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnValidSubmit"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnInvalidSubmit"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":924762995,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":1969597621,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":-1362667734,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":390316276,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":-1311768412,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":-27656975,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":512248358,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile"}},{"HashCode":-793686601,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile"}},{"HashCode":983649175,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":-556115839,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":323724845,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadio"}},{"HashCode":1048570729,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadio"}},{"HashCode":3845135,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":-325820364,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":68095476,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":-2140436893,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":501651446,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1014469851,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-2086620057,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":240832860,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1352458492,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-226117494,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-1100667989,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":919219871,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":-1478366108,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"ValidationMessage"}},{"HashCode":-1327564734,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"ValidationMessage"}},{"HashCode":-1104507193,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary"}},{"HashCode":-1607129185,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary"}},{"HashCode":27695941,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Selector"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate"}},{"HashCode":1693734471,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Selector"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate"}},{"HashCode":-402700225,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"Match"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":1531657519,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"Match"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-446411434,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-1030631652,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-1520898206,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-618466065,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":319822320,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-749425297,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-2072687175,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet"}},{"HashCode":-1202216091,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet"}},{"HashCode":-1102488851,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":1156767528,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":-894340878,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":-1244735021,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":-985770859,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Common.PropertyName":"ErrorContent"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-280642229,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Common.PropertyName":"ErrorContent"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-835195399,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-1192805258,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-342031245,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-1147300225,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-1986957815,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemContent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Single","Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True","Common.PropertyName":"ItemsProvider"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-554708338,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemContent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Single","Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True","Common.PropertyName":"ItemsProvider"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":1718389561,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-1949831978,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":1203803959,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-2031543214,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-14890901,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":520927092,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":1940007618,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-792368137,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-199390266,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-433760116,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":1972501356,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":1005752647,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-1386055935,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"Authorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-366856331,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"Authorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-2126992260,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-480051696,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":1153701438,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":1947491960,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1023823014,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1583319627,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":243149576,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1100011753,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":908179135,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-1215977598,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":984151807,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-2143412950,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-977639569,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFixed"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":202740433,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFixed"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":1233880042,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":-768078150,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":137251201,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"Parameters"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent"}},{"HashCode":143663655,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"Parameters"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent"}},{"HashCode":2036585645,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Layout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":1906187394,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Layout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":-1002655453,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":1897224314,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":755423178,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView"}},{"HashCode":-635781978,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView"}},{"HashCode":1587649487,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly","Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>","Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"NotFound"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Common.PropertyName":"Found"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Navigating"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Common.PropertyName":"OnNavigateAsync"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1152193607,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly","Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>","Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"NotFound"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Common.PropertyName":"Found"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Navigating"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Common.PropertyName":"OnNavigateAsync"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1648221681,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1621887786,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router"}},{"HashCode":839024483,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router"}},{"HashCode":1257976313,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1706588304,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router"}},{"HashCode":1775589929,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1241519277,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":185338890,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1395951131,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-80162751,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":38666978,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":841963227,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":900683537,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1689748505,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2072535000,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":957123670,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1117690483,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1890398664,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-873195285,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1783703258,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1126093720,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-217965433,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-740922146,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1114242050,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2067527959,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":290913765,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":500052702,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2089820561,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":159258008,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1171150421,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1271741505,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2064097127,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1628000710,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":534622536,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-232666644,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-334703033,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-580793560,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1182237255,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":41919870,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-467476237,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-847753862,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1103205449,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-336745500,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1167691091,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-814867136,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1498711591,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-586006226,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1710607310,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-807819226,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1947950502,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1480270924,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1745683678,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1295402411,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-52025697,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1001822979,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-696829939,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1019396270,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-358160437,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":373773343,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":678915047,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2079011202,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-505461926,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":561069164,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-628056390,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1753598003,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-400440555,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1218828270,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":250593440,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":935785849,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-710319652,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1041149917,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1045603085,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1650458835,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1645835663,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":441111076,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-397557218,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":537583696,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":836734996,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":861226790,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1844748847,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-101025883,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1892583957,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1160619536,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1647209768,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-36368380,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1700008379,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-120325947,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1880914847,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1960248882,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2030586449,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":274964787,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":564604628,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1564406460,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":965338784,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-788074180,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1139821432,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1723125714,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1160583875,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-464744423,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Attributes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes","Common.ClassifyAttributesOnly":"True"}},{"HashCode":-454297784,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"a","Attributes":[{"Name":"asp-action"}]},{"TagName":"a","Attributes":[{"Name":"asp-controller"}]},{"TagName":"a","Attributes":[{"Name":"asp-area"}]},{"TagName":"a","Attributes":[{"Name":"asp-page"}]},{"TagName":"a","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"a","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"a","Attributes":[{"Name":"asp-host"}]},{"TagName":"a","Attributes":[{"Name":"asp-protocol"}]},{"TagName":"a","Attributes":[{"Name":"asp-route"}]},{"TagName":"a","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"a","Attributes":[{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-protocol","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol\">\r\n            <summary>\r\n            The protocol for the URL, such as \"http\" or \"https\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Protocol"}},{"Kind":"ITagHelper","Name":"asp-host","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host\">\r\n            <summary>\r\n            The host name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Host"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment\">\r\n            <summary>\r\n            The URL fragment name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\r\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","Common.TypeNameIdentifier":"AnchorTagHelper"}},{"HashCode":-1792856567,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"cache"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"priority","TypeName":"Microsoft.Extensions.Caching.Memory.CacheItemPriority?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Priority"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","Common.TypeNameIdentifier":"CacheTagHelper"}},{"HashCode":529625848,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"component","TagStructure":2,"Attributes":[{"Name":"type"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"params","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","IndexerNamePrefix":"param-","IndexerTypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters\">\r\n            <summary>\r\n            Gets or sets values for component parameters.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType\">\r\n            <summary>\r\n            Gets or sets the component type. This value is required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ComponentType"}},{"Kind":"ITagHelper","Name":"render-mode","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.RenderMode","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RenderMode"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","Common.TypeNameIdentifier":"ComponentTagHelper"}},{"HashCode":1283854314,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"distributed-cache","Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name\">\r\n            <summary>\r\n            Gets or sets a unique name to discriminate cached entries.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","Common.TypeNameIdentifier":"DistributedCacheTagHelper"}},{"HashCode":1995842910,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\r\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\r\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"environment"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"names","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Names"}},{"Kind":"ITagHelper","Name":"include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Include"}},{"Kind":"ITagHelper","Name":"exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Exclude"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","Common.TypeNameIdentifier":"EnvironmentTagHelper"}},{"HashCode":1113929238,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\r\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"button","Attributes":[{"Name":"asp-action"}]},{"TagName":"button","Attributes":[{"Name":"asp-controller"}]},{"TagName":"button","Attributes":[{"Name":"asp-area"}]},{"TagName":"button","Attributes":[{"Name":"asp-page"}]},{"TagName":"button","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"button","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"button","Attributes":[{"Name":"asp-route"}]},{"TagName":"button","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"button","Attributes":[{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","Common.TypeNameIdentifier":"FormActionTagHelper"}},{"HashCode":389843017,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"form"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-antiforgery","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery\">\r\n            <summary>\r\n            Whether the antiforgery token should be generated.\r\n            </summary>\r\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\r\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\r\n        </member>","Metadata":{"Common.PropertyName":"Antiforgery"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","Common.TypeNameIdentifier":"FormTagHelper"}},{"HashCode":-281794304,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"asp-append-version"},{"Name":"src"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src\">\r\n            <summary>\r\n            Source of the image.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the src urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","Common.TypeNameIdentifier":"ImageTagHelper"}},{"HashCode":1322189092,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-format","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\">\r\n            <summary>\r\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\r\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\r\n            </summary>\r\n            <remarks>\r\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\r\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\r\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\">\r\n            <summary>\r\n            The type of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\r\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\r\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\r\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InputTypeName"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value\">\r\n            <summary>\r\n            The value of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\r\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","Common.TypeNameIdentifier":"InputTagHelper"}},{"HashCode":1530364764,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"label","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","Common.TypeNameIdentifier":"LabelTagHelper"}},{"HashCode":1278061783,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'href' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-class"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-property"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-value"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"href","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href\">\r\n            <summary>\r\n            Address of the linked resource.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Href"}},{"Kind":"ITagHelper","Name":"asp-href-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HrefInclude"}},{"Kind":"ITagHelper","Name":"asp-href-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\">\r\n            <summary>\r\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHref"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the href urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\r\n            one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHrefInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-class","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\">\r\n            <summary>\r\n            The class name defined in the stylesheet to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestClass"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-property","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\">\r\n            <summary>\r\n            The CSS property name to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestProperty"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\">\r\n            <summary>\r\n            The CSS property value to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestValue"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","Common.TypeNameIdentifier":"LinkTagHelper"}},{"HashCode":-1638577815,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\r\n            </summary>\r\n            <remarks>\r\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\r\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\r\n            in some cases.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"option"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value\">\r\n            <summary>\r\n            Specifies a value for the &lt;option&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","Common.TypeNameIdentifier":"OptionTagHelper"}},{"HashCode":301813300,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper\">\r\n            <summary>\r\n            Renders a partial view.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"partial","TagStructure":2,"Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\">\r\n            <summary>\r\n            The name or path of the partial view that is rendered to the response.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\">\r\n            <summary>\r\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"ITagHelper","Name":"optional","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional\">\r\n            <summary>\r\n            When optional, executing the tag helper will no-op if the view cannot be located.\r\n            Otherwise will throw stating the view could not be found.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Optional"}},{"Kind":"ITagHelper","Name":"fallback-name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName\">\r\n            <summary>\r\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackName"}},{"Kind":"ITagHelper","Name":"view-data","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary","IndexerNamePrefix":"view-data-","IndexerTypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ViewData"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","Common.TypeNameIdentifier":"PartialTagHelper"}},{"HashCode":-2102000158,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"persist-component-state","TagStructure":2}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"persist-mode","TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PersistenceMode"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","Common.TypeNameIdentifier":"PersistComponentStateTagHelper"}},{"HashCode":1919440116,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"script","Attributes":[{"Name":"asp-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-test"}]},{"TagName":"script","Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src\">\r\n            <summary>\r\n            Address of the external script to use.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-src-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SrcInclude"}},{"Kind":"ITagHelper","Name":"asp-src-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\">\r\n            <summary>\r\n            The URL of a Script tag to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrc"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to src urls.\r\n            </summary>\r\n            <remarks>\r\n            A query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\r\n            primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrcInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression\">\r\n            <summary>\r\n            The script method defined in the primary script to use for the fallback test.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestExpression"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","Common.TypeNameIdentifier":"ScriptTagHelper"}},{"HashCode":-336972530,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\r\n            <c>asp-items</c> attribute(s).\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"asp-for"}]},{"TagName":"select","Attributes":[{"Name":"asp-items"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-items","TypeName":"System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items\">\r\n            <summary>\r\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\r\n            &lt;optgroup&gt; and &lt;option&gt; elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","Common.TypeNameIdentifier":"SelectTagHelper"}},{"HashCode":-1473474677,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","Common.TypeNameIdentifier":"TextAreaTagHelper"}},{"HashCode":-1713889251,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\r\n            attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"span","Attributes":[{"Name":"asp-validation-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For\">\r\n            <summary>\r\n            Gets an expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","Common.TypeNameIdentifier":"ValidationMessageTagHelper"}},{"HashCode":890700439,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\r\n            attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"div","Attributes":[{"Name":"asp-validation-summary"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-summary","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\">\r\n            <summary>\r\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\r\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\r\n            </summary>\r\n            <exception cref=\"T:System.ArgumentException\">\r\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\r\n            <c>(ValidationSummary)23</c>.\r\n            </exception>\r\n        </member>","Metadata":{"Common.PropertyName":"ValidationSummary"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","Common.TypeNameIdentifier":"ValidationSummaryTagHelper"}},{"HashCode":-908965030,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.Razor","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\r\n            </summary>\r\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\r\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\r\n            application-relative URLs are resolved.</remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"itemid","Value":"~/","ValueComparison":2}]},{"TagName":"a","Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"applet","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"area","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"audio","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"base","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"blockquote","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"button","Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"del","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"embed","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"form","Attributes":[{"Name":"action","Value":"~/","ValueComparison":2}]},{"TagName":"html","Attributes":[{"Name":"manifest","Value":"~/","ValueComparison":2}]},{"TagName":"iframe","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"ins","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"menuitem","Attributes":[{"Name":"icon","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"data","Value":"~/","ValueComparison":2}]},{"TagName":"q","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"script","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"track","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"poster","Value":"~/","ValueComparison":2}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","Common.TypeNameIdentifier":"UrlResolutionTagHelper"}},{"HashCode":68128766,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.Fallback":"True","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Microsoft.AspNetCore.Components.Bind","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"Bind"}},{"HashCode":-933749138,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1104133056,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-337462685,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.TypeAttribute":"checkbox","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-251536517,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"text","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1104233308,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"number","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1732425482,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"number","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1900373147,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-dd","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"date","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-2098739122,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-dd","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"date","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1274234482,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"datetime-local","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-483774086,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"datetime-local","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":614903700,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"month","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":2019391292,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"month","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1620150668,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"HH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"time","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-998986924,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"HH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"time","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1545263755,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"select","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-159836328,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"textarea","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1547662052,"Kind":"Components.Bind","Name":"MatBlazor.MatExpansionPanel","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatExpansionPanel","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatExpansionPanel","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatExpansionPanel","Components.Bind.ValueAttribute":"Expanded","Common.TypeNameIdentifier":"MatExpansionPanel"}},{"HashCode":1994306282,"Kind":"Components.Bind","Name":"MatBlazor.MatExpansionPanel","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatExpansionPanel","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatExpansionPanel","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatExpansionPanel","Components.Bind.ValueAttribute":"Expanded","Common.TypeNameIdentifier":"MatExpansionPanel"}},{"HashCode":-1590322919,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatAutocompleteList<TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatAutocompleteList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatAutocompleteList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatAutocompleteList<TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatAutocompleteList"}},{"HashCode":447991187,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatAutocompleteList<TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatAutocompleteList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatAutocompleteList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatAutocompleteList<TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatAutocompleteList"}},{"HashCode":1924425537,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatAutocomplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatAutocomplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":1245135650,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatAutocomplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatAutocomplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatAutocomplete<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatAutocomplete"}},{"HashCode":1775265587,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatCheckboxInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatCheckboxInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatCheckboxInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatCheckboxInternal"}},{"HashCode":214654201,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatCheckboxInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatCheckboxInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatCheckboxInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatCheckboxInternal"}},{"HashCode":345731962,"Kind":"Components.Bind","Name":"MatBlazor.MatCheckbox<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatCheckbox<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatCheckbox"}},{"HashCode":-784211007,"Kind":"Components.Bind","Name":"MatBlazor.MatCheckbox<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatCheckbox<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatCheckbox"}},{"HashCode":-1541471595,"Kind":"Components.Bind","Name":"MatBlazor.MatChipSet","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatChipSet","Attributes":[{"Name":"@bind-SelectedChip","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatChipSet","Attributes":[{"Name":"@bind-SelectedChip:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChip:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChip","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>","Documentation":"Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedChip"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChipChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatChipSet","Components.Bind.ValueAttribute":"SelectedChip","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":-1945192256,"Kind":"Components.Bind","Name":"MatBlazor.MatChipSet","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatChipSet","Attributes":[{"Name":"@bind-SelectedChips","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatChipSet","Attributes":[{"Name":"@bind-SelectedChips:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChips:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChips","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedChips"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChipsChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatChipSet","Components.Bind.ValueAttribute":"SelectedChips","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":513415508,"Kind":"Components.Bind","Name":"MatBlazor.MatChipSet","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatChipSet","Attributes":[{"Name":"@bind-SelectedChip","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatChipSet","Attributes":[{"Name":"@bind-SelectedChip:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChip:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChip","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>","Documentation":"Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedChip"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChipChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatChipSet","Components.Bind.ValueAttribute":"SelectedChip","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":-707328790,"Kind":"Components.Bind","Name":"MatBlazor.MatChipSet","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatChipSet","Attributes":[{"Name":"@bind-SelectedChips","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatChipSet","Attributes":[{"Name":"@bind-SelectedChips:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedChips:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedChips","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>","Documentation":"Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedChips"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChipsChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatChipSet","Components.Bind.ValueAttribute":"SelectedChips","Common.TypeNameIdentifier":"MatChipSet"}},{"HashCode":610734841,"Kind":"Components.Bind","Name":"MatBlazor.MatChip","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatChip","Attributes":[{"Name":"@bind-IsSelected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatChip","Attributes":[{"Name":"@bind-IsSelected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsSelected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsSelected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsSelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatChip","Components.Bind.ValueAttribute":"IsSelected","Common.TypeNameIdentifier":"MatChip"}},{"HashCode":-1419718631,"Kind":"Components.Bind","Name":"MatBlazor.MatChip","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatChip","Attributes":[{"Name":"@bind-IsSelected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatChip","Attributes":[{"Name":"@bind-IsSelected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsSelected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsSelected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsSelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatChip","Components.Bind.ValueAttribute":"IsSelected","Common.TypeNameIdentifier":"MatChip"}},{"HashCode":49490677,"Kind":"Components.Bind","Name":"MatBlazor.MatDatePicker<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDatePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatDatePicker","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatDatePicker<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatDatePicker"}},{"HashCode":-1998294151,"Kind":"Components.Bind","Name":"MatBlazor.MatDatePicker<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDatePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatDatePicker","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatDatePicker<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatDatePicker"}},{"HashCode":1898257907,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatDialog","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDialog","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatDialog","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatDialog","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"BaseMatDialog"}},{"HashCode":-1335269969,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatDialog","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDialog","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatDialog","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatDialog","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"BaseMatDialog"}},{"HashCode":-896669890,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatDrawer","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatDrawer","Attributes":[{"Name":"@bind-Opened","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatDrawer","Attributes":[{"Name":"@bind-Opened:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Opened:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Opened"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"OpenedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatDrawer","Components.Bind.ValueAttribute":"Opened","Common.TypeNameIdentifier":"BaseMatDrawer"}},{"HashCode":-873910036,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatDrawer","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatDrawer","Attributes":[{"Name":"@bind-Opened","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatDrawer","Attributes":[{"Name":"@bind-Opened:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Opened:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Opened"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"OpenedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatDrawer","Components.Bind.ValueAttribute":"Opened","Common.TypeNameIdentifier":"BaseMatDrawer"}},{"HashCode":-1847089928,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatIconButton","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatIconButton","Attributes":[{"Name":"@bind-Toggled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatIconButton","Attributes":[{"Name":"@bind-Toggled:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Toggled:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Toggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Toggled"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ToggledChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatIconButton","Components.Bind.ValueAttribute":"Toggled","Common.TypeNameIdentifier":"BaseMatIconButton"}},{"HashCode":-525378025,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatIconButton","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatIconButton","Attributes":[{"Name":"@bind-Toggled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatIconButton","Attributes":[{"Name":"@bind-Toggled:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Toggled:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Toggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Toggled"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ToggledChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatIconButton","Components.Bind.ValueAttribute":"Toggled","Common.TypeNameIdentifier":"BaseMatIconButton"}},{"HashCode":-253813462,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNavItem","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNavItem","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatNavItem","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatNavItem","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"BaseMatNavItem"}},{"HashCode":1380701861,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNavItem","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNavItem","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatNavItem","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatNavItem","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"BaseMatNavItem"}},{"HashCode":1240465084,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatNavSubMenu","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":-804724606,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatNavSubMenu","Components.Bind.ValueAttribute":"Expanded","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":-816752650,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatNavSubMenu","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":-455992341,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatNavSubMenu","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatNavSubMenu","Components.Bind.ValueAttribute":"Expanded","Common.TypeNameIdentifier":"BaseMatNavSubMenu"}},{"HashCode":-1057846454,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatNumericUpDownFieldInternal"}},{"HashCode":-1118649878,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatNumericUpDownFieldInternal"}},{"HashCode":785830670,"Kind":"Components.Bind","Name":"MatBlazor.MatNumericUpDownField<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNumericUpDownField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatNumericUpDownField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatNumericUpDownField<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatNumericUpDownField"}},{"HashCode":-235980610,"Kind":"Components.Bind","Name":"MatBlazor.MatNumericUpDownField<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNumericUpDownField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatNumericUpDownField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatNumericUpDownField<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatNumericUpDownField"}},{"HashCode":1857283103,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatRadioGroupInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatRadioGroupInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":472396548,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatRadioGroupInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatRadioGroupInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatRadioGroupInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatRadioGroupInternal"}},{"HashCode":1225935277,"Kind":"Components.Bind","Name":"MatBlazor.MatRadioGroup<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":1603821302,"Kind":"Components.Bind","Name":"MatBlazor.MatRadioGroup<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatRadioGroup<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatRadioGroup"}},{"HashCode":1558369441,"Kind":"Components.Bind","Name":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseCoreMatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseCoreMatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseCoreMatSelect"}},{"HashCode":-1947798469,"Kind":"Components.Bind","Name":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseCoreMatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseCoreMatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseCoreMatSelect<TValue, TKey>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseCoreMatSelect"}},{"HashCode":1232404503,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSelect<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSelect"}},{"HashCode":1126075478,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSelect<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSelect"}},{"HashCode":-970406971,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSelectItem<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSelectItem","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSelectItem","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":-708048565,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSelectItem<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSelectItem","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSelectItem","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSelectItem<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSelectItem"}},{"HashCode":1916084805,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSelectValue","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSelectValue","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":1340735298,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSelectValue","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSelectValue","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSelectValue<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSelectValue"}},{"HashCode":-1980504126,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSlider<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSlider","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSlider<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSlider"}},{"HashCode":152340713,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSlider<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSlider","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSlider<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSlider"}},{"HashCode":1126329649,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSlideToggle<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSlideToggle","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSlideToggle","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSlideToggle<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSlideToggle"}},{"HashCode":101501797,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSlideToggle<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSlideToggle","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSlideToggle","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.BaseMatSlideToggle<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"BaseMatSlideToggle"}},{"HashCode":38871447,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSnackbar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSnackbar","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSnackbar","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatSnackbar","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"BaseMatSnackbar"}},{"HashCode":1768469193,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSnackbar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSnackbar","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSnackbar","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatSnackbar","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"BaseMatSnackbar"}},{"HashCode":1309829365,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-SortId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-SortId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SortId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SortId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SortId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SortIdChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow","Components.Bind.ValueAttribute":"SortId","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":-817528333,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-Direction","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-Direction:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Direction:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Direction","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","IsEnum":true,"Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Direction"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DirectionChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow","Components.Bind.ValueAttribute":"Direction","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":-894408547,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-SortId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-SortId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SortId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SortId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SortId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SortIdChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow","Components.Bind.ValueAttribute":"SortId","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":-1225824932,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-Direction","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatSortHeaderRow","Attributes":[{"Name":"@bind-Direction:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Direction:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Direction","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","IsEnum":true,"Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Direction"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DirectionChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatSortHeaderRow","Components.Bind.ValueAttribute":"Direction","Common.TypeNameIdentifier":"BaseMatSortHeaderRow"}},{"HashCode":1008371480,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTabBar","Attributes":[{"Name":"@bind-Active","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatTabBar","Attributes":[{"Name":"@bind-Active:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Active:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Active","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Active"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTabBar","Components.Bind.ValueAttribute":"Active","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":273424824,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTabBar","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatTabBar","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTabBar","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":1009154672,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTabBar","Attributes":[{"Name":"@bind-Active","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatTabBar","Attributes":[{"Name":"@bind-Active:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Active:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Active","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Active"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTabBar","Components.Bind.ValueAttribute":"Active","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":-1970589465,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTabBar","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatTabBar","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTabBar","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"BaseMatTabBar"}},{"HashCode":1361935069,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTable","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTable","Attributes":[{"Name":"@bind-PageSize","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatTable","Attributes":[{"Name":"@bind-PageSize:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PageSize:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageSize","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageSize"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"PageSizeChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTable","Components.Bind.ValueAttribute":"PageSize","Common.TypeNameIdentifier":"BaseMatTable"}},{"HashCode":749465220,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTable","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTable","Attributes":[{"Name":"@bind-CurrentPage","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatTable","Attributes":[{"Name":"@bind-CurrentPage:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentPage:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPage","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPage"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CurrentPageChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTable","Components.Bind.ValueAttribute":"CurrentPage","Common.TypeNameIdentifier":"BaseMatTable"}},{"HashCode":595378401,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTable","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTable","Attributes":[{"Name":"@bind-PageSize","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatTable","Attributes":[{"Name":"@bind-PageSize:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PageSize:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageSize","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageSize"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"PageSizeChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTable","Components.Bind.ValueAttribute":"PageSize","Common.TypeNameIdentifier":"BaseMatTable"}},{"HashCode":2083544080,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTable","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTable","Attributes":[{"Name":"@bind-CurrentPage","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatTable","Attributes":[{"Name":"@bind-CurrentPage:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentPage:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPage","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPage"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CurrentPageChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTable","Components.Bind.ValueAttribute":"CurrentPage","Common.TypeNameIdentifier":"BaseMatTable"}},{"HashCode":-734250212,"Kind":"Components.Bind","Name":"MatBlazor.BaseTableRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseTableRow","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseTableRow","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseTableRow","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"BaseTableRow"}},{"HashCode":315034179,"Kind":"Components.Bind","Name":"MatBlazor.BaseTableRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseTableRow","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseTableRow","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseTableRow","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"BaseTableRow"}},{"HashCode":-1814864949,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTabGroup","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseMatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BaseMatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTabGroup","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"BaseMatTabGroup"}},{"HashCode":-176619886,"Kind":"Components.Bind","Name":"MatBlazor.BaseMatTabGroup","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.BaseMatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.BaseMatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.BaseMatTabGroup","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"BaseMatTabGroup"}},{"HashCode":-1552054300,"Kind":"Components.Bind","Name":"MatBlazor.MatStringField","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatStringField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatStringField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatStringField","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatStringField"}},{"HashCode":494319957,"Kind":"Components.Bind","Name":"MatBlazor.MatStringField","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatStringField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatStringField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatStringField","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatStringField"}},{"HashCode":13402,"Kind":"Components.Bind","Name":"MatBlazor.MatTextField<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTextField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTextField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatTextField<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatTextField"}},{"HashCode":920022190,"Kind":"Components.Bind","Name":"MatBlazor.MatTextField<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTextField","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTextField","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatTextField<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatTextField"}},{"HashCode":-1128933991,"Kind":"Components.Bind","Name":"MatBlazor.MatTreeView<TNode>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTreeView","Attributes":[{"Name":"@bind-SelectedNode","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTreeView","Attributes":[{"Name":"@bind-SelectedNode:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedNode:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedNode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNode>","Documentation":"Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedNode"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedNodeChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTreeView<TNode>","Components.Bind.ValueAttribute":"SelectedNode","Common.TypeNameIdentifier":"MatTreeView"}},{"HashCode":41488630,"Kind":"Components.Bind","Name":"MatBlazor.MatTreeView<TNode>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTreeView","Attributes":[{"Name":"@bind-SelectedNode","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTreeView","Attributes":[{"Name":"@bind-SelectedNode:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedNode:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedNode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNode>","Documentation":"Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedNode"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedNodeChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTreeView<TNode>","Components.Bind.ValueAttribute":"SelectedNode","Common.TypeNameIdentifier":"MatTreeView"}},{"HashCode":440080802,"Kind":"Components.Bind","Name":"MatBlazor.MatAutocompleteList<TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAutocompleteList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatAutocompleteList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatAutocompleteList<TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatAutocompleteList"}},{"HashCode":-364923302,"Kind":"Components.Bind","Name":"MatBlazor.MatAutocompleteList<TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAutocompleteList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatAutocompleteList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatAutocompleteList<TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatAutocompleteList"}},{"HashCode":-642958970,"Kind":"Components.Bind","Name":"MatBlazor.MatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatAutocomplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatAutocomplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":-189008550,"Kind":"Components.Bind","Name":"MatBlazor.MatAutocomplete<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatAutocomplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatAutocomplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatAutocomplete<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatAutocomplete"}},{"HashCode":-117634839,"Kind":"Components.Bind","Name":"MatBlazor.MatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatCheckboxInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatCheckboxInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatCheckboxInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatCheckboxInternal"}},{"HashCode":-1794547799,"Kind":"Components.Bind","Name":"MatBlazor.MatCheckboxInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatCheckboxInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatCheckboxInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatCheckboxInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatCheckboxInternal"}},{"HashCode":-1940944880,"Kind":"Components.Bind","Name":"MatBlazor.MatDatePickerInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDatePickerInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatDatePickerInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatDatePickerInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatDatePickerInternal"}},{"HashCode":2123792150,"Kind":"Components.Bind","Name":"MatBlazor.MatDatePickerInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDatePickerInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatDatePickerInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatDatePickerInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatDatePickerInternal"}},{"HashCode":113561018,"Kind":"Components.Bind","Name":"MatBlazor.MatDialog","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDialog","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatDialog","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatDialog","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"MatDialog"}},{"HashCode":-1937320986,"Kind":"Components.Bind","Name":"MatBlazor.MatDialog","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDialog","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatDialog","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatDialog","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"MatDialog"}},{"HashCode":2040213081,"Kind":"Components.Bind","Name":"MatBlazor.MatDrawer","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatDrawer","Attributes":[{"Name":"@bind-Opened","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatDrawer","Attributes":[{"Name":"@bind-Opened:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Opened:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Opened"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"OpenedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatDrawer","Components.Bind.ValueAttribute":"Opened","Common.TypeNameIdentifier":"MatDrawer"}},{"HashCode":-115624150,"Kind":"Components.Bind","Name":"MatBlazor.MatDrawer","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatDrawer","Attributes":[{"Name":"@bind-Opened","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatDrawer","Attributes":[{"Name":"@bind-Opened:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Opened:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Opened","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Opened"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"OpenedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatDrawer","Components.Bind.ValueAttribute":"Opened","Common.TypeNameIdentifier":"MatDrawer"}},{"HashCode":1919137521,"Kind":"Components.Bind","Name":"MatBlazor.MatIconButton","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatIconButton","Attributes":[{"Name":"@bind-Toggled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatIconButton","Attributes":[{"Name":"@bind-Toggled:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Toggled:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Toggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Toggled"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ToggledChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatIconButton","Components.Bind.ValueAttribute":"Toggled","Common.TypeNameIdentifier":"MatIconButton"}},{"HashCode":1289028954,"Kind":"Components.Bind","Name":"MatBlazor.MatIconButton","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatIconButton","Attributes":[{"Name":"@bind-Toggled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatIconButton","Attributes":[{"Name":"@bind-Toggled:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Toggled:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Toggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Toggled"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ToggledChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatIconButton","Components.Bind.ValueAttribute":"Toggled","Common.TypeNameIdentifier":"MatIconButton"}},{"HashCode":-1843322494,"Kind":"Components.Bind","Name":"MatBlazor.MatNavItem","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavItem","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatNavItem","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatNavItem","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"MatNavItem"}},{"HashCode":1878380083,"Kind":"Components.Bind","Name":"MatBlazor.MatNavItem","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavItem","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatNavItem","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatNavItem","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"MatNavItem"}},{"HashCode":-1943397973,"Kind":"Components.Bind","Name":"MatBlazor.MatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavSubMenu","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatNavSubMenu","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatNavSubMenu","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":-318069118,"Kind":"Components.Bind","Name":"MatBlazor.MatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNavSubMenu","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatNavSubMenu","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatNavSubMenu","Components.Bind.ValueAttribute":"Expanded","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":-1224285566,"Kind":"Components.Bind","Name":"MatBlazor.MatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavSubMenu","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatNavSubMenu","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatNavSubMenu","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":-612840117,"Kind":"Components.Bind","Name":"MatBlazor.MatNavSubMenu","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNavSubMenu","Attributes":[{"Name":"@bind-Expanded","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatNavSubMenu","Attributes":[{"Name":"@bind-Expanded:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Expanded:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Expanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Expanded"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ExpandedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatNavSubMenu","Components.Bind.ValueAttribute":"Expanded","Common.TypeNameIdentifier":"MatNavSubMenu"}},{"HashCode":-1910961543,"Kind":"Components.Bind","Name":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatNumericUpDownFieldInternal"}},{"HashCode":635826839,"Kind":"Components.Bind","Name":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatNumericUpDownFieldInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatNumericUpDownFieldInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatNumericUpDownFieldInternal"}},{"HashCode":-956503145,"Kind":"Components.Bind","Name":"MatBlazor.MatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatRadioGroupInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatRadioGroupInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":-1104013184,"Kind":"Components.Bind","Name":"MatBlazor.MatRadioGroupInternal<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatRadioGroupInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatRadioGroupInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatRadioGroupInternal<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatRadioGroupInternal"}},{"HashCode":659402047,"Kind":"Components.Bind","Name":"MatBlazor.CoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CoreMatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"CoreMatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.CoreMatSelect<TValue, TKey>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"CoreMatSelect"}},{"HashCode":217270197,"Kind":"Components.Bind","Name":"MatBlazor.CoreMatSelect<TValue, TKey>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.CoreMatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.CoreMatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.CoreMatSelect<TValue, TKey>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"CoreMatSelect"}},{"HashCode":1764843497,"Kind":"Components.Bind","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CoreMatSelectValue","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"CoreMatSelectValue","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":-2145097300,"Kind":"Components.Bind","Name":"MatBlazor.CoreMatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.CoreMatSelectValue","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.CoreMatSelectValue","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.CoreMatSelectValue<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"CoreMatSelectValue"}},{"HashCode":-1315616549,"Kind":"Components.Bind","Name":"MatBlazor.MatSelect<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSelect"}},{"HashCode":-777124788,"Kind":"Components.Bind","Name":"MatBlazor.MatSelect<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSelect"}},{"HashCode":773991476,"Kind":"Components.Bind","Name":"MatBlazor.MatSelectItem<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSelectItem","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSelectItem","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSelectItem<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":-164437461,"Kind":"Components.Bind","Name":"MatBlazor.MatSelectItem<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSelectItem","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSelectItem","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSelectItem<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSelectItem"}},{"HashCode":1392907409,"Kind":"Components.Bind","Name":"MatBlazor.MatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSelectValue","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSelectValue","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":-361568047,"Kind":"Components.Bind","Name":"MatBlazor.MatSelectValue<TValue, TItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSelectValue","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSelectValue","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSelectValue<TValue, TItem>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSelectValue"}},{"HashCode":961438898,"Kind":"Components.Bind","Name":"MatBlazor.MatSlider<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSlider","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSlider<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSlider"}},{"HashCode":582734113,"Kind":"Components.Bind","Name":"MatBlazor.MatSlider<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSlider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSlider","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSlider<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSlider"}},{"HashCode":-838033196,"Kind":"Components.Bind","Name":"MatBlazor.MatSlideToggle<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSlideToggle","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSlideToggle","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSlideToggle<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSlideToggle"}},{"HashCode":-361340511,"Kind":"Components.Bind","Name":"MatBlazor.MatSlideToggle<TValue>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSlideToggle","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSlideToggle","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatSlideToggle<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatSlideToggle"}},{"HashCode":718435014,"Kind":"Components.Bind","Name":"MatBlazor.MatSnackbar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSnackbar","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSnackbar","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatSnackbar","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"MatSnackbar"}},{"HashCode":-844916338,"Kind":"Components.Bind","Name":"MatBlazor.MatSnackbar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSnackbar","Attributes":[{"Name":"@bind-IsOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSnackbar","Attributes":[{"Name":"@bind-IsOpen:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-IsOpen:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsOpen"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"IsOpenChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatSnackbar","Components.Bind.ValueAttribute":"IsOpen","Common.TypeNameIdentifier":"MatSnackbar"}},{"HashCode":792970693,"Kind":"Components.Bind","Name":"MatBlazor.MatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSortHeaderRow","Attributes":[{"Name":"@bind-SortId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSortHeaderRow","Attributes":[{"Name":"@bind-SortId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SortId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SortId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SortId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SortIdChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatSortHeaderRow","Components.Bind.ValueAttribute":"SortId","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":269344407,"Kind":"Components.Bind","Name":"MatBlazor.MatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatSortHeaderRow","Attributes":[{"Name":"@bind-Direction","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatSortHeaderRow","Attributes":[{"Name":"@bind-Direction:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Direction:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Direction","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","IsEnum":true,"Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Direction"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DirectionChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatSortHeaderRow","Components.Bind.ValueAttribute":"Direction","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":1911846383,"Kind":"Components.Bind","Name":"MatBlazor.MatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSortHeaderRow","Attributes":[{"Name":"@bind-SortId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSortHeaderRow","Attributes":[{"Name":"@bind-SortId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SortId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SortId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SortId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SortIdChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatSortHeaderRow","Components.Bind.ValueAttribute":"SortId","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":492564420,"Kind":"Components.Bind","Name":"MatBlazor.MatSortHeaderRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatSortHeaderRow","Attributes":[{"Name":"@bind-Direction","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatSortHeaderRow","Attributes":[{"Name":"@bind-Direction:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Direction:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Direction","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>","IsEnum":true,"Documentation":"Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Direction"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DirectionChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatSortHeaderRow","Components.Bind.ValueAttribute":"Direction","Common.TypeNameIdentifier":"MatSortHeaderRow"}},{"HashCode":1357237434,"Kind":"Components.Bind","Name":"MatBlazor.MatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTabBar","Attributes":[{"Name":"@bind-Active","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTabBar","Attributes":[{"Name":"@bind-Active:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Active:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Active","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Active"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTabBar","Components.Bind.ValueAttribute":"Active","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":-1935909827,"Kind":"Components.Bind","Name":"MatBlazor.MatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTabBar","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTabBar","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTabBar","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":-1632706907,"Kind":"Components.Bind","Name":"MatBlazor.MatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTabBar","Attributes":[{"Name":"@bind-Active","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTabBar","Attributes":[{"Name":"@bind-Active:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Active:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Active","TypeName":"Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>","Documentation":"Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Active"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTabBar","Components.Bind.ValueAttribute":"Active","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":-532292134,"Kind":"Components.Bind","Name":"MatBlazor.MatTabBar","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTabBar","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTabBar","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTabBar","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"MatTabBar"}},{"HashCode":-761302537,"Kind":"Components.Bind","Name":"MatBlazor.MatTable<TableItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTable","Attributes":[{"Name":"@bind-PageSize","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTable","Attributes":[{"Name":"@bind-PageSize:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PageSize:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageSize","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageSize"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"PageSizeChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTable<TableItem>","Components.Bind.ValueAttribute":"PageSize","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":-2068706164,"Kind":"Components.Bind","Name":"MatBlazor.MatTable<TableItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTable","Attributes":[{"Name":"@bind-CurrentPage","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTable","Attributes":[{"Name":"@bind-CurrentPage:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentPage:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPage","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPage"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CurrentPageChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTable<TableItem>","Components.Bind.ValueAttribute":"CurrentPage","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":1665428767,"Kind":"Components.Bind","Name":"MatBlazor.MatTable<TableItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTable","Attributes":[{"Name":"@bind-PageSize","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTable","Attributes":[{"Name":"@bind-PageSize:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-PageSize:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-PageSize","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"PageSize"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"PageSizeChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTable<TableItem>","Components.Bind.ValueAttribute":"PageSize","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":1371744923,"Kind":"Components.Bind","Name":"MatBlazor.MatTable<TableItem>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTable","Attributes":[{"Name":"@bind-CurrentPage","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTable","Attributes":[{"Name":"@bind-CurrentPage:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentPage:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPage","TypeName":"System.Action<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPage' property and a change event delegate to the 'CurrentPageChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPage"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CurrentPageChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTable<TableItem>","Components.Bind.ValueAttribute":"CurrentPage","Common.TypeNameIdentifier":"MatTable"}},{"HashCode":-127946143,"Kind":"Components.Bind","Name":"MatBlazor.TableRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TableRow","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"TableRow","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.TableRow","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"TableRow"}},{"HashCode":1380605099,"Kind":"Components.Bind","Name":"MatBlazor.TableRow","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.TableRow","Attributes":[{"Name":"@bind-Selected","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.TableRow","Attributes":[{"Name":"@bind-Selected:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Selected:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selected"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"SelectedChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.TableRow","Components.Bind.ValueAttribute":"Selected","Common.TypeNameIdentifier":"TableRow"}},{"HashCode":2102601661,"Kind":"Components.Bind","Name":"MatBlazor.MatTabGroup","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTabGroup","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"MatTabGroup"}},{"HashCode":131281537,"Kind":"Components.Bind","Name":"MatBlazor.MatTabGroup","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatTabGroup","Attributes":[{"Name":"@bind-ActiveIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveIndexChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"MatBlazor.MatTabGroup","Components.Bind.ValueAttribute":"ActiveIndex","Common.TypeNameIdentifier":"MatTabGroup"}},{"HashCode":1035963434,"Kind":"Components.Bind","Name":"MatBlazor.MatInputTextComponent<T>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatInputTextComponent","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatInputTextComponent","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatInputTextComponent<T>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatInputTextComponent"}},{"HashCode":-1106581937,"Kind":"Components.Bind","Name":"MatBlazor.MatInputTextComponent<T>","AssemblyName":"MatBlazor","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MatBlazor.MatInputTextComponent","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"MatBlazor.MatInputTextComponent","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"MatBlazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"MatBlazor.MatInputTextComponent<T>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"MatInputTextComponent"}},{"HashCode":-430203784,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":-1100620278,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":556281347,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":1883545775,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":-138454584,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":1254467101,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":-1428121970,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":1230901276,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":1067270308,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1105711556,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":1302743319,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-1955468612,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputText"}},{"HashCode":1573018933,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":807720999,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":1925038139,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Ref"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.TypeName":"Microsoft.AspNetCore.Components.Ref","Common.ClassifyAttributesOnly":"True"}},{"HashCode":549539769,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Key"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.TypeName":"Microsoft.AspNetCore.Components.Key","Common.ClassifyAttributesOnly":"True"}}],"CSharpLanguageVersion":1000},"RootNamespace":"NoticeApp","Documents":[{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Delete.razor","TargetPath":"Pages\\Notices\\Delete.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Index.razor","TargetPath":"Pages\\Notices\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Edit.razor","TargetPath":"Pages\\Notices\\Edit.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Error.cshtml","TargetPath":"Pages\\Error.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Manage.razor","TargetPath":"Pages\\Notices\\Manage.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Counter.razor","TargetPath":"Pages\\Counter.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\FetchData.razor","TargetPath":"Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Components\\DeleteDialog.razor","TargetPath":"Pages\\Notices\\Components\\DeleteDialog.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Components\\EditorForm.razor","TargetPath":"Pages\\Notices\\Components\\EditorForm.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Components\\ManageBy.razor","TargetPath":"Pages\\Notices\\Components\\ManageBy.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Create.razor","TargetPath":"Pages\\Notices\\Create.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Notices\\Details.razor","TargetPath":"Pages\\Notices\\Details.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\_Layout.cshtml","TargetPath":"Pages\\_Layout.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Shared\\LoginDisplay.razor","TargetPath":"Shared\\LoginDisplay.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Areas\\Identity\\Pages\\Account\\LogOut.cshtml","TargetPath":"Areas\\Identity\\Pages\\Account\\LogOut.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml","TargetPath":"Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\rlady\\OneDrive\\문서\\NoticesApp\\NoticeApp\\Pages\\_Host.cshtml","TargetPath":"Pages\\_Host.cshtml","FileKind":"mvc"}],"SerializationFormat":"0.3"}